/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.opensim.view.motions;

import javax.swing.JComboBox;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Ayman-NMBL
 */
public class JSensorLayoutPanel extends javax.swing.JPanel {

    /**
     * @return the layoutOptions
     */
    public SensorLayoutOptions getLayoutOptions() {
        return layoutOptions;
    }

    /**
     * @param layoutOptions the layoutOptions to set
     */
    public void setLayoutOptions(SensorLayoutOptions layoutOptions) {
        this.layoutOptions = layoutOptions;
    }

    RotationSpinnerListModel xSpinnerModel=new RotationSpinnerListModel(0., -270., 360., 90.);
    RotationSpinnerListModel ySpinnerModel=new RotationSpinnerListModel(0., -270., 360., 90.);
    RotationSpinnerListModel zSpinnerModel=new RotationSpinnerListModel(0., -270., 360., 90.);
    MotionDisplayer displayer;
    private SensorLayoutOptions layoutOptions;
    /**
     * Creates new form JSensorLayoutPanel
     */
    public JSensorLayoutPanel(SensorLayoutOptions options) {
        layoutOptions = options;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jShapeComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLayoutComboBox = new javax.swing.JComboBox();
        jTransformDataPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        XSpinner = new javax.swing.JSpinner();
        YSpinner = new javax.swing.JSpinner();
        ZSpinner = new javax.swing.JSpinner();

        jShapeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Triad", "Large Triad", "Prism", "Ellipsoid" }));
        jShapeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShapeComboBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.jLabel1.text")); // NOI18N

        jLayoutComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "At Origin", "Evenly spaced along X", "Evenly spaced along Y", "Evenly spaced along Z", "Half circle in Y-Z plane", "Place at matching segments on current model" }));
        jLayoutComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLayoutComboBoxActionPerformed(evt);
            }
        });

        jTransformDataPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.jLabel5.text")); // NOI18N

        XSpinner.setModel(xSpinnerModel);
        XSpinner.setToolTipText(org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.XSpinner.toolTipText")); // NOI18N
        XSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                XSpinnerStateChanged(evt);
            }
        });

        YSpinner.setModel(ySpinnerModel);
        YSpinner.setToolTipText(org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.YSpinner.toolTipText")); // NOI18N
        YSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                YSpinnerStateChanged(evt);
            }
        });

        ZSpinner.setModel(zSpinnerModel);
        ZSpinner.setToolTipText(org.openide.util.NbBundle.getMessage(JSensorLayoutPanel.class, "JSensorLayoutPanel.ZSpinner.toolTipText")); // NOI18N
        ZSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ZSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jTransformDataPanelLayout = new javax.swing.GroupLayout(jTransformDataPanel);
        jTransformDataPanel.setLayout(jTransformDataPanelLayout);
        jTransformDataPanelLayout.setHorizontalGroup(
            jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTransformDataPanelLayout.createSequentialGroup()
                .addGroup(jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(XSpinner)
                    .addComponent(ZSpinner)
                    .addComponent(YSpinner))
                .addContainerGap())
        );
        jTransformDataPanelLayout.setVerticalGroup(
            jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTransformDataPanelLayout.createSequentialGroup()
                .addGroup(jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(XSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jTransformDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ZSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(jLayoutComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTransformDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLayoutComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTransformDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ZSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ZSpinnerStateChanged
        double delta = getRotationAngleChange(evt);
        updateTransform(xSpinnerModel.getLastValue(),
            ySpinnerModel.getLastValue(),
            zSpinnerModel.getLastValue());
    }//GEN-LAST:event_ZSpinnerStateChanged

    private void YSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_YSpinnerStateChanged
        double delta = getRotationAngleChange(evt);
        //updateTransform(0., delta, 0.);
        updateTransform(xSpinnerModel.getLastValue(),
            ySpinnerModel.getLastValue(),
            zSpinnerModel.getLastValue());
        // TODO add your handling code here:
    }//GEN-LAST:event_YSpinnerStateChanged

    private void XSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_XSpinnerStateChanged
        double delta = getRotationAngleChange(evt);
        //updateTransform(delta, 0., 0.);
        updateTransform(xSpinnerModel.getLastValue(),
            ySpinnerModel.getLastValue(),
            zSpinnerModel.getLastValue());

        // TODO add your handling code here:
    }//GEN-LAST:event_XSpinnerStateChanged

    private void jLayoutComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLayoutComboBoxActionPerformed
        // TODO add your handling code here:
        JComboBox cb = (JComboBox)evt.getSource();
        int index =  cb.getSelectedIndex();
        layoutOptions.setSensorLayout(index);
    }//GEN-LAST:event_jLayoutComboBoxActionPerformed

    private void jShapeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShapeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jShapeComboBoxActionPerformed

    class RotationSpinnerListModel extends SpinnerNumberModel {
    private double lastValue;

    public RotationSpinnerListModel(double initial, double min, double max, double step) {
        super(initial, min, max, step);
        setLastValue(initial);
    }

        public double getLastValue() {
            return lastValue;
        }

        public void setLastValue(double lastValue) {
            this.lastValue = lastValue;
        }

    } //RotationSpinnerListModel

    public double[] getRotations() {
        return layoutOptions.getRotations();
    }
    private void updateTransform(double xRot, double yRot, double zRot) {
        layoutOptions.setRotations(new double[]{xRot, yRot, zRot});
    }

    private double getRotationAngleChange(final javax.swing.event.ChangeEvent evt) {
// TODO add your handling code here:
        RotationSpinnerListModel numberModel = (RotationSpinnerListModel)((JSpinner)evt.getSource()).getModel();
        double newValue = numberModel.getNumber().doubleValue();
        double delta = newValue-numberModel.getLastValue();
        numberModel.setLastValue(newValue);
        return delta;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner XSpinner;
    private javax.swing.JSpinner YSpinner;
    private javax.swing.JSpinner ZSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> jLayoutComboBox;
    private javax.swing.JComboBox<String> jShapeComboBox;
    private javax.swing.JPanel jTransformDataPanel;
    // End of variables declaration//GEN-END:variables
}
