/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  A class to specify a filter to be used to iterate through components. More <br>
 *  flexible than filtering based on Type only. To write your custom filter, <br>
 *  extend this class and implement the isMatch() and clone() methods.
 */
public class ComponentFilter {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public ComponentFilter(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ComponentFilter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimCommonJNI.delete_ComponentFilter(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   *  This is the meat of the ComponentFilter, returns false if the passed in <br>
   *     component should be skipped over. 
   */
  public boolean isMatch(Component comp) {
    return opensimCommonJNI.ComponentFilter_isMatch(swigCPtr, this, Component.getCPtr(comp), comp);
  }

  /**
   *  clone() method needed to make a copy of the filter.  
   */
  public ComponentFilter clone() {
    long cPtr = opensimCommonJNI.ComponentFilter_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ComponentFilter(cPtr, true);
  }

}
