/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;
import javax.swing.JOptionPane;import java.awt.GraphicsEnvironment;
public class opensimSimbodyJNI {

  static {
      try{
          // All OpenSim classes required for GUI operation.
          System.loadLibrary("osimJavaJNI");
      }
      catch(UnsatisfiedLinkError e){
          String OS = System.getProperty("os.name").toLowerCase();
          String tip = "";
          if (OS.indexOf("win") >= 0) {
              tip = "\nMake sure OpenSim's bin directory is on your PATH.";
          } else if (OS.indexOf("mac") >= 0) {
              // Nothing for now; our use of RPATH means we were probably able
              // to locate the OpenSim dynamic libraries.
          } else /* linux */ {
              // Nothing for now; our use of RPATH means we were probably able
              // to locate the OpenSim dynamic libraries.
          }
          String msg = new String(
                  "Failed to load one or more dynamic libraries for OpenSim.\n"
                  + e + tip);

          String javaHome = System.getProperties().getProperty("java.home");
          boolean inMatlab = javaHome.toLowerCase().indexOf("matlab") >= 0;
          if (inMatlab) {
              msg +=  "\nSee https://simtk-confluence.stanford.edu/display/OpenSim40/Scripting+with+Matlab";
          }
          
          System.out.println(msg);
          String title = "Error: Failed to load OpenSim libraries";
          if (!GraphicsEnvironment.isHeadless()) {
              new JOptionPane(msg, JOptionPane.ERROR_MESSAGE)
                    .createDialog(null, title).setVisible(true);
          }
      }
  }

  public final static native long new_StdVectorUnsigned__SWIG_0();
  public final static native long new_StdVectorUnsigned__SWIG_1(long jarg1);
  public final static native long StdVectorUnsigned_size(long jarg1, StdVectorUnsigned jarg1_);
  public final static native long StdVectorUnsigned_capacity(long jarg1, StdVectorUnsigned jarg1_);
  public final static native void StdVectorUnsigned_reserve(long jarg1, StdVectorUnsigned jarg1_, long jarg2);
  public final static native boolean StdVectorUnsigned_isEmpty(long jarg1, StdVectorUnsigned jarg1_);
  public final static native void StdVectorUnsigned_clear(long jarg1, StdVectorUnsigned jarg1_);
  public final static native void StdVectorUnsigned_add(long jarg1, StdVectorUnsigned jarg1_, long jarg2);
  public final static native long StdVectorUnsigned_get(long jarg1, StdVectorUnsigned jarg1_, int jarg2);
  public final static native void StdVectorUnsigned_set(long jarg1, StdVectorUnsigned jarg1_, int jarg2, long jarg3);
  public final static native void delete_StdVectorUnsigned(long jarg1);
  public final static native long new_StdVectorInt__SWIG_0();
  public final static native long new_StdVectorInt__SWIG_1(long jarg1);
  public final static native long StdVectorInt_size(long jarg1, StdVectorInt jarg1_);
  public final static native long StdVectorInt_capacity(long jarg1, StdVectorInt jarg1_);
  public final static native void StdVectorInt_reserve(long jarg1, StdVectorInt jarg1_, long jarg2);
  public final static native boolean StdVectorInt_isEmpty(long jarg1, StdVectorInt jarg1_);
  public final static native void StdVectorInt_clear(long jarg1, StdVectorInt jarg1_);
  public final static native void StdVectorInt_add(long jarg1, StdVectorInt jarg1_, int jarg2);
  public final static native int StdVectorInt_get(long jarg1, StdVectorInt jarg1_, int jarg2);
  public final static native void StdVectorInt_set(long jarg1, StdVectorInt jarg1_, int jarg2, int jarg3);
  public final static native void delete_StdVectorInt(long jarg1);
  public final static native long new_StdVectorDouble__SWIG_0();
  public final static native long new_StdVectorDouble__SWIG_1(long jarg1);
  public final static native long StdVectorDouble_size(long jarg1, StdVectorDouble jarg1_);
  public final static native long StdVectorDouble_capacity(long jarg1, StdVectorDouble jarg1_);
  public final static native void StdVectorDouble_reserve(long jarg1, StdVectorDouble jarg1_, long jarg2);
  public final static native boolean StdVectorDouble_isEmpty(long jarg1, StdVectorDouble jarg1_);
  public final static native void StdVectorDouble_clear(long jarg1, StdVectorDouble jarg1_);
  public final static native void StdVectorDouble_add(long jarg1, StdVectorDouble jarg1_, double jarg2);
  public final static native double StdVectorDouble_get(long jarg1, StdVectorDouble jarg1_, int jarg2);
  public final static native void StdVectorDouble_set(long jarg1, StdVectorDouble jarg1_, int jarg2, double jarg3);
  public final static native void delete_StdVectorDouble(long jarg1);
  public final static native long new_StdVectorString__SWIG_0();
  public final static native long new_StdVectorString__SWIG_1(long jarg1);
  public final static native long StdVectorString_size(long jarg1, StdVectorString jarg1_);
  public final static native long StdVectorString_capacity(long jarg1, StdVectorString jarg1_);
  public final static native void StdVectorString_reserve(long jarg1, StdVectorString jarg1_, long jarg2);
  public final static native boolean StdVectorString_isEmpty(long jarg1, StdVectorString jarg1_);
  public final static native void StdVectorString_clear(long jarg1, StdVectorString jarg1_);
  public final static native void StdVectorString_add(long jarg1, StdVectorString jarg1_, String jarg2);
  public final static native String StdVectorString_get(long jarg1, StdVectorString jarg1_, int jarg2);
  public final static native void StdVectorString_set(long jarg1, StdVectorString jarg1_, int jarg2, String jarg3);
  public final static native void delete_StdVectorString(long jarg1);
  public final static native double SimTK_PI_get();
  public final static native double SimTK_E_get();
  public final static native double SimTK_LN2_get();
  public final static native double SimTK_LN10_get();
  public final static native double SimTK_LOG2E_get();
  public final static native double SimTK_LOG10E_get();
  public final static native double SimTK_SQRT2_get();
  public final static native double SimTK_OOSQRT2_get();
  public final static native double SimTK_CBRT2_get();
  public final static native double SimTK_OOCBRT2_get();
  public final static native double SimTK_SIXRT2_get();
  public final static native double SimTK_OOSIXRT2_get();
  public final static native double SimTK_SQRT3_get();
  public final static native double SimTK_CBRT3_get();
  public final static native double SimTK_AVOGADROS_NUMBER_get();
  public final static native double SimTK_MASS_OF_PROTON_IN_MD_get();
  public final static native double SimTK_MASS_OF_NEUTRON_IN_MD_get();
  public final static native double SimTK_MASS_OF_ELECTRON_IN_MD_get();
  public final static native double SimTK_CHARGE_OF_PROTON_IN_SI_get();
  public final static native double SimTK_CHARGE_OF_PROTON_IN_MD_get();
  public final static native double SimTK_MOLAR_CHARGE_IN_SI_get();
  public final static native double SimTK_MOLAR_CHARGE_IN_MD_get();
  public final static native double SimTK_LIGHTSPEED_IN_SI_get();
  public final static native double SimTK_LIGHTSPEED_IN_MD_get();
  public final static native double SimTK_GRAVITATIONAL_CONSTANT_IN_SI_get();
  public final static native double SimTK_GRAVITATIONAL_CONSTANT_IN_MD_get();
  public final static native double SimTK_MAGNETIC_PERMEABILITY_IN_SI_get();
  public final static native double SimTK_MAGNETIC_PERMEABILITY_IN_MD_get();
  public final static native double SimTK_ELECTRIC_PERMITTIVITY_IN_SI_get();
  public final static native double SimTK_ELECTRIC_PERMITTIVITY_IN_MD_get();
  public final static native double SimTK_COULOMB_CONSTANT_IN_SI_get();
  public final static native double SimTK_COULOMB_CONSTANT_IN_MD_get();
  public final static native double SimTK_COULOMB_CONSTANT_IN_KCAL_ANGSTROM_get();
  public final static native double SimTK_MOLAR_GAS_CONSTANT_SI_get();
  public final static native double SimTK_MOLAR_GAS_CONSTANT_MD_get();
  public final static native double SimTK_MOLAR_GAS_CONSTANT_KCAL_ANGSTROM_get();
  public final static native double SimTK_BOLTZMANN_CONSTANT_SI_get();
  public final static native double SimTK_BOLTZMANN_CONSTANT_MD_get();
  public final static native double SimTK_BOLTZMANN_CONSTANT_KCAL_ANGSTROM_get();
  public final static native double SimTK_RADIAN_TO_DEGREE_get();
  public final static native double SimTK_DEGREE_TO_RADIAN_get();
  public final static native double SimTK_NS_TO_S_get();
  public final static native double SimTK_S_TO_NS_get();
  public final static native double SimTK_KCAL_TO_KJOULE_get();
  public final static native double SimTK_KJOULE_TO_KCAL_get();
  public final static native double SimTK_DALTON_TO_GRAM_get();
  public final static native double SimTK_E_TO_COULOMB_get();
  public final static native double SimTK_EV_TO_JOULE_get();
  public final static native int Vec2_size();
  public final static native int Vec2_nrow();
  public final static native int Vec2_ncol();
  public final static native long new_Vec2__SWIG_0();
  public final static native long new_Vec2__SWIG_1(long jarg1, Vec2 jarg1_);
  public final static native long new_Vec2__SWIG_2(double jarg1);
  public final static native long new_Vec2__SWIG_3(int jarg1);
  public final static native long new_Vec2__SWIG_4(double jarg1, double jarg2);
  public final static native long new_Vec2__SWIG_5(double jarg1, double jarg2, double jarg3);
  public final static native long new_Vec2__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Vec2__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Vec2__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Vec2__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_Vec2__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_Vec2__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native void Vec2_setToNaN(long jarg1, Vec2 jarg1_);
  public final static native void Vec2_setToZero(long jarg1, Vec2 jarg1_);
  public final static native boolean Vec2_isNaN(long jarg1, Vec2 jarg1_);
  public final static native boolean Vec2_isInf(long jarg1, Vec2 jarg1_);
  public final static native boolean Vec2_isFinite(long jarg1, Vec2 jarg1_);
  public final static native double Vec2_getDefaultTolerance();
  public final static native boolean Vec2_isNumericallyEqual__SWIG_2(long jarg1, Vec2 jarg1_, double jarg2, double jarg3);
  public final static native boolean Vec2_isNumericallyEqual__SWIG_3(long jarg1, Vec2 jarg1_, double jarg2);
  public final static native String Vec2_toString(long jarg1, Vec2 jarg1_);
  public final static native void Vec2_set(long jarg1, Vec2 jarg1_, int jarg2, double jarg3);
  public final static native double Vec2_get(long jarg1, Vec2 jarg1_, int jarg2);
  public final static native long Vec2_scalarEq(long jarg1, Vec2 jarg1_, double jarg2);
  public final static native long Vec2_scalarPlusEq(long jarg1, Vec2 jarg1_, double jarg2);
  public final static native long Vec2_scalarMinusEq(long jarg1, Vec2 jarg1_, double jarg2);
  public final static native long Vec2_scalarTimesEq(long jarg1, Vec2 jarg1_, double jarg2);
  public final static native long Vec2_scalarDivideEq(long jarg1, Vec2 jarg1_, double jarg2);
  public final static native void delete_Vec2(long jarg1);
  public final static native int Vec3_size();
  public final static native int Vec3_nrow();
  public final static native int Vec3_ncol();
  public final static native long new_Vec3__SWIG_0();
  public final static native long new_Vec3__SWIG_1(long jarg1, Vec3 jarg1_);
  public final static native long new_Vec3__SWIG_2(double jarg1);
  public final static native long new_Vec3__SWIG_3(int jarg1);
  public final static native long new_Vec3__SWIG_4(double jarg1, double jarg2);
  public final static native long new_Vec3__SWIG_5(double jarg1, double jarg2, double jarg3);
  public final static native long new_Vec3__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Vec3__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Vec3__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Vec3__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_Vec3__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_Vec3__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native void Vec3_setToNaN(long jarg1, Vec3 jarg1_);
  public final static native void Vec3_setToZero(long jarg1, Vec3 jarg1_);
  public final static native boolean Vec3_isNaN(long jarg1, Vec3 jarg1_);
  public final static native boolean Vec3_isInf(long jarg1, Vec3 jarg1_);
  public final static native boolean Vec3_isFinite(long jarg1, Vec3 jarg1_);
  public final static native double Vec3_getDefaultTolerance();
  public final static native boolean Vec3_isNumericallyEqual__SWIG_2(long jarg1, Vec3 jarg1_, double jarg2, double jarg3);
  public final static native boolean Vec3_isNumericallyEqual__SWIG_3(long jarg1, Vec3 jarg1_, double jarg2);
  public final static native String Vec3_toString(long jarg1, Vec3 jarg1_);
  public final static native void Vec3_set(long jarg1, Vec3 jarg1_, int jarg2, double jarg3);
  public final static native double Vec3_get(long jarg1, Vec3 jarg1_, int jarg2);
  public final static native long Vec3_scalarEq(long jarg1, Vec3 jarg1_, double jarg2);
  public final static native long Vec3_scalarPlusEq(long jarg1, Vec3 jarg1_, double jarg2);
  public final static native long Vec3_scalarMinusEq(long jarg1, Vec3 jarg1_, double jarg2);
  public final static native long Vec3_scalarTimesEq(long jarg1, Vec3 jarg1_, double jarg2);
  public final static native long Vec3_scalarDivideEq(long jarg1, Vec3 jarg1_, double jarg2);
  public final static native void delete_Vec3(long jarg1);
  public final static native int Vec4_size();
  public final static native int Vec4_nrow();
  public final static native int Vec4_ncol();
  public final static native long new_Vec4__SWIG_0();
  public final static native long new_Vec4__SWIG_1(long jarg1, Vec4 jarg1_);
  public final static native long new_Vec4__SWIG_2(double jarg1);
  public final static native long new_Vec4__SWIG_3(int jarg1);
  public final static native long new_Vec4__SWIG_4(double jarg1, double jarg2);
  public final static native long new_Vec4__SWIG_5(double jarg1, double jarg2, double jarg3);
  public final static native long new_Vec4__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Vec4__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Vec4__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Vec4__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_Vec4__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_Vec4__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native void Vec4_setToNaN(long jarg1, Vec4 jarg1_);
  public final static native void Vec4_setToZero(long jarg1, Vec4 jarg1_);
  public final static native boolean Vec4_isNaN(long jarg1, Vec4 jarg1_);
  public final static native boolean Vec4_isInf(long jarg1, Vec4 jarg1_);
  public final static native boolean Vec4_isFinite(long jarg1, Vec4 jarg1_);
  public final static native double Vec4_getDefaultTolerance();
  public final static native boolean Vec4_isNumericallyEqual__SWIG_2(long jarg1, Vec4 jarg1_, double jarg2, double jarg3);
  public final static native boolean Vec4_isNumericallyEqual__SWIG_3(long jarg1, Vec4 jarg1_, double jarg2);
  public final static native String Vec4_toString(long jarg1, Vec4 jarg1_);
  public final static native void Vec4_set(long jarg1, Vec4 jarg1_, int jarg2, double jarg3);
  public final static native double Vec4_get(long jarg1, Vec4 jarg1_, int jarg2);
  public final static native long Vec4_scalarEq(long jarg1, Vec4 jarg1_, double jarg2);
  public final static native long Vec4_scalarPlusEq(long jarg1, Vec4 jarg1_, double jarg2);
  public final static native long Vec4_scalarMinusEq(long jarg1, Vec4 jarg1_, double jarg2);
  public final static native long Vec4_scalarTimesEq(long jarg1, Vec4 jarg1_, double jarg2);
  public final static native long Vec4_scalarDivideEq(long jarg1, Vec4 jarg1_, double jarg2);
  public final static native void delete_Vec4(long jarg1);
  public final static native int Vec6_size();
  public final static native int Vec6_nrow();
  public final static native int Vec6_ncol();
  public final static native long new_Vec6__SWIG_0();
  public final static native long new_Vec6__SWIG_1(long jarg1, Vec6 jarg1_);
  public final static native long new_Vec6__SWIG_2(double jarg1);
  public final static native long new_Vec6__SWIG_3(int jarg1);
  public final static native long new_Vec6__SWIG_4(double jarg1, double jarg2);
  public final static native long new_Vec6__SWIG_5(double jarg1, double jarg2, double jarg3);
  public final static native long new_Vec6__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Vec6__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Vec6__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Vec6__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_Vec6__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_Vec6__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native void Vec6_setToNaN(long jarg1, Vec6 jarg1_);
  public final static native void Vec6_setToZero(long jarg1, Vec6 jarg1_);
  public final static native boolean Vec6_isNaN(long jarg1, Vec6 jarg1_);
  public final static native boolean Vec6_isInf(long jarg1, Vec6 jarg1_);
  public final static native boolean Vec6_isFinite(long jarg1, Vec6 jarg1_);
  public final static native double Vec6_getDefaultTolerance();
  public final static native boolean Vec6_isNumericallyEqual__SWIG_2(long jarg1, Vec6 jarg1_, double jarg2, double jarg3);
  public final static native boolean Vec6_isNumericallyEqual__SWIG_3(long jarg1, Vec6 jarg1_, double jarg2);
  public final static native String Vec6_toString(long jarg1, Vec6 jarg1_);
  public final static native void Vec6_set(long jarg1, Vec6 jarg1_, int jarg2, double jarg3);
  public final static native double Vec6_get(long jarg1, Vec6 jarg1_, int jarg2);
  public final static native long Vec6_scalarEq(long jarg1, Vec6 jarg1_, double jarg2);
  public final static native long Vec6_scalarPlusEq(long jarg1, Vec6 jarg1_, double jarg2);
  public final static native long Vec6_scalarMinusEq(long jarg1, Vec6 jarg1_, double jarg2);
  public final static native long Vec6_scalarTimesEq(long jarg1, Vec6 jarg1_, double jarg2);
  public final static native long Vec6_scalarDivideEq(long jarg1, Vec6 jarg1_, double jarg2);
  public final static native void delete_Vec6(long jarg1);
  public final static native int Mat33_size();
  public final static native int Mat33_nrow();
  public final static native int Mat33_ncol();
  public final static native long new_Mat33__SWIG_0();
  public final static native long new_Mat33__SWIG_1(long jarg1, Mat33 jarg1_);
  public final static native long new_Mat33__SWIG_2(double jarg1);
  public final static native long new_Mat33__SWIG_3(int jarg1);
  public final static native long new_Mat33__SWIG_4(double jarg1, double jarg2);
  public final static native long new_Mat33__SWIG_5(double jarg1, double jarg2, double jarg3);
  public final static native long new_Mat33__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Mat33__SWIG_7(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_Mat33__SWIG_8(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_Mat33__SWIG_9(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_Mat33__SWIG_10(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_Mat33__SWIG_11(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native long new_Mat33__SWIG_12(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10);
  public final static native long new_Mat33__SWIG_13(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11);
  public final static native long new_Mat33__SWIG_14(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12);
  public final static native long new_Mat33__SWIG_15(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13);
  public final static native long new_Mat33__SWIG_16(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14);
  public final static native long new_Mat33__SWIG_17(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15);
  public final static native long new_Mat33__SWIG_18(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, double jarg11, double jarg12, double jarg13, double jarg14, double jarg15, double jarg16);
  public final static native void Mat33_setToNaN(long jarg1, Mat33 jarg1_);
  public final static native void Mat33_setToZero(long jarg1, Mat33 jarg1_);
  public final static native boolean Mat33_isNaN(long jarg1, Mat33 jarg1_);
  public final static native boolean Mat33_isInf(long jarg1, Mat33 jarg1_);
  public final static native boolean Mat33_isFinite(long jarg1, Mat33 jarg1_);
  public final static native double Mat33_getDefaultTolerance();
  public final static native boolean Mat33_isNumericallyEqual__SWIG_0(long jarg1, Mat33 jarg1_, double jarg2, double jarg3);
  public final static native boolean Mat33_isNumericallyEqual__SWIG_1(long jarg1, Mat33 jarg1_, double jarg2);
  public final static native boolean Mat33_isNumericallySymmetric__SWIG_0(long jarg1, Mat33 jarg1_, double jarg2);
  public final static native boolean Mat33_isNumericallySymmetric__SWIG_1(long jarg1, Mat33 jarg1_);
  public final static native boolean Mat33_isExactlySymmetric(long jarg1, Mat33 jarg1_);
  public final static native String Mat33_toString(long jarg1, Mat33 jarg1_);
  public final static native double Mat33_get(long jarg1, Mat33 jarg1_, int jarg2, int jarg3);
  public final static native void Mat33_set(long jarg1, Mat33 jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native void delete_Mat33(long jarg1);
  public final static native long new_CoordinateAxis(int jarg1);
  public final static native long CoordinateAxis_getNextAxis(long jarg1, CoordinateAxis jarg1_);
  public final static native long CoordinateAxis_getPreviousAxis(long jarg1, CoordinateAxis jarg1_);
  public final static native long CoordinateAxis_getThirdAxis(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native boolean CoordinateAxis_isXAxis(long jarg1, CoordinateAxis jarg1_);
  public final static native boolean CoordinateAxis_isYAxis(long jarg1, CoordinateAxis jarg1_);
  public final static native boolean CoordinateAxis_isZAxis(long jarg1, CoordinateAxis jarg1_);
  public final static native boolean CoordinateAxis_isNextAxis(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native boolean CoordinateAxis_isPreviousAxis(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native boolean CoordinateAxis_isSameAxis(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native boolean CoordinateAxis_areAllSameAxes(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_, long jarg3, CoordinateAxis jarg3_);
  public final static native boolean CoordinateAxis_isDifferentAxis(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native boolean CoordinateAxis_areAllDifferentAxes(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_, long jarg3, CoordinateAxis jarg3_);
  public final static native boolean CoordinateAxis_isForwardCyclical(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native boolean CoordinateAxis_isReverseCyclical(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native int CoordinateAxis_dotProduct(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native int CoordinateAxis_crossProductSign(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native long CoordinateAxis_crossProductAxis(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native long CoordinateAxis_crossProduct(long jarg1, CoordinateAxis jarg1_, long jarg2, CoordinateAxis jarg2_, long jarg3);
  public final static native long CoordinateAxis_getCoordinateAxis(int jarg1);
  public final static native boolean CoordinateAxis_isIndexInRange(int jarg1);
  public final static native void delete_CoordinateAxis(long jarg1);
  public final static native long new_CoordinateDirection_Negative();
  public final static native void delete_CoordinateDirection_Negative(long jarg1);
  public final static native long new_CoordinateDirection__SWIG_0(long jarg1, CoordinateAxis jarg1_);
  public final static native long new_CoordinateDirection__SWIG_1(long jarg1, CoordinateAxis jarg1_, int jarg2);
  public final static native long CoordinateDirection_getAxis(long jarg1, CoordinateDirection jarg1_);
  public final static native int CoordinateDirection_getDirection(long jarg1, CoordinateDirection jarg1_);
  public final static native boolean CoordinateDirection_hasSameAxis(long jarg1, CoordinateDirection jarg1_, long jarg2, CoordinateDirection jarg2_);
  public final static native boolean CoordinateDirection_isSameAxisAndDirection(long jarg1, CoordinateDirection jarg1_, long jarg2, CoordinateDirection jarg2_);
  public final static native int CoordinateDirection_dotProduct(long jarg1, CoordinateDirection jarg1_, long jarg2, CoordinateDirection jarg2_);
  public final static native int CoordinateDirection_crossProductSign(long jarg1, CoordinateDirection jarg1_, long jarg2, CoordinateDirection jarg2_);
  public final static native long CoordinateDirection_crossProductAxis(long jarg1, CoordinateDirection jarg1_, long jarg2, CoordinateDirection jarg2_);
  public final static native long CoordinateDirection_crossProduct(long jarg1, CoordinateDirection jarg1_, long jarg2, CoordinateDirection jarg2_, long jarg3);
  public final static native void delete_CoordinateDirection(long jarg1);
  public final static native long new_UnitVec3__SWIG_0();
  public final static native long new_UnitVec3__SWIG_1(long jarg1, UnitVec3 jarg1_);
  public final static native long new_UnitVec3__SWIG_2(long jarg1, Vec3 jarg1_);
  public final static native long new_UnitVec3__SWIG_3(double jarg1, double jarg2, double jarg3);
  public final static native long new_UnitVec3__SWIG_4(long jarg1, CoordinateAxis jarg1_);
  public final static native long new_UnitVec3__SWIG_5(long jarg1, CoordinateDirection jarg1_);
  public final static native long new_UnitVec3__SWIG_6(int jarg1);
  public final static native long UnitVec3_asVec3(long jarg1, UnitVec3 jarg1_);
  public final static native long UnitVec3_negate(long jarg1, UnitVec3 jarg1_);
  public final static native long UnitVec3_abs(long jarg1, UnitVec3 jarg1_);
  public final static native long UnitVec3_perp(long jarg1, UnitVec3 jarg1_);
  public final static native long new_UnitVec3__SWIG_7(long jarg1, Vec3 jarg1_, boolean jarg2);
  public final static native long UnitVec3_getAs(long jarg1);
  public final static native void delete_UnitVec3(long jarg1);
  public final static native long new_Quaternion__SWIG_0();
  public final static native long new_Quaternion__SWIG_1(long jarg1, Quaternion jarg1_);
  public final static native long new_Quaternion__SWIG_2(double jarg1, double jarg2, double jarg3, double jarg4);
  public final static native long new_Quaternion__SWIG_3(long jarg1, Vec4 jarg1_);
  public final static native void Quaternion_setQuaternionToZeroRotation(long jarg1, Quaternion jarg1_);
  public final static native void Quaternion_setQuaternionToNaN(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_normalizeThis(long jarg1, Quaternion jarg1_);
  public final static native long Quaternion_normalize(long jarg1, Quaternion jarg1_);
  public final static native long new_Quaternion__SWIG_4(long jarg1, Vec4 jarg1_, boolean jarg2);
  public final static native void delete_Quaternion(long jarg1);
  public final static native long new_StdVectorVec3__SWIG_0();
  public final static native long new_StdVectorVec3__SWIG_1(long jarg1);
  public final static native long StdVectorVec3_size(long jarg1, StdVectorVec3 jarg1_);
  public final static native long StdVectorVec3_capacity(long jarg1, StdVectorVec3 jarg1_);
  public final static native void StdVectorVec3_reserve(long jarg1, StdVectorVec3 jarg1_, long jarg2);
  public final static native boolean StdVectorVec3_isEmpty(long jarg1, StdVectorVec3 jarg1_);
  public final static native void StdVectorVec3_clear(long jarg1, StdVectorVec3 jarg1_);
  public final static native void StdVectorVec3_add(long jarg1, StdVectorVec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long StdVectorVec3_get(long jarg1, StdVectorVec3 jarg1_, int jarg2);
  public final static native void StdVectorVec3_set(long jarg1, StdVectorVec3 jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native void delete_StdVectorVec3(long jarg1);
  public final static native int MatrixBaseDouble_nrow(long jarg1, MatrixBaseDouble jarg1_);
  public final static native int MatrixBaseDouble_ncol(long jarg1, MatrixBaseDouble jarg1_);
  public final static native boolean MatrixBaseDouble_isResizeable(long jarg1, MatrixBaseDouble jarg1_);
  public final static native int MatrixBaseDouble_NScalarsPerElement_get();
  public final static native int MatrixBaseDouble_CppNScalarsPerElement_get();
  public final static native long new_MatrixBaseDouble__SWIG_0();
  public final static native long new_MatrixBaseDouble__SWIG_1(int jarg1, int jarg2);
  public final static native void MatrixBaseDouble_clear(long jarg1, MatrixBaseDouble jarg1_);
  public final static native long MatrixBaseDouble_setTo(long jarg1, MatrixBaseDouble jarg1_, double jarg2);
  public final static native long MatrixBaseDouble_setToNaN(long jarg1, MatrixBaseDouble jarg1_);
  public final static native long MatrixBaseDouble_setToZero(long jarg1, MatrixBaseDouble jarg1_);
  public final static native long MatrixBaseDouble_row(long jarg1, MatrixBaseDouble jarg1_, int jarg2);
  public final static native long MatrixBaseDouble_updRow(long jarg1, MatrixBaseDouble jarg1_, int jarg2);
  public final static native long MatrixBaseDouble_col(long jarg1, MatrixBaseDouble jarg1_, int jarg2);
  public final static native long MatrixBaseDouble_updCol(long jarg1, MatrixBaseDouble jarg1_, int jarg2);
  public final static native double MatrixBaseDouble_getElt(long jarg1, MatrixBaseDouble jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseDouble_updElt(long jarg1, MatrixBaseDouble jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseDouble_negateInPlace(long jarg1, MatrixBaseDouble jarg1_);
  public final static native long MatrixBaseDouble_resize(long jarg1, MatrixBaseDouble jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseDouble_resizeKeep(long jarg1, MatrixBaseDouble jarg1_, int jarg2, int jarg3);
  public final static native void MatrixBaseDouble_lockShape(long jarg1, MatrixBaseDouble jarg1_);
  public final static native void MatrixBaseDouble_unlockShape(long jarg1, MatrixBaseDouble jarg1_);
  public final static native void delete_MatrixBaseDouble(long jarg1);
  public final static native long new_MatrixView(long jarg1, MatrixView jarg1_);
  public final static native void delete_MatrixView(long jarg1);
  public final static native long new_Matrix__SWIG_0();
  public final static native long new_Matrix__SWIG_1(long jarg1, Matrix jarg1_);
  public final static native long new_Matrix__SWIG_2(int jarg1, int jarg2);
  public final static native long new_Matrix__SWIG_3(int jarg1, int jarg2, double jarg3);
  public final static native String Matrix_toString(long jarg1, Matrix jarg1_);
  public final static native double Matrix_get(long jarg1, Matrix jarg1_, int jarg2, int jarg3);
  public final static native void Matrix_set(long jarg1, Matrix jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native void delete_Matrix(long jarg1);
  public final static native long new_VectorBaseDouble__SWIG_0(int jarg1);
  public final static native long new_VectorBaseDouble__SWIG_1();
  public final static native long new_VectorBaseDouble__SWIG_2(long jarg1, VectorBaseDouble jarg1_);
  public final static native int VectorBaseDouble_size(long jarg1, VectorBaseDouble jarg1_);
  public final static native int VectorBaseDouble_nrow(long jarg1, VectorBaseDouble jarg1_);
  public final static native int VectorBaseDouble_ncol(long jarg1, VectorBaseDouble jarg1_);
  public final static native long VectorBaseDouble_resize(long jarg1, VectorBaseDouble jarg1_, int jarg2);
  public final static native long VectorBaseDouble_resizeKeep(long jarg1, VectorBaseDouble jarg1_, int jarg2);
  public final static native void VectorBaseDouble_clear(long jarg1, VectorBaseDouble jarg1_);
  public final static native double VectorBaseDouble_sum(long jarg1, VectorBaseDouble jarg1_);
  public final static native double VectorBaseDouble_get(long jarg1, VectorBaseDouble jarg1_, int jarg2);
  public final static native void VectorBaseDouble_set(long jarg1, VectorBaseDouble jarg1_, int jarg2, double jarg3);
  public final static native double VectorBaseDouble___getitem__(long jarg1, VectorBaseDouble jarg1_, int jarg2);
  public final static native void VectorBaseDouble___setitem__(long jarg1, VectorBaseDouble jarg1_, int jarg2, double jarg3);
  public final static native void delete_VectorBaseDouble(long jarg1);
  public final static native long new_VectorView(long jarg1, VectorView jarg1_);
  public final static native void delete_VectorView(long jarg1);
  public final static native long new_Vector__SWIG_0();
  public final static native long new_Vector__SWIG_1(long jarg1, Vector jarg1_);
  public final static native long new_Vector__SWIG_2(int jarg1, double jarg2);
  public final static native String Vector_toString(long jarg1, Vector jarg1_);
  public final static native double Vector_get(long jarg1, Vector jarg1_, int jarg2);
  public final static native void Vector_set(long jarg1, Vector jarg1_, int jarg2, double jarg3);
  public final static native long new_Vector__SWIG_3(long jarg1, StdVectorDouble jarg1_);
  public final static native long Vector_transpose(long jarg1, Vector jarg1_);
  public final static native void delete_Vector(long jarg1);
  public final static native long new_RowVectorBaseDouble__SWIG_0(int jarg1);
  public final static native long new_RowVectorBaseDouble__SWIG_1();
  public final static native long new_RowVectorBaseDouble__SWIG_2(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native long new_RowVectorBaseDouble__SWIG_3(int jarg1, double jarg2);
  public final static native long new_RowVectorBaseDouble__SWIG_4(int jarg1, long jarg2);
  public final static native int RowVectorBaseDouble_size(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native int RowVectorBaseDouble_nrow(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native int RowVectorBaseDouble_ncol(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native long RowVectorBaseDouble_nelt(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native long RowVectorBaseDouble_index(long jarg1, RowVectorBaseDouble jarg1_, long jarg2);
  public final static native long RowVectorBaseDouble_updIndex(long jarg1, RowVectorBaseDouble jarg1_, long jarg2);
  public final static native long RowVectorBaseDouble_resize(long jarg1, RowVectorBaseDouble jarg1_, int jarg2);
  public final static native long RowVectorBaseDouble_resizeKeep(long jarg1, RowVectorBaseDouble jarg1_, int jarg2);
  public final static native void RowVectorBaseDouble_clear(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native double RowVectorBaseDouble_sum(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native long RowVectorBaseDouble_begin(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native long RowVectorBaseDouble_end(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native double RowVectorBaseDouble_get(long jarg1, RowVectorBaseDouble jarg1_, int jarg2);
  public final static native void RowVectorBaseDouble_set(long jarg1, RowVectorBaseDouble jarg1_, int jarg2, double jarg3);
  public final static native double RowVectorBaseDouble___getitem__(long jarg1, RowVectorBaseDouble jarg1_, int jarg2);
  public final static native void RowVectorBaseDouble___setitem__(long jarg1, RowVectorBaseDouble jarg1_, int jarg2, double jarg3);
  public final static native void delete_RowVectorBaseDouble(long jarg1);
  public final static native long new_RowVectorView(long jarg1, RowVectorView jarg1_);
  public final static native void delete_RowVectorView(long jarg1);
  public final static native long new_RowVector__SWIG_0();
  public final static native long new_RowVector__SWIG_1(long jarg1, RowVector jarg1_);
  public final static native long new_RowVector__SWIG_2(long jarg1, RowVectorBaseDouble jarg1_);
  public final static native long new_RowVector__SWIG_3(int jarg1);
  public final static native long new_RowVector__SWIG_4(int jarg1, long jarg2);
  public final static native long new_RowVector__SWIG_5(int jarg1, double jarg2);
  public final static native long new_RowVector__SWIG_6(long jarg1, StdVectorDouble jarg1_);
  public final static native long RowVector_transpose(long jarg1, RowVector jarg1_);
  public final static native void delete_RowVector(long jarg1);
  public final static native int MatrixBaseVec3_nrow(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native int MatrixBaseVec3_ncol(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native boolean MatrixBaseVec3_isResizeable(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native int MatrixBaseVec3_NScalarsPerElement_get();
  public final static native int MatrixBaseVec3_CppNScalarsPerElement_get();
  public final static native long new_MatrixBaseVec3__SWIG_0();
  public final static native long new_MatrixBaseVec3__SWIG_1(int jarg1, int jarg2);
  public final static native void MatrixBaseVec3_clear(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native long MatrixBaseVec3_setTo(long jarg1, MatrixBaseVec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long MatrixBaseVec3_setToNaN(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native long MatrixBaseVec3_setToZero(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native long MatrixBaseVec3_row(long jarg1, MatrixBaseVec3 jarg1_, int jarg2);
  public final static native long MatrixBaseVec3_updRow(long jarg1, MatrixBaseVec3 jarg1_, int jarg2);
  public final static native long MatrixBaseVec3_col(long jarg1, MatrixBaseVec3 jarg1_, int jarg2);
  public final static native long MatrixBaseVec3_updCol(long jarg1, MatrixBaseVec3 jarg1_, int jarg2);
  public final static native long MatrixBaseVec3_getElt(long jarg1, MatrixBaseVec3 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseVec3_updElt(long jarg1, MatrixBaseVec3 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseVec3_negateInPlace(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native long MatrixBaseVec3_resize(long jarg1, MatrixBaseVec3 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseVec3_resizeKeep(long jarg1, MatrixBaseVec3 jarg1_, int jarg2, int jarg3);
  public final static native void MatrixBaseVec3_lockShape(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native void MatrixBaseVec3_unlockShape(long jarg1, MatrixBaseVec3 jarg1_);
  public final static native void delete_MatrixBaseVec3(long jarg1);
  public final static native long new_MatrixViewVec3(long jarg1, MatrixViewVec3 jarg1_);
  public final static native void delete_MatrixViewVec3(long jarg1);
  public final static native long new_MatrixVec3__SWIG_0();
  public final static native long new_MatrixVec3__SWIG_1(long jarg1, MatrixVec3 jarg1_);
  public final static native long new_MatrixVec3__SWIG_2(int jarg1, int jarg2);
  public final static native long new_MatrixVec3__SWIG_3(int jarg1, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native String MatrixVec3_toString(long jarg1, MatrixVec3 jarg1_);
  public final static native long MatrixVec3_get(long jarg1, MatrixVec3 jarg1_, int jarg2, int jarg3);
  public final static native void MatrixVec3_set(long jarg1, MatrixVec3 jarg1_, int jarg2, int jarg3, long jarg4, Vec3 jarg4_);
  public final static native void delete_MatrixVec3(long jarg1);
  public final static native long new_VectorBaseVec3__SWIG_0(int jarg1);
  public final static native long new_VectorBaseVec3__SWIG_1();
  public final static native long new_VectorBaseVec3__SWIG_2(long jarg1, VectorBaseVec3 jarg1_);
  public final static native int VectorBaseVec3_size(long jarg1, VectorBaseVec3 jarg1_);
  public final static native int VectorBaseVec3_nrow(long jarg1, VectorBaseVec3 jarg1_);
  public final static native int VectorBaseVec3_ncol(long jarg1, VectorBaseVec3 jarg1_);
  public final static native long VectorBaseVec3_resize(long jarg1, VectorBaseVec3 jarg1_, int jarg2);
  public final static native long VectorBaseVec3_resizeKeep(long jarg1, VectorBaseVec3 jarg1_, int jarg2);
  public final static native void VectorBaseVec3_clear(long jarg1, VectorBaseVec3 jarg1_);
  public final static native long VectorBaseVec3_sum(long jarg1, VectorBaseVec3 jarg1_);
  public final static native long VectorBaseVec3_get(long jarg1, VectorBaseVec3 jarg1_, int jarg2);
  public final static native void VectorBaseVec3_set(long jarg1, VectorBaseVec3 jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native long VectorBaseVec3___getitem__(long jarg1, VectorBaseVec3 jarg1_, int jarg2);
  public final static native void VectorBaseVec3___setitem__(long jarg1, VectorBaseVec3 jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native void delete_VectorBaseVec3(long jarg1);
  public final static native long new_VectorViewVec3(long jarg1, VectorViewVec3 jarg1_);
  public final static native void delete_VectorViewVec3(long jarg1);
  public final static native long new_VectorVec3__SWIG_0();
  public final static native long new_VectorVec3__SWIG_1(long jarg1, VectorVec3 jarg1_);
  public final static native long new_VectorVec3__SWIG_2(int jarg1, long jarg2, Vec3 jarg2_);
  public final static native String VectorVec3_toString(long jarg1, VectorVec3 jarg1_);
  public final static native long VectorVec3_get(long jarg1, VectorVec3 jarg1_, int jarg2);
  public final static native void VectorVec3_set(long jarg1, VectorVec3 jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native long new_VectorVec3__SWIG_3(long jarg1, StdVectorVec3 jarg1_);
  public final static native long VectorVec3_transpose(long jarg1, VectorVec3 jarg1_);
  public final static native void delete_VectorVec3(long jarg1);
  public final static native long new_RowVectorBaseVec3__SWIG_0(int jarg1);
  public final static native long new_RowVectorBaseVec3__SWIG_1();
  public final static native long new_RowVectorBaseVec3__SWIG_2(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long new_RowVectorBaseVec3__SWIG_3(int jarg1, long jarg2, Vec3 jarg2_);
  public final static native int RowVectorBaseVec3_size(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native int RowVectorBaseVec3_nrow(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native int RowVectorBaseVec3_ncol(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long RowVectorBaseVec3_nelt(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long RowVectorBaseVec3_index(long jarg1, RowVectorBaseVec3 jarg1_, long jarg2);
  public final static native long RowVectorBaseVec3_updIndex(long jarg1, RowVectorBaseVec3 jarg1_, long jarg2);
  public final static native long RowVectorBaseVec3_resize(long jarg1, RowVectorBaseVec3 jarg1_, int jarg2);
  public final static native long RowVectorBaseVec3_resizeKeep(long jarg1, RowVectorBaseVec3 jarg1_, int jarg2);
  public final static native void RowVectorBaseVec3_clear(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long RowVectorBaseVec3_sum(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long RowVectorBaseVec3_begin(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long RowVectorBaseVec3_end(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long RowVectorBaseVec3_get(long jarg1, RowVectorBaseVec3 jarg1_, int jarg2);
  public final static native void RowVectorBaseVec3_set(long jarg1, RowVectorBaseVec3 jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native long RowVectorBaseVec3___getitem__(long jarg1, RowVectorBaseVec3 jarg1_, int jarg2);
  public final static native void RowVectorBaseVec3___setitem__(long jarg1, RowVectorBaseVec3 jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native void delete_RowVectorBaseVec3(long jarg1);
  public final static native long new_RowVectorViewVec3(long jarg1, RowVectorViewVec3 jarg1_);
  public final static native void delete_RowVectorViewVec3(long jarg1);
  public final static native long new_RowVectorVec3__SWIG_0();
  public final static native long new_RowVectorVec3__SWIG_1(long jarg1, RowVectorVec3 jarg1_);
  public final static native long new_RowVectorVec3__SWIG_2(long jarg1, RowVectorBaseVec3 jarg1_);
  public final static native long new_RowVectorVec3__SWIG_3(int jarg1);
  public final static native long new_RowVectorVec3__SWIG_4(int jarg1, long jarg2, Vec3 jarg2_);
  public final static native long new_RowVectorVec3__SWIG_6(long jarg1, StdVectorVec3 jarg1_);
  public final static native long RowVectorVec3_transpose(long jarg1, RowVectorVec3 jarg1_);
  public final static native void delete_RowVectorVec3(long jarg1);
  public final static native int MatrixBaseVec6_nrow(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native int MatrixBaseVec6_ncol(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native boolean MatrixBaseVec6_isResizeable(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native int MatrixBaseVec6_NScalarsPerElement_get();
  public final static native int MatrixBaseVec6_CppNScalarsPerElement_get();
  public final static native long new_MatrixBaseVec6__SWIG_0();
  public final static native long new_MatrixBaseVec6__SWIG_1(int jarg1, int jarg2);
  public final static native void MatrixBaseVec6_clear(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native long MatrixBaseVec6_setTo(long jarg1, MatrixBaseVec6 jarg1_, long jarg2, Vec6 jarg2_);
  public final static native long MatrixBaseVec6_setToNaN(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native long MatrixBaseVec6_setToZero(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native long MatrixBaseVec6_row(long jarg1, MatrixBaseVec6 jarg1_, int jarg2);
  public final static native long MatrixBaseVec6_updRow(long jarg1, MatrixBaseVec6 jarg1_, int jarg2);
  public final static native long MatrixBaseVec6_col(long jarg1, MatrixBaseVec6 jarg1_, int jarg2);
  public final static native long MatrixBaseVec6_updCol(long jarg1, MatrixBaseVec6 jarg1_, int jarg2);
  public final static native long MatrixBaseVec6_getElt(long jarg1, MatrixBaseVec6 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseVec6_updElt(long jarg1, MatrixBaseVec6 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseVec6_negateInPlace(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native long MatrixBaseVec6_resize(long jarg1, MatrixBaseVec6 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseVec6_resizeKeep(long jarg1, MatrixBaseVec6 jarg1_, int jarg2, int jarg3);
  public final static native void MatrixBaseVec6_lockShape(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native void MatrixBaseVec6_unlockShape(long jarg1, MatrixBaseVec6 jarg1_);
  public final static native void delete_MatrixBaseVec6(long jarg1);
  public final static native long new_MatrixViewVec6(long jarg1, MatrixViewVec6 jarg1_);
  public final static native void delete_MatrixViewVec6(long jarg1);
  public final static native long new_MatrixVec6__SWIG_0();
  public final static native long new_MatrixVec6__SWIG_1(long jarg1, MatrixVec6 jarg1_);
  public final static native long new_MatrixVec6__SWIG_2(int jarg1, int jarg2);
  public final static native long new_MatrixVec6__SWIG_3(int jarg1, int jarg2, long jarg3, Vec6 jarg3_);
  public final static native String MatrixVec6_toString(long jarg1, MatrixVec6 jarg1_);
  public final static native long MatrixVec6_get(long jarg1, MatrixVec6 jarg1_, int jarg2, int jarg3);
  public final static native void MatrixVec6_set(long jarg1, MatrixVec6 jarg1_, int jarg2, int jarg3, long jarg4, Vec6 jarg4_);
  public final static native void delete_MatrixVec6(long jarg1);
  public final static native long new_VectorBaseVec6__SWIG_0(int jarg1);
  public final static native long new_VectorBaseVec6__SWIG_1();
  public final static native long new_VectorBaseVec6__SWIG_2(long jarg1, VectorBaseVec6 jarg1_);
  public final static native int VectorBaseVec6_size(long jarg1, VectorBaseVec6 jarg1_);
  public final static native int VectorBaseVec6_nrow(long jarg1, VectorBaseVec6 jarg1_);
  public final static native int VectorBaseVec6_ncol(long jarg1, VectorBaseVec6 jarg1_);
  public final static native long VectorBaseVec6_resize(long jarg1, VectorBaseVec6 jarg1_, int jarg2);
  public final static native long VectorBaseVec6_resizeKeep(long jarg1, VectorBaseVec6 jarg1_, int jarg2);
  public final static native void VectorBaseVec6_clear(long jarg1, VectorBaseVec6 jarg1_);
  public final static native long VectorBaseVec6_sum(long jarg1, VectorBaseVec6 jarg1_);
  public final static native void delete_VectorBaseVec6(long jarg1);
  public final static native long new_VectorViewVec6(long jarg1, VectorViewVec6 jarg1_);
  public final static native void delete_VectorViewVec6(long jarg1);
  public final static native long new_VectorVec6__SWIG_0();
  public final static native long new_VectorVec6__SWIG_1(long jarg1, VectorVec6 jarg1_);
  public final static native long new_VectorVec6__SWIG_2(int jarg1, long jarg2, Vec6 jarg2_);
  public final static native String VectorVec6_toString(long jarg1, VectorVec6 jarg1_);
  public final static native long VectorVec6_get(long jarg1, VectorVec6 jarg1_, int jarg2);
  public final static native void VectorVec6_set(long jarg1, VectorVec6 jarg1_, int jarg2, long jarg3, Vec6 jarg3_);
  public final static native void delete_VectorVec6(long jarg1);
  public final static native long new_RowVectorBaseVec6__SWIG_0(int jarg1);
  public final static native long new_RowVectorBaseVec6__SWIG_1();
  public final static native long new_RowVectorBaseVec6__SWIG_2(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native long new_RowVectorBaseVec6__SWIG_3(int jarg1, long jarg2, Vec6 jarg2_);
  public final static native int RowVectorBaseVec6_size(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native int RowVectorBaseVec6_nrow(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native int RowVectorBaseVec6_ncol(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native long RowVectorBaseVec6_nelt(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native long RowVectorBaseVec6_index(long jarg1, RowVectorBaseVec6 jarg1_, long jarg2);
  public final static native long RowVectorBaseVec6_updIndex(long jarg1, RowVectorBaseVec6 jarg1_, long jarg2);
  public final static native long RowVectorBaseVec6_resize(long jarg1, RowVectorBaseVec6 jarg1_, int jarg2);
  public final static native long RowVectorBaseVec6_resizeKeep(long jarg1, RowVectorBaseVec6 jarg1_, int jarg2);
  public final static native void RowVectorBaseVec6_clear(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native long RowVectorBaseVec6_sum(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native long RowVectorBaseVec6_begin(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native long RowVectorBaseVec6_end(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native void delete_RowVectorBaseVec6(long jarg1);
  public final static native long new_RowVectorViewVec6(long jarg1, RowVectorViewVec6 jarg1_);
  public final static native void delete_RowVectorViewVec6(long jarg1);
  public final static native long new_RowVectorVec6__SWIG_0();
  public final static native long new_RowVectorVec6__SWIG_1(long jarg1, RowVectorVec6 jarg1_);
  public final static native long new_RowVectorVec6__SWIG_2(long jarg1, RowVectorBaseVec6 jarg1_);
  public final static native long new_RowVectorVec6__SWIG_3(int jarg1);
  public final static native long new_RowVectorVec6__SWIG_4(int jarg1, long jarg2, Vec6 jarg2_);
  public final static native void delete_RowVectorVec6(long jarg1);
  public final static native int MatrixBaseQuaternion_nrow(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native int MatrixBaseQuaternion_ncol(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native boolean MatrixBaseQuaternion_isResizeable(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native int MatrixBaseQuaternion_NScalarsPerElement_get();
  public final static native int MatrixBaseQuaternion_CppNScalarsPerElement_get();
  public final static native long new_MatrixBaseQuaternion__SWIG_0();
  public final static native long new_MatrixBaseQuaternion__SWIG_1(int jarg1, int jarg2);
  public final static native void MatrixBaseQuaternion_clear(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native long MatrixBaseQuaternion_setTo(long jarg1, MatrixBaseQuaternion jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long MatrixBaseQuaternion_setToNaN(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native long MatrixBaseQuaternion_setToZero(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native long MatrixBaseQuaternion_row(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2);
  public final static native long MatrixBaseQuaternion_updRow(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2);
  public final static native long MatrixBaseQuaternion_col(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2);
  public final static native long MatrixBaseQuaternion_updCol(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2);
  public final static native long MatrixBaseQuaternion_getElt(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseQuaternion_updElt(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseQuaternion_negateInPlace(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native long MatrixBaseQuaternion_resize(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseQuaternion_resizeKeep(long jarg1, MatrixBaseQuaternion jarg1_, int jarg2, int jarg3);
  public final static native void MatrixBaseQuaternion_lockShape(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native void MatrixBaseQuaternion_unlockShape(long jarg1, MatrixBaseQuaternion jarg1_);
  public final static native void delete_MatrixBaseQuaternion(long jarg1);
  public final static native long new_MatrixQuaternion__SWIG_0();
  public final static native long new_MatrixQuaternion__SWIG_1(long jarg1, MatrixQuaternion jarg1_);
  public final static native long new_MatrixQuaternion__SWIG_2(int jarg1, int jarg2);
  public final static native long new_MatrixQuaternion__SWIG_3(int jarg1, int jarg2, long jarg3, Quaternion jarg3_);
  public final static native String MatrixQuaternion_toString(long jarg1, MatrixQuaternion jarg1_);
  public final static native long MatrixQuaternion_get(long jarg1, MatrixQuaternion jarg1_, int jarg2, int jarg3);
  public final static native void MatrixQuaternion_set(long jarg1, MatrixQuaternion jarg1_, int jarg2, int jarg3, long jarg4, Quaternion jarg4_);
  public final static native void delete_MatrixQuaternion(long jarg1);
  public final static native long new_VectorBaseQuaternion__SWIG_0(int jarg1);
  public final static native long new_VectorBaseQuaternion__SWIG_1();
  public final static native long new_VectorBaseQuaternion__SWIG_2(long jarg1, VectorBaseQuaternion jarg1_);
  public final static native int VectorBaseQuaternion_size(long jarg1, VectorBaseQuaternion jarg1_);
  public final static native int VectorBaseQuaternion_nrow(long jarg1, VectorBaseQuaternion jarg1_);
  public final static native int VectorBaseQuaternion_ncol(long jarg1, VectorBaseQuaternion jarg1_);
  public final static native long VectorBaseQuaternion_resize(long jarg1, VectorBaseQuaternion jarg1_, int jarg2);
  public final static native long VectorBaseQuaternion_resizeKeep(long jarg1, VectorBaseQuaternion jarg1_, int jarg2);
  public final static native void VectorBaseQuaternion_clear(long jarg1, VectorBaseQuaternion jarg1_);
  public final static native long VectorBaseQuaternion_sum(long jarg1, VectorBaseQuaternion jarg1_);
  public final static native void delete_VectorBaseQuaternion(long jarg1);
  public final static native long new_VectorQuaternion__SWIG_0();
  public final static native long new_VectorQuaternion__SWIG_1(long jarg1, VectorQuaternion jarg1_);
  public final static native long new_VectorQuaternion__SWIG_2(int jarg1, long jarg2, Quaternion jarg2_);
  public final static native String VectorQuaternion_toString(long jarg1, VectorQuaternion jarg1_);
  public final static native long VectorQuaternion_get(long jarg1, VectorQuaternion jarg1_, int jarg2);
  public final static native void VectorQuaternion_set(long jarg1, VectorQuaternion jarg1_, int jarg2, long jarg3, Quaternion jarg3_);
  public final static native void delete_VectorQuaternion(long jarg1);
  public final static native long new_RowVectorBaseQuaternion__SWIG_0(int jarg1);
  public final static native long new_RowVectorBaseQuaternion__SWIG_1();
  public final static native long new_RowVectorBaseQuaternion__SWIG_2(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native long new_RowVectorBaseQuaternion__SWIG_3(int jarg1, long jarg2, Quaternion jarg2_);
  public final static native int RowVectorBaseQuaternion_size(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native int RowVectorBaseQuaternion_nrow(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native int RowVectorBaseQuaternion_ncol(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native long RowVectorBaseQuaternion_nelt(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native long RowVectorBaseQuaternion_index(long jarg1, RowVectorBaseQuaternion jarg1_, long jarg2);
  public final static native long RowVectorBaseQuaternion_updIndex(long jarg1, RowVectorBaseQuaternion jarg1_, long jarg2);
  public final static native long RowVectorBaseQuaternion_resize(long jarg1, RowVectorBaseQuaternion jarg1_, int jarg2);
  public final static native long RowVectorBaseQuaternion_resizeKeep(long jarg1, RowVectorBaseQuaternion jarg1_, int jarg2);
  public final static native void RowVectorBaseQuaternion_clear(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native long RowVectorBaseQuaternion_sum(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native long RowVectorBaseQuaternion_begin(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native long RowVectorBaseQuaternion_end(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native void delete_RowVectorBaseQuaternion(long jarg1);
  public final static native long new_RowVectorViewQuaternion(long jarg1, RowVectorViewQuaternion jarg1_);
  public final static native void delete_RowVectorViewQuaternion(long jarg1);
  public final static native long new_RowVectorQuaternion__SWIG_0();
  public final static native long new_RowVectorQuaternion__SWIG_1(long jarg1, RowVectorQuaternion jarg1_);
  public final static native long new_RowVectorQuaternion__SWIG_2(long jarg1, RowVectorBaseQuaternion jarg1_);
  public final static native long new_RowVectorQuaternion__SWIG_3(int jarg1);
  public final static native long new_RowVectorQuaternion__SWIG_4(int jarg1, long jarg2, Quaternion jarg2_);
  public final static native void delete_RowVectorQuaternion(long jarg1);
  public final static native long findRelativeVelocity(long jarg1, long jarg2, SpatialVec jarg2_, long jarg3, long jarg4, SpatialVec jarg4_);
  public final static native long findRelativeVelocityInF(long jarg1, Vec3 jarg1_, long jarg2, SpatialVec jarg2_, long jarg3, SpatialVec jarg3_);
  public final static native long findRelativeAcceleration(long jarg1, long jarg2, SpatialVec jarg2_, long jarg3, SpatialVec jarg3_, long jarg4, long jarg5, SpatialVec jarg5_, long jarg6, SpatialVec jarg6_);
  public final static native long findRelativeAccelerationInF(long jarg1, Vec3 jarg1_, long jarg2, SpatialVec jarg2_, long jarg3, SpatialVec jarg3_, long jarg4, SpatialVec jarg4_, long jarg5, SpatialVec jarg5_);
  public final static native long reverseRelativeVelocity(long jarg1, long jarg2, SpatialVec jarg2_);
  public final static native long reverseRelativeVelocityInA(long jarg1, long jarg2, SpatialVec jarg2_);
  public final static native long shiftVelocityBy(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long shiftVelocityFromTo(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long shiftForceBy(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long shiftForceFromTo(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long shiftAccelerationBy(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long shiftAccelerationFromTo(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_);
  public final static native int SpatialVec_size();
  public final static native int SpatialVec_nrow();
  public final static native int SpatialVec_ncol();
  public final static native long new_SpatialVec__SWIG_0();
  public final static native long new_SpatialVec__SWIG_1(long jarg1, SpatialVec jarg1_);
  public final static native long new_SpatialVec__SWIG_2(long jarg1, Vec3 jarg1_);
  public final static native long new_SpatialVec__SWIG_3(int jarg1);
  public final static native long new_SpatialVec__SWIG_4(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long new_SpatialVec__SWIG_5(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long new_SpatialVec__SWIG_6(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_);
  public final static native long new_SpatialVec__SWIG_7(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_, long jarg5, Vec3 jarg5_);
  public final static native long new_SpatialVec__SWIG_8(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_, long jarg5, Vec3 jarg5_, long jarg6, Vec3 jarg6_);
  public final static native long new_SpatialVec__SWIG_9(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_, long jarg5, Vec3 jarg5_, long jarg6, Vec3 jarg6_, long jarg7, Vec3 jarg7_);
  public final static native long new_SpatialVec__SWIG_10(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_, long jarg5, Vec3 jarg5_, long jarg6, Vec3 jarg6_, long jarg7, Vec3 jarg7_, long jarg8, Vec3 jarg8_);
  public final static native long new_SpatialVec__SWIG_11(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_, long jarg5, Vec3 jarg5_, long jarg6, Vec3 jarg6_, long jarg7, Vec3 jarg7_, long jarg8, Vec3 jarg8_, long jarg9, Vec3 jarg9_);
  public final static native void SpatialVec_setToNaN(long jarg1, SpatialVec jarg1_);
  public final static native void SpatialVec_setToZero(long jarg1, SpatialVec jarg1_);
  public final static native boolean SpatialVec_isNaN(long jarg1, SpatialVec jarg1_);
  public final static native boolean SpatialVec_isInf(long jarg1, SpatialVec jarg1_);
  public final static native boolean SpatialVec_isFinite(long jarg1, SpatialVec jarg1_);
  public final static native double SpatialVec_getDefaultTolerance();
  public final static native boolean SpatialVec_isNumericallyEqual__SWIG_2(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_, double jarg3);
  public final static native boolean SpatialVec_isNumericallyEqual__SWIG_3(long jarg1, SpatialVec jarg1_, long jarg2, Vec3 jarg2_);
  public final static native String SpatialVec_toString(long jarg1, SpatialVec jarg1_);
  public final static native void SpatialVec_set(long jarg1, SpatialVec jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native long SpatialVec_get(long jarg1, SpatialVec jarg1_, int jarg2);
  public final static native void delete_SpatialVec(long jarg1);
  public final static native long new_VectorOfSpatialVec__SWIG_0();
  public final static native long new_VectorOfSpatialVec__SWIG_1(long jarg1, VectorOfSpatialVec jarg1_);
  public final static native long new_VectorOfSpatialVec__SWIG_2(int jarg1, long jarg2, SpatialVec jarg2_);
  public final static native String VectorOfSpatialVec_toString(long jarg1, VectorOfSpatialVec jarg1_);
  public final static native long VectorOfSpatialVec_get(long jarg1, VectorOfSpatialVec jarg1_, int jarg2);
  public final static native void VectorOfSpatialVec_set(long jarg1, VectorOfSpatialVec jarg1_, int jarg2, long jarg3, SpatialVec jarg3_);
  public final static native void delete_VectorOfSpatialVec(long jarg1);
  public final static native long new_MatrixOfSpatialVec__SWIG_0();
  public final static native long new_MatrixOfSpatialVec__SWIG_1(long jarg1, MatrixOfSpatialVec jarg1_);
  public final static native long new_MatrixOfSpatialVec__SWIG_2(int jarg1, int jarg2);
  public final static native long new_MatrixOfSpatialVec__SWIG_3(int jarg1, int jarg2, long jarg3, SpatialVec jarg3_);
  public final static native String MatrixOfSpatialVec_toString(long jarg1, MatrixOfSpatialVec jarg1_);
  public final static native long MatrixOfSpatialVec_get(long jarg1, MatrixOfSpatialVec jarg1_, int jarg2, int jarg3);
  public final static native void MatrixOfSpatialVec_set(long jarg1, MatrixOfSpatialVec jarg1_, int jarg2, int jarg3, long jarg4, SpatialVec jarg4_);
  public final static native void delete_MatrixOfSpatialVec(long jarg1);
  public final static native int BodyRotationSequence_get();
  public final static native int SpaceRotationSequence_get();
  public final static native long new_Rotation__SWIG_0();
  public final static native long Rotation_setRotationToIdentityMatrix(long jarg1, Rotation jarg1_);
  public final static native long Rotation_setRotationToNaN(long jarg1, Rotation jarg1_);
  public final static native long new_Rotation__SWIG_1(long jarg1, Rotation jarg1_);
  public final static native long new_Rotation__SWIG_2(double jarg1, long jarg2, CoordinateAxis jarg2_);
  public final static native long Rotation_setRotationFromAngleAboutAxis(long jarg1, Rotation jarg1_, double jarg2, long jarg3, CoordinateAxis jarg3_);
  public final static native long Rotation_setRotationFromAngleAboutX__SWIG_0(long jarg1, Rotation jarg1_, double jarg2);
  public final static native long Rotation_setRotationFromAngleAboutY__SWIG_0(long jarg1, Rotation jarg1_, double jarg2);
  public final static native long Rotation_setRotationFromAngleAboutZ__SWIG_0(long jarg1, Rotation jarg1_, double jarg2);
  public final static native long Rotation_setRotationFromAngleAboutX__SWIG_1(long jarg1, Rotation jarg1_, double jarg2, double jarg3);
  public final static native long Rotation_setRotationFromAngleAboutY__SWIG_1(long jarg1, Rotation jarg1_, double jarg2, double jarg3);
  public final static native long Rotation_setRotationFromAngleAboutZ__SWIG_1(long jarg1, Rotation jarg1_, double jarg2, double jarg3);
  public final static native long new_Rotation__SWIG_3(double jarg1, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_setRotationFromAngleAboutNonUnitVector(long jarg1, Rotation jarg1_, double jarg2, long jarg3, Vec3 jarg3_);
  public final static native long new_Rotation__SWIG_4(int jarg1, double jarg2, long jarg3, CoordinateAxis jarg3_, double jarg4, long jarg5, CoordinateAxis jarg5_);
  public final static native long new_Rotation__SWIG_5(int jarg1, double jarg2, long jarg3, CoordinateAxis jarg3_, double jarg4, long jarg5, CoordinateAxis jarg5_, double jarg6, long jarg7, CoordinateAxis jarg7_);
  public final static native long Rotation_setRotationFromTwoAnglesTwoAxes(long jarg1, Rotation jarg1_, int jarg2, double jarg3, long jarg4, CoordinateAxis jarg4_, double jarg5, long jarg6, CoordinateAxis jarg6_);
  public final static native long Rotation_setRotationFromThreeAnglesThreeAxes(long jarg1, Rotation jarg1_, int jarg2, double jarg3, long jarg4, CoordinateAxis jarg4_, double jarg5, long jarg6, CoordinateAxis jarg6_, double jarg7, long jarg8, CoordinateAxis jarg8_);
  public final static native void Rotation_setRotationToBodyFixedXY(long jarg1, Rotation jarg1_, long jarg2, Vec2 jarg2_);
  public final static native void Rotation_setRotationToBodyFixedXYZ__SWIG_0(long jarg1, Rotation jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long new_Rotation__SWIG_6(long jarg1, Quaternion jarg1_);
  public final static native long Rotation_setRotationFromQuaternion(long jarg1, Rotation jarg1_, long jarg2, Quaternion jarg2_);
  public final static native long new_Rotation__SWIG_7(long jarg1, Mat33 jarg1_, boolean jarg2);
  public final static native long new_Rotation__SWIG_8(long jarg1, Mat33 jarg1_);
  public final static native long Rotation_setRotationFromApproximateMat33(long jarg1, Rotation jarg1_, long jarg2, Mat33 jarg2_);
  public final static native long new_Rotation__SWIG_9(long jarg1, UnitVec3 jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native long Rotation_setRotationFromOneAxis(long jarg1, Rotation jarg1_, long jarg2, UnitVec3 jarg2_, long jarg3, CoordinateAxis jarg3_);
  public final static native long new_Rotation__SWIG_10(long jarg1, UnitVec3 jarg1_, long jarg2, CoordinateAxis jarg2_, long jarg3, Vec3 jarg3_, long jarg4, CoordinateAxis jarg4_);
  public final static native long Rotation_setRotationFromTwoAxes(long jarg1, Rotation jarg1_, long jarg2, UnitVec3 jarg2_, long jarg3, CoordinateAxis jarg3_, long jarg4, Vec3 jarg4_, long jarg5, CoordinateAxis jarg5_);
  public final static native double Rotation_convertOneAxisRotationToOneAngle(long jarg1, Rotation jarg1_, long jarg2, CoordinateAxis jarg2_);
  public final static native long Rotation_convertTwoAxesRotationToTwoAngles(long jarg1, Rotation jarg1_, int jarg2, long jarg3, CoordinateAxis jarg3_, long jarg4, CoordinateAxis jarg4_);
  public final static native long Rotation_convertThreeAxesRotationToThreeAngles(long jarg1, Rotation jarg1_, int jarg2, long jarg3, CoordinateAxis jarg3_, long jarg4, CoordinateAxis jarg4_, long jarg5, CoordinateAxis jarg5_);
  public final static native long Rotation_convertRotationToQuaternion(long jarg1, Rotation jarg1_);
  public final static native long Rotation_convertRotationToAngleAxis(long jarg1, Rotation jarg1_);
  public final static native long Rotation_convertRotationToBodyFixedXY(long jarg1, Rotation jarg1_);
  public final static native long Rotation_convertRotationToBodyFixedXYZ(long jarg1, Rotation jarg1_);
  public final static native boolean Rotation_isSameRotationToWithinAngle(long jarg1, Rotation jarg1_, long jarg2, Rotation jarg2_, double jarg3);
  public final static native boolean Rotation_isSameRotationToWithinAngleOfMachinePrecision(long jarg1, Rotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native double Rotation_getMaxAbsDifferenceInRotationElements(long jarg1, Rotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native boolean Rotation_areAllRotationElementsSameToEpsilon(long jarg1, Rotation jarg1_, long jarg2, Rotation jarg2_, double jarg3);
  public final static native boolean Rotation_areAllRotationElementsSameToMachinePrecision(long jarg1, Rotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native long new_Rotation__SWIG_11(long jarg1, InverseRotation jarg1_);
  public final static native long Rotation_invert(long jarg1, Rotation jarg1_);
  public final static native long Rotation_transpose(long jarg1, Rotation jarg1_);
  public final static native long Rotation_asMat33(long jarg1, Rotation jarg1_);
  public final static native long Rotation_toMat33(long jarg1, Rotation jarg1_);
  public final static native void Rotation_setRotationToBodyFixedXYZ__SWIG_1(long jarg1, Rotation jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_convertAngVelToBodyFixed321Dot(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_convertBodyFixed321DotToAngVel(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_convertAngVelDotToBodyFixed321DotDot(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_calcNForBodyXYZInBodyFrame__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long Rotation_calcNForBodyXYZInBodyFrame__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_calcNForBodyXYZInParentFrame__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long Rotation_calcNForBodyXYZInParentFrame__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_multiplyByBodyXYZ_N_P(long jarg1, Vec2 jarg1_, long jarg2, Vec2 jarg2_, double jarg3, long jarg4, Vec3 jarg4_);
  public final static native long Rotation_multiplyByBodyXYZ_NT_P(long jarg1, Vec2 jarg1_, long jarg2, Vec2 jarg2_, double jarg3, long jarg4, Vec3 jarg4_);
  public final static native long Rotation_convertAngVelInParentToBodyXYZDot(long jarg1, Vec2 jarg1_, long jarg2, Vec2 jarg2_, double jarg3, long jarg4, Vec3 jarg4_);
  public final static native long Rotation_convertAngAccInParentToBodyXYZDotDot(long jarg1, Vec2 jarg1_, long jarg2, Vec2 jarg2_, double jarg3, long jarg4, Vec3 jarg4_, long jarg5, Vec3 jarg5_);
  public final static native long Rotation_multiplyByBodyXYZ_NInv_P(long jarg1, Vec2 jarg1_, long jarg2, Vec2 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_multiplyByBodyXYZ_NInvT_P(long jarg1, Vec2 jarg1_, long jarg2, Vec2 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_calcNDotForBodyXYZInBodyFrame__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_calcNDotForBodyXYZInBodyFrame__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_calcNDotForBodyXYZInParentFrame__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_calcNDotForBodyXYZInParentFrame__SWIG_1(long jarg1, Vec2 jarg1_, long jarg2, Vec2 jarg2_, double jarg3, long jarg4, Vec3 jarg4_);
  public final static native long Rotation_calcNInvForBodyXYZInBodyFrame__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long Rotation_calcNInvForBodyXYZInBodyFrame__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_calcNInvForBodyXYZInParentFrame__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long Rotation_calcNInvForBodyXYZInParentFrame__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_convertAngVelInBodyFrameToBodyXYZDot__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_convertAngVelInBodyFrameToBodyXYZDot__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_convertBodyXYZDotToAngVelInBodyFrame__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_convertBodyXYZDotToAngVelInBodyFrame__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_convertAngVelDotInBodyFrameToBodyXYZDotDot__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_convertAngVelDotInBodyFrameToBodyXYZDotDot__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, Vec3 jarg4_);
  public final static native long Rotation_convertAngVelToQuaternionDot(long jarg1, Vec4 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_convertQuaternionDotToAngVel(long jarg1, Vec4 jarg1_, long jarg2, Vec4 jarg2_);
  public final static native long Rotation_convertAngVelDotToQuaternionDotDot(long jarg1, Vec4 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Rotation_multiply__SWIG_0(long jarg1, Rotation jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Rotation_multiply__SWIG_1(long jarg1, Rotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native long Rotation_multiply__SWIG_2(long jarg1, Rotation jarg1_, long jarg2, InverseRotation jarg2_);
  public final static native long Rotation_multiply__SWIG_3(long jarg1, Rotation jarg1_, long jarg2, RowVectorVec3 jarg2_);
  public final static native long Rotation_multiply__SWIG_4(long jarg1, Rotation jarg1_, long jarg2, RowVectorViewVec3 jarg2_);
  public final static native void delete_Rotation(long jarg1);
  public final static native long new_InverseRotation__SWIG_0();
  public final static native long new_InverseRotation__SWIG_1(long jarg1, InverseRotation jarg1_);
  public final static native long InverseRotation_invert(long jarg1, InverseRotation jarg1_);
  public final static native long InverseRotation_transpose(long jarg1, InverseRotation jarg1_);
  public final static native void delete_InverseRotation(long jarg1);
  public final static native int MatrixBaseMat33_nrow(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native int MatrixBaseMat33_ncol(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native boolean MatrixBaseMat33_isResizeable(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native int MatrixBaseMat33_NScalarsPerElement_get();
  public final static native int MatrixBaseMat33_CppNScalarsPerElement_get();
  public final static native long new_MatrixBaseMat33__SWIG_0();
  public final static native long new_MatrixBaseMat33__SWIG_1(int jarg1, int jarg2);
  public final static native void MatrixBaseMat33_clear(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native long MatrixBaseMat33_setTo(long jarg1, MatrixBaseMat33 jarg1_, long jarg2, Mat33 jarg2_);
  public final static native long MatrixBaseMat33_setToNaN(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native long MatrixBaseMat33_setToZero(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native long MatrixBaseMat33_row(long jarg1, MatrixBaseMat33 jarg1_, int jarg2);
  public final static native long MatrixBaseMat33_updRow(long jarg1, MatrixBaseMat33 jarg1_, int jarg2);
  public final static native long MatrixBaseMat33_col(long jarg1, MatrixBaseMat33 jarg1_, int jarg2);
  public final static native long MatrixBaseMat33_updCol(long jarg1, MatrixBaseMat33 jarg1_, int jarg2);
  public final static native long MatrixBaseMat33_getElt(long jarg1, MatrixBaseMat33 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseMat33_updElt(long jarg1, MatrixBaseMat33 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseMat33_negateInPlace(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native long MatrixBaseMat33_resize(long jarg1, MatrixBaseMat33 jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseMat33_resizeKeep(long jarg1, MatrixBaseMat33 jarg1_, int jarg2, int jarg3);
  public final static native void MatrixBaseMat33_lockShape(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native void MatrixBaseMat33_unlockShape(long jarg1, MatrixBaseMat33 jarg1_);
  public final static native void delete_MatrixBaseMat33(long jarg1);
  public final static native long new_MatrixViewMat33(long jarg1, MatrixViewMat33 jarg1_);
  public final static native void delete_MatrixViewMat33(long jarg1);
  public final static native long new_MatrixMat33__SWIG_0();
  public final static native long new_MatrixMat33__SWIG_1(long jarg1, MatrixMat33 jarg1_);
  public final static native long new_MatrixMat33__SWIG_2(int jarg1, int jarg2);
  public final static native long new_MatrixMat33__SWIG_3(int jarg1, int jarg2, long jarg3, Mat33 jarg3_);
  public final static native String MatrixMat33_toString(long jarg1, MatrixMat33 jarg1_);
  public final static native long MatrixMat33_get(long jarg1, MatrixMat33 jarg1_, int jarg2, int jarg3);
  public final static native void MatrixMat33_set(long jarg1, MatrixMat33 jarg1_, int jarg2, int jarg3, long jarg4, Mat33 jarg4_);
  public final static native void delete_MatrixMat33(long jarg1);
  public final static native long new_VectorBaseMat33__SWIG_0(int jarg1);
  public final static native long new_VectorBaseMat33__SWIG_1();
  public final static native long new_VectorBaseMat33__SWIG_2(long jarg1, VectorBaseMat33 jarg1_);
  public final static native int VectorBaseMat33_size(long jarg1, VectorBaseMat33 jarg1_);
  public final static native int VectorBaseMat33_nrow(long jarg1, VectorBaseMat33 jarg1_);
  public final static native int VectorBaseMat33_ncol(long jarg1, VectorBaseMat33 jarg1_);
  public final static native long VectorBaseMat33_resize(long jarg1, VectorBaseMat33 jarg1_, int jarg2);
  public final static native long VectorBaseMat33_resizeKeep(long jarg1, VectorBaseMat33 jarg1_, int jarg2);
  public final static native void VectorBaseMat33_clear(long jarg1, VectorBaseMat33 jarg1_);
  public final static native long VectorBaseMat33_sum(long jarg1, VectorBaseMat33 jarg1_);
  public final static native void delete_VectorBaseMat33(long jarg1);
  public final static native long new_VectorViewMat33(long jarg1, VectorViewMat33 jarg1_);
  public final static native void delete_VectorViewMat33(long jarg1);
  public final static native long new_VectorMat33__SWIG_0();
  public final static native long new_VectorMat33__SWIG_1(long jarg1, VectorMat33 jarg1_);
  public final static native long new_VectorMat33__SWIG_2(int jarg1, long jarg2, Mat33 jarg2_);
  public final static native String VectorMat33_toString(long jarg1, VectorMat33 jarg1_);
  public final static native long VectorMat33_get(long jarg1, VectorMat33 jarg1_, int jarg2);
  public final static native void VectorMat33_set(long jarg1, VectorMat33 jarg1_, int jarg2, long jarg3, Mat33 jarg3_);
  public final static native void delete_VectorMat33(long jarg1);
  public final static native long new_RowVectorBaseMat33__SWIG_0(int jarg1);
  public final static native long new_RowVectorBaseMat33__SWIG_1();
  public final static native long new_RowVectorBaseMat33__SWIG_2(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native long new_RowVectorBaseMat33__SWIG_3(int jarg1, long jarg2, Mat33 jarg2_);
  public final static native int RowVectorBaseMat33_size(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native int RowVectorBaseMat33_nrow(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native int RowVectorBaseMat33_ncol(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native long RowVectorBaseMat33_nelt(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native long RowVectorBaseMat33_index(long jarg1, RowVectorBaseMat33 jarg1_, long jarg2);
  public final static native long RowVectorBaseMat33_updIndex(long jarg1, RowVectorBaseMat33 jarg1_, long jarg2);
  public final static native long RowVectorBaseMat33_resize(long jarg1, RowVectorBaseMat33 jarg1_, int jarg2);
  public final static native long RowVectorBaseMat33_resizeKeep(long jarg1, RowVectorBaseMat33 jarg1_, int jarg2);
  public final static native void RowVectorBaseMat33_clear(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native long RowVectorBaseMat33_sum(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native long RowVectorBaseMat33_begin(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native long RowVectorBaseMat33_end(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native void delete_RowVectorBaseMat33(long jarg1);
  public final static native long new_RowVectorViewMat33(long jarg1, RowVectorViewMat33 jarg1_);
  public final static native void delete_RowVectorViewMat33(long jarg1);
  public final static native long new_RowVectorMat33__SWIG_0();
  public final static native long new_RowVectorMat33__SWIG_1(long jarg1, RowVectorMat33 jarg1_);
  public final static native long new_RowVectorMat33__SWIG_2(long jarg1, RowVectorBaseMat33 jarg1_);
  public final static native long new_RowVectorMat33__SWIG_3(int jarg1);
  public final static native long new_RowVectorMat33__SWIG_4(int jarg1, long jarg2, Mat33 jarg2_);
  public final static native void delete_RowVectorMat33(long jarg1);
  public final static native int MatrixBaseRotation_nrow(long jarg1, MatrixBaseRotation jarg1_);
  public final static native int MatrixBaseRotation_ncol(long jarg1, MatrixBaseRotation jarg1_);
  public final static native boolean MatrixBaseRotation_isResizeable(long jarg1, MatrixBaseRotation jarg1_);
  public final static native int MatrixBaseRotation_NScalarsPerElement_get();
  public final static native int MatrixBaseRotation_CppNScalarsPerElement_get();
  public final static native long new_MatrixBaseRotation__SWIG_0();
  public final static native long new_MatrixBaseRotation__SWIG_1(int jarg1, int jarg2);
  public final static native void MatrixBaseRotation_clear(long jarg1, MatrixBaseRotation jarg1_);
  public final static native long MatrixBaseRotation_setTo(long jarg1, MatrixBaseRotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native long MatrixBaseRotation_setToNaN(long jarg1, MatrixBaseRotation jarg1_);
  public final static native long MatrixBaseRotation_setToZero(long jarg1, MatrixBaseRotation jarg1_);
  public final static native long MatrixBaseRotation_row(long jarg1, MatrixBaseRotation jarg1_, int jarg2);
  public final static native long MatrixBaseRotation_updRow(long jarg1, MatrixBaseRotation jarg1_, int jarg2);
  public final static native long MatrixBaseRotation_col(long jarg1, MatrixBaseRotation jarg1_, int jarg2);
  public final static native long MatrixBaseRotation_updCol(long jarg1, MatrixBaseRotation jarg1_, int jarg2);
  public final static native long MatrixBaseRotation_getElt(long jarg1, MatrixBaseRotation jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseRotation_updElt(long jarg1, MatrixBaseRotation jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseRotation_negateInPlace(long jarg1, MatrixBaseRotation jarg1_);
  public final static native long MatrixBaseRotation_resize(long jarg1, MatrixBaseRotation jarg1_, int jarg2, int jarg3);
  public final static native long MatrixBaseRotation_resizeKeep(long jarg1, MatrixBaseRotation jarg1_, int jarg2, int jarg3);
  public final static native void MatrixBaseRotation_lockShape(long jarg1, MatrixBaseRotation jarg1_);
  public final static native void MatrixBaseRotation_unlockShape(long jarg1, MatrixBaseRotation jarg1_);
  public final static native void delete_MatrixBaseRotation(long jarg1);
  public final static native long new_MatrixRotation__SWIG_0();
  public final static native long new_MatrixRotation__SWIG_1(long jarg1, MatrixRotation jarg1_);
  public final static native long new_MatrixRotation__SWIG_2(int jarg1, int jarg2);
  public final static native long new_MatrixRotation__SWIG_3(int jarg1, int jarg2, long jarg3, Rotation jarg3_);
  public final static native String MatrixRotation_toString(long jarg1, MatrixRotation jarg1_);
  public final static native long MatrixRotation_get(long jarg1, MatrixRotation jarg1_, int jarg2, int jarg3);
  public final static native void MatrixRotation_set(long jarg1, MatrixRotation jarg1_, int jarg2, int jarg3, long jarg4, Rotation jarg4_);
  public final static native void delete_MatrixRotation(long jarg1);
  public final static native long new_VectorBaseRotation__SWIG_0(int jarg1);
  public final static native long new_VectorBaseRotation__SWIG_1();
  public final static native long new_VectorBaseRotation__SWIG_2(long jarg1, VectorBaseRotation jarg1_);
  public final static native int VectorBaseRotation_size(long jarg1, VectorBaseRotation jarg1_);
  public final static native int VectorBaseRotation_nrow(long jarg1, VectorBaseRotation jarg1_);
  public final static native int VectorBaseRotation_ncol(long jarg1, VectorBaseRotation jarg1_);
  public final static native long VectorBaseRotation_resize(long jarg1, VectorBaseRotation jarg1_, int jarg2);
  public final static native long VectorBaseRotation_resizeKeep(long jarg1, VectorBaseRotation jarg1_, int jarg2);
  public final static native void VectorBaseRotation_clear(long jarg1, VectorBaseRotation jarg1_);
  public final static native long VectorBaseRotation_sum(long jarg1, VectorBaseRotation jarg1_);
  public final static native void delete_VectorBaseRotation(long jarg1);
  public final static native long new_VectorRotation__SWIG_0();
  public final static native long new_VectorRotation__SWIG_1(long jarg1, VectorRotation jarg1_);
  public final static native long new_VectorRotation__SWIG_2(int jarg1, long jarg2, Rotation jarg2_);
  public final static native String VectorRotation_toString(long jarg1, VectorRotation jarg1_);
  public final static native long VectorRotation_get(long jarg1, VectorRotation jarg1_, int jarg2);
  public final static native void VectorRotation_set(long jarg1, VectorRotation jarg1_, int jarg2, long jarg3, Rotation jarg3_);
  public final static native void delete_VectorRotation(long jarg1);
  public final static native long new_RowVectorBaseRotation__SWIG_0(int jarg1);
  public final static native long new_RowVectorBaseRotation__SWIG_1();
  public final static native long new_RowVectorBaseRotation__SWIG_2(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native long new_RowVectorBaseRotation__SWIG_3(int jarg1, long jarg2, Rotation jarg2_);
  public final static native int RowVectorBaseRotation_size(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native int RowVectorBaseRotation_nrow(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native int RowVectorBaseRotation_ncol(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native long RowVectorBaseRotation_nelt(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native long RowVectorBaseRotation_index(long jarg1, RowVectorBaseRotation jarg1_, long jarg2);
  public final static native long RowVectorBaseRotation_updIndex(long jarg1, RowVectorBaseRotation jarg1_, long jarg2);
  public final static native long RowVectorBaseRotation_resize(long jarg1, RowVectorBaseRotation jarg1_, int jarg2);
  public final static native long RowVectorBaseRotation_resizeKeep(long jarg1, RowVectorBaseRotation jarg1_, int jarg2);
  public final static native void RowVectorBaseRotation_clear(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native long RowVectorBaseRotation_sum(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native long RowVectorBaseRotation_begin(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native long RowVectorBaseRotation_end(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native void delete_RowVectorBaseRotation(long jarg1);
  public final static native long new_RowVectorViewRotation(long jarg1, RowVectorViewRotation jarg1_);
  public final static native void delete_RowVectorViewRotation(long jarg1);
  public final static native long new_RowVectorRotation__SWIG_0();
  public final static native long new_RowVectorRotation__SWIG_1(long jarg1, RowVectorRotation jarg1_);
  public final static native long new_RowVectorRotation__SWIG_2(long jarg1, RowVectorBaseRotation jarg1_);
  public final static native long new_RowVectorRotation__SWIG_3(int jarg1);
  public final static native long new_RowVectorRotation__SWIG_4(int jarg1, long jarg2, Rotation jarg2_);
  public final static native void delete_RowVectorRotation(long jarg1);
  public final static native long new_Transform__SWIG_0();
  public final static native long new_Transform__SWIG_1(long jarg1, Rotation jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long new_Transform__SWIG_2(long jarg1, Rotation jarg1_);
  public final static native long new_Transform__SWIG_3(long jarg1, Vec3 jarg1_);
  public final static native long Transform_set(long jarg1, Transform jarg1_, long jarg2, Rotation jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long Transform_setToZero(long jarg1, Transform jarg1_);
  public final static native long Transform_setToNaN(long jarg1, Transform jarg1_);
  public final static native long Transform_invert(long jarg1, Transform jarg1_);
  public final static native long Transform_updInvert(long jarg1, Transform jarg1_);
  public final static native long Transform_compose__SWIG_0(long jarg1, Transform jarg1_, long jarg2, Transform jarg2_);
  public final static native long Transform_compose__SWIG_1(long jarg1, Transform jarg1_, long jarg2);
  public final static native long Transform_xformFrameVecToBase(long jarg1, Transform jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Transform_xformBaseVecToFrame(long jarg1, Transform jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Transform_shiftFrameStationToBase(long jarg1, Transform jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Transform_shiftBaseStationToFrame(long jarg1, Transform jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Transform_R(long jarg1, Transform jarg1_);
  public final static native long Transform_RInv(long jarg1, Transform jarg1_);
  public final static native long Transform_p(long jarg1, Transform jarg1_);
  public final static native long Transform_setP(long jarg1, Transform jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Transform_pInv(long jarg1, Transform jarg1_);
  public final static native long Transform_setPInv(long jarg1, Transform jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Transform_asMat34(long jarg1, Transform jarg1_);
  public final static native long Transform_toMat34(long jarg1, Transform jarg1_);
  public final static native long Transform_toMat44(long jarg1, Transform jarg1_);
  public final static native long Transform_T(long jarg1, Transform jarg1_);
  public final static native void delete_Transform(long jarg1);
  public final static native long new_Inertia__SWIG_0();
  public final static native long new_Inertia__SWIG_1(double jarg1);
  public final static native long new_Inertia__SWIG_2(long jarg1, Vec3 jarg1_, double jarg2);
  public final static native long new_Inertia__SWIG_3(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long new_Inertia__SWIG_4(long jarg1, Vec3 jarg1_);
  public final static native long new_Inertia__SWIG_5(double jarg1, double jarg2, double jarg3);
  public final static native long new_Inertia__SWIG_6(double jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long Inertia_getMoments(long jarg1, Inertia jarg1_);
  public final static native long Inertia_getProducts(long jarg1, Inertia jarg1_);
  public final static native boolean Inertia_isNaN(long jarg1, Inertia jarg1_);
  public final static native boolean Inertia_isInf(long jarg1, Inertia jarg1_);
  public final static native boolean Inertia_isFinite(long jarg1, Inertia jarg1_);
  public final static native void delete_Inertia(long jarg1);
  public final static native long new_MassProperties();
  public final static native boolean MassProperties_isExactlyMassless(long jarg1, MassProperties jarg1_);
  public final static native boolean MassProperties_isNearlyMassless__SWIG_0(long jarg1, MassProperties jarg1_, double jarg2);
  public final static native boolean MassProperties_isNearlyMassless__SWIG_1(long jarg1, MassProperties jarg1_);
  public final static native boolean MassProperties_isExactlyCentral(long jarg1, MassProperties jarg1_);
  public final static native boolean MassProperties_isNearlyCentral__SWIG_0(long jarg1, MassProperties jarg1_, double jarg2);
  public final static native boolean MassProperties_isNearlyCentral__SWIG_1(long jarg1, MassProperties jarg1_);
  public final static native boolean MassProperties_isNaN(long jarg1, MassProperties jarg1_);
  public final static native boolean MassProperties_isInf(long jarg1, MassProperties jarg1_);
  public final static native boolean MassProperties_isFinite(long jarg1, MassProperties jarg1_);
  public final static native void delete_MassProperties(long jarg1);
  public final static native int SimTK_DEFAULT_PRECISION_get();
  public final static native void SimTK_version_SimTKcommon(long jarg1, long jarg2, long jarg3);
  public final static native void SimTK_about_SimTKcommon(String jarg1, int jarg2, String jarg3);
  public final static native boolean canStoreInNonnegativeInt__SWIG_0(boolean jarg1);
  public final static native boolean canStoreInNonnegativeInt__SWIG_1(char jarg1);
  public final static native boolean canStoreInNonnegativeInt__SWIG_2(short jarg1);
  public final static native boolean canStoreInNonnegativeInt__SWIG_3(byte jarg1);
  public final static native boolean canStoreInNonnegativeInt__SWIG_5(int jarg1);
  public final static native boolean canStoreInNonnegativeInt__SWIG_8(long jarg1);
  public final static native boolean canStoreInNonnegativeInt__SWIG_11(java.math.BigInteger jarg1);
  public final static native boolean isSizeInRange__SWIG_0(char jarg1, char jarg2);
  public final static native boolean isSizeInRange__SWIG_1(byte jarg1, byte jarg2);
  public final static native boolean isSizeInRange__SWIG_2(short jarg1, short jarg2);
  public final static native boolean isSizeInRange__SWIG_3(int jarg1, int jarg2);
  public final static native boolean isSizeInRange__SWIG_5(long jarg1, long jarg2);
  public final static native boolean isSizeInRange__SWIG_10(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native boolean isIndexInRange__SWIG_0(char jarg1, char jarg2);
  public final static native boolean isIndexInRange__SWIG_1(byte jarg1, byte jarg2);
  public final static native boolean isIndexInRange__SWIG_2(short jarg1, short jarg2);
  public final static native boolean isIndexInRange__SWIG_3(int jarg1, int jarg2);
  public final static native boolean isIndexInRange__SWIG_5(long jarg1, long jarg2);
  public final static native boolean isIndexInRange__SWIG_10(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native boolean isNonnegative__SWIG_0(boolean jarg1);
  public final static native boolean isNonnegative__SWIG_1(char jarg1);
  public final static native boolean isNonnegative__SWIG_2(byte jarg1);
  public final static native boolean isNonnegative__SWIG_3(short jarg1);
  public final static native boolean isNonnegative__SWIG_4(int jarg1);
  public final static native boolean isNonnegative__SWIG_6(long jarg1);
  public final static native boolean isNonnegative__SWIG_11(java.math.BigInteger jarg1);
  public final static native int InvalidIndex_get();
  public final static native long new_Segment__SWIG_0();
  public final static native long new_Segment__SWIG_1(int jarg1, int jarg2);
  public final static native long new_Segment__SWIG_2(int jarg1);
  public final static native void Segment_length_set(long jarg1, Segment jarg1_, int jarg2);
  public final static native int Segment_length_get(long jarg1, Segment jarg1_);
  public final static native void Segment_offset_set(long jarg1, Segment jarg1_, int jarg2);
  public final static native int Segment_offset_get(long jarg1, Segment jarg1_);
  public final static native void delete_Segment(long jarg1);
  public final static native long new_DontCopy();
  public final static native void delete_DontCopy(long jarg1);
  public final static native long new_TrustMe();
  public final static native void delete_TrustMe(long jarg1);
  public final static native long new_FalseType();
  public final static native void delete_FalseType(long jarg1);
  public final static native long new_TrueType();
  public final static native void delete_TrueType(long jarg1);
  public final static native long new_SimTKArrayString__SWIG_0();
  public final static native long new_SimTKArrayString__SWIG_1(long jarg1);
  public final static native long new_SimTKArrayString__SWIG_2(long jarg1, String jarg2);
  public final static native long new_SimTKArrayString__SWIG_3(long jarg1, SimTKArrayString jarg1_);
  public final static native long new_SimTKArrayString__SWIG_4(long jarg1, long jarg2, long jarg3, DontCopy jarg3_);
  public final static native void delete_SimTKArrayString(long jarg1);
  public final static native long SimTKArrayString_deallocate(long jarg1, SimTKArrayString jarg1_);
  public final static native void SimTKArrayString_assign(long jarg1, SimTKArrayString jarg1_, long jarg2, String jarg3);
  public final static native void SimTKArrayString_fill(long jarg1, SimTKArrayString jarg1_, String jarg2);
  public final static native void SimTKArrayString_swap(long jarg1, SimTKArrayString jarg1_, long jarg2, SimTKArrayString jarg2_);
  public final static native long SimTKArrayString_adoptData__SWIG_0(long jarg1, SimTKArrayString jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long SimTKArrayString_adoptData__SWIG_1(long jarg1, SimTKArrayString jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayString_shareData__SWIG_0(long jarg1, SimTKArrayString jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayString_shareData__SWIG_1(long jarg1, SimTKArrayString jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayString_size(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_max_size(long jarg1, SimTKArrayString jarg1_);
  public final static native boolean SimTKArrayString_empty(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_capacity(long jarg1, SimTKArrayString jarg1_);
  public final static native void SimTKArrayString_resize__SWIG_0(long jarg1, SimTKArrayString jarg1_, long jarg2);
  public final static native void SimTKArrayString_resize__SWIG_1(long jarg1, SimTKArrayString jarg1_, long jarg2, String jarg3);
  public final static native void SimTKArrayString_reserve(long jarg1, SimTKArrayString jarg1_, long jarg2);
  public final static native void SimTKArrayString_shrink_to_fit(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_allocated(long jarg1, SimTKArrayString jarg1_);
  public final static native boolean SimTKArrayString_isOwner(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_cbegin(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_begin__SWIG_0(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_cend(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_end__SWIG_0(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_crbegin(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_rbegin__SWIG_0(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_crend(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_rend__SWIG_0(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_cdata(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_data__SWIG_0(long jarg1, SimTKArrayString jarg1_);
  public final static native String SimTKArrayString_at__SWIG_0(long jarg1, SimTKArrayString jarg1_, long jarg2);
  public final static native String SimTKArrayString_getElt(long jarg1, SimTKArrayString jarg1_, long jarg2);
  public final static native long SimTKArrayString_updElt(long jarg1, SimTKArrayString jarg1_, long jarg2);
  public final static native String SimTKArrayString_front__SWIG_0(long jarg1, SimTKArrayString jarg1_);
  public final static native String SimTKArrayString_back__SWIG_0(long jarg1, SimTKArrayString jarg1_);
  public final static native void SimTKArrayString_push_back__SWIG_0(long jarg1, SimTKArrayString jarg1_, String jarg2);
  public final static native void SimTKArrayString_push_back__SWIG_1(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_raw_push_back(long jarg1, SimTKArrayString jarg1_);
  public final static native void SimTKArrayString_pop_back(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_erase__SWIG_0(long jarg1, SimTKArrayString jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayString_erase__SWIG_1(long jarg1, SimTKArrayString jarg1_, long jarg2);
  public final static native long SimTKArrayString_eraseFast(long jarg1, SimTKArrayString jarg1_, long jarg2);
  public final static native void SimTKArrayString_clear(long jarg1, SimTKArrayString jarg1_);
  public final static native long SimTKArrayString_insert__SWIG_0(long jarg1, SimTKArrayString jarg1_, long jarg2, long jarg3, String jarg4);
  public final static native long SimTKArrayString_insert__SWIG_1(long jarg1, SimTKArrayString jarg1_, long jarg2, String jarg3);
  public final static native long new_SimTKArrayDouble__SWIG_0();
  public final static native long new_SimTKArrayDouble__SWIG_1(long jarg1);
  public final static native long new_SimTKArrayDouble__SWIG_2(long jarg1, double jarg2);
  public final static native long new_SimTKArrayDouble__SWIG_3(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long new_SimTKArrayDouble__SWIG_4(long jarg1, long jarg2, long jarg3, DontCopy jarg3_);
  public final static native void delete_SimTKArrayDouble(long jarg1);
  public final static native long SimTKArrayDouble_deallocate(long jarg1, SimTKArrayDouble jarg1_);
  public final static native void SimTKArrayDouble_assign(long jarg1, SimTKArrayDouble jarg1_, long jarg2, double jarg3);
  public final static native void SimTKArrayDouble_fill(long jarg1, SimTKArrayDouble jarg1_, double jarg2);
  public final static native void SimTKArrayDouble_swap(long jarg1, SimTKArrayDouble jarg1_, long jarg2, SimTKArrayDouble jarg2_);
  public final static native long SimTKArrayDouble_adoptData__SWIG_0(long jarg1, SimTKArrayDouble jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long SimTKArrayDouble_adoptData__SWIG_1(long jarg1, SimTKArrayDouble jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayDouble_shareData__SWIG_0(long jarg1, SimTKArrayDouble jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayDouble_shareData__SWIG_1(long jarg1, SimTKArrayDouble jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayDouble_size(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_max_size(long jarg1, SimTKArrayDouble jarg1_);
  public final static native boolean SimTKArrayDouble_empty(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_capacity(long jarg1, SimTKArrayDouble jarg1_);
  public final static native void SimTKArrayDouble_resize__SWIG_0(long jarg1, SimTKArrayDouble jarg1_, long jarg2);
  public final static native void SimTKArrayDouble_resize__SWIG_1(long jarg1, SimTKArrayDouble jarg1_, long jarg2, double jarg3);
  public final static native void SimTKArrayDouble_reserve(long jarg1, SimTKArrayDouble jarg1_, long jarg2);
  public final static native void SimTKArrayDouble_shrink_to_fit(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_allocated(long jarg1, SimTKArrayDouble jarg1_);
  public final static native boolean SimTKArrayDouble_isOwner(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_cbegin(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_begin__SWIG_0(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_cend(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_end__SWIG_0(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_crbegin(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_rbegin__SWIG_0(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_crend(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_rend__SWIG_0(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_cdata(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_data__SWIG_0(long jarg1, SimTKArrayDouble jarg1_);
  public final static native double SimTKArrayDouble_at__SWIG_0(long jarg1, SimTKArrayDouble jarg1_, long jarg2);
  public final static native double SimTKArrayDouble_getElt(long jarg1, SimTKArrayDouble jarg1_, long jarg2);
  public final static native long SimTKArrayDouble_updElt(long jarg1, SimTKArrayDouble jarg1_, long jarg2);
  public final static native double SimTKArrayDouble_front__SWIG_0(long jarg1, SimTKArrayDouble jarg1_);
  public final static native double SimTKArrayDouble_back__SWIG_0(long jarg1, SimTKArrayDouble jarg1_);
  public final static native void SimTKArrayDouble_push_back__SWIG_0(long jarg1, SimTKArrayDouble jarg1_, double jarg2);
  public final static native void SimTKArrayDouble_push_back__SWIG_1(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_raw_push_back(long jarg1, SimTKArrayDouble jarg1_);
  public final static native void SimTKArrayDouble_pop_back(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_erase__SWIG_0(long jarg1, SimTKArrayDouble jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayDouble_erase__SWIG_1(long jarg1, SimTKArrayDouble jarg1_, long jarg2);
  public final static native long SimTKArrayDouble_eraseFast(long jarg1, SimTKArrayDouble jarg1_, long jarg2);
  public final static native void SimTKArrayDouble_clear(long jarg1, SimTKArrayDouble jarg1_);
  public final static native long SimTKArrayDouble_insert__SWIG_0(long jarg1, SimTKArrayDouble jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SimTKArrayDouble_insert__SWIG_1(long jarg1, SimTKArrayDouble jarg1_, long jarg2, double jarg3);
  public final static native long new_SimTKArrayVec3__SWIG_0();
  public final static native long new_SimTKArrayVec3__SWIG_1(long jarg1);
  public final static native long new_SimTKArrayVec3__SWIG_2(long jarg1, long jarg2, Vec3 jarg2_);
  public final static native long new_SimTKArrayVec3__SWIG_3(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long new_SimTKArrayVec3__SWIG_4(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, DontCopy jarg3_);
  public final static native void delete_SimTKArrayVec3(long jarg1);
  public final static native long SimTKArrayVec3_deallocate(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native void SimTKArrayVec3_assign(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, long jarg3, Vec3 jarg3_);
  public final static native void SimTKArrayVec3_fill(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void SimTKArrayVec3_swap(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, SimTKArrayVec3 jarg2_);
  public final static native long SimTKArrayVec3_adoptData__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, long jarg4);
  public final static native long SimTKArrayVec3_adoptData__SWIG_1(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3);
  public final static native long SimTKArrayVec3_shareData__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3);
  public final static native long SimTKArrayVec3_shareData__SWIG_1(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long SimTKArrayVec3_size(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_max_size(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native boolean SimTKArrayVec3_empty(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_capacity(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native void SimTKArrayVec3_resize__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_, long jarg2);
  public final static native void SimTKArrayVec3_resize__SWIG_1(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, long jarg3, Vec3 jarg3_);
  public final static native void SimTKArrayVec3_reserve(long jarg1, SimTKArrayVec3 jarg1_, long jarg2);
  public final static native void SimTKArrayVec3_shrink_to_fit(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_allocated(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native boolean SimTKArrayVec3_isOwner(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_cbegin(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_begin__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_cend(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_end__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_crbegin(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_rbegin__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_crend(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_rend__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_cdata(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_data__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_at__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_, long jarg2);
  public final static native long SimTKArrayVec3_getElt(long jarg1, SimTKArrayVec3 jarg1_, long jarg2);
  public final static native long SimTKArrayVec3_updElt(long jarg1, SimTKArrayVec3 jarg1_, long jarg2);
  public final static native long SimTKArrayVec3_front__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_back__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native void SimTKArrayVec3_push_back__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void SimTKArrayVec3_push_back__SWIG_1(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_raw_push_back(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native void SimTKArrayVec3_pop_back(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_erase__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long SimTKArrayVec3_erase__SWIG_1(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long SimTKArrayVec3_eraseFast(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void SimTKArrayVec3_clear(long jarg1, SimTKArrayVec3 jarg1_);
  public final static native long SimTKArrayVec3_insert__SWIG_0(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, long jarg4, Vec3 jarg4_);
  public final static native long SimTKArrayVec3_insert__SWIG_1(long jarg1, SimTKArrayVec3 jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long new_SimTKArrayInt__SWIG_0();
  public final static native long new_SimTKArrayInt__SWIG_1(long jarg1);
  public final static native long new_SimTKArrayInt__SWIG_2(long jarg1, int jarg2);
  public final static native long new_SimTKArrayInt__SWIG_3(long jarg1, SimTKArrayInt jarg1_);
  public final static native long new_SimTKArrayInt__SWIG_4(long jarg1, long jarg2, long jarg3, DontCopy jarg3_);
  public final static native void delete_SimTKArrayInt(long jarg1);
  public final static native long SimTKArrayInt_deallocate(long jarg1, SimTKArrayInt jarg1_);
  public final static native void SimTKArrayInt_assign(long jarg1, SimTKArrayInt jarg1_, long jarg2, int jarg3);
  public final static native void SimTKArrayInt_fill(long jarg1, SimTKArrayInt jarg1_, int jarg2);
  public final static native void SimTKArrayInt_swap(long jarg1, SimTKArrayInt jarg1_, long jarg2, SimTKArrayInt jarg2_);
  public final static native long SimTKArrayInt_adoptData__SWIG_0(long jarg1, SimTKArrayInt jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long SimTKArrayInt_adoptData__SWIG_1(long jarg1, SimTKArrayInt jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayInt_shareData__SWIG_0(long jarg1, SimTKArrayInt jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayInt_shareData__SWIG_1(long jarg1, SimTKArrayInt jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayInt_size(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_max_size(long jarg1, SimTKArrayInt jarg1_);
  public final static native boolean SimTKArrayInt_empty(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_capacity(long jarg1, SimTKArrayInt jarg1_);
  public final static native void SimTKArrayInt_resize__SWIG_0(long jarg1, SimTKArrayInt jarg1_, long jarg2);
  public final static native void SimTKArrayInt_resize__SWIG_1(long jarg1, SimTKArrayInt jarg1_, long jarg2, int jarg3);
  public final static native void SimTKArrayInt_reserve(long jarg1, SimTKArrayInt jarg1_, long jarg2);
  public final static native void SimTKArrayInt_shrink_to_fit(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_allocated(long jarg1, SimTKArrayInt jarg1_);
  public final static native boolean SimTKArrayInt_isOwner(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_cbegin(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_begin__SWIG_0(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_cend(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_end__SWIG_0(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_crbegin(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_rbegin__SWIG_0(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_crend(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_rend__SWIG_0(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_cdata(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_data__SWIG_0(long jarg1, SimTKArrayInt jarg1_);
  public final static native int SimTKArrayInt_at__SWIG_0(long jarg1, SimTKArrayInt jarg1_, long jarg2);
  public final static native int SimTKArrayInt_getElt(long jarg1, SimTKArrayInt jarg1_, long jarg2);
  public final static native long SimTKArrayInt_updElt(long jarg1, SimTKArrayInt jarg1_, long jarg2);
  public final static native int SimTKArrayInt_front__SWIG_0(long jarg1, SimTKArrayInt jarg1_);
  public final static native int SimTKArrayInt_back__SWIG_0(long jarg1, SimTKArrayInt jarg1_);
  public final static native void SimTKArrayInt_push_back__SWIG_0(long jarg1, SimTKArrayInt jarg1_, int jarg2);
  public final static native void SimTKArrayInt_push_back__SWIG_1(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_raw_push_back(long jarg1, SimTKArrayInt jarg1_);
  public final static native void SimTKArrayInt_pop_back(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_erase__SWIG_0(long jarg1, SimTKArrayInt jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayInt_erase__SWIG_1(long jarg1, SimTKArrayInt jarg1_, long jarg2);
  public final static native long SimTKArrayInt_eraseFast(long jarg1, SimTKArrayInt jarg1_, long jarg2);
  public final static native void SimTKArrayInt_clear(long jarg1, SimTKArrayInt jarg1_);
  public final static native long SimTKArrayInt_insert__SWIG_0(long jarg1, SimTKArrayInt jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long SimTKArrayInt_insert__SWIG_1(long jarg1, SimTKArrayInt jarg1_, long jarg2, int jarg3);
  public final static native long new_SimTKArrayRotation__SWIG_0();
  public final static native long new_SimTKArrayRotation__SWIG_1(long jarg1);
  public final static native long new_SimTKArrayRotation__SWIG_2(long jarg1, long jarg2, Rotation jarg2_);
  public final static native long new_SimTKArrayRotation__SWIG_3(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long new_SimTKArrayRotation__SWIG_4(long jarg1, Rotation jarg1_, long jarg2, Rotation jarg2_, long jarg3, DontCopy jarg3_);
  public final static native void delete_SimTKArrayRotation(long jarg1);
  public final static native long SimTKArrayRotation_deallocate(long jarg1, SimTKArrayRotation jarg1_);
  public final static native void SimTKArrayRotation_assign(long jarg1, SimTKArrayRotation jarg1_, long jarg2, long jarg3, Rotation jarg3_);
  public final static native void SimTKArrayRotation_fill(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native void SimTKArrayRotation_swap(long jarg1, SimTKArrayRotation jarg1_, long jarg2, SimTKArrayRotation jarg2_);
  public final static native long SimTKArrayRotation_adoptData__SWIG_0(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_, long jarg3, long jarg4);
  public final static native long SimTKArrayRotation_adoptData__SWIG_1(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_, long jarg3);
  public final static native long SimTKArrayRotation_shareData__SWIG_0(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_, long jarg3);
  public final static native long SimTKArrayRotation_shareData__SWIG_1(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_, long jarg3, Rotation jarg3_);
  public final static native long SimTKArrayRotation_size(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_max_size(long jarg1, SimTKArrayRotation jarg1_);
  public final static native boolean SimTKArrayRotation_empty(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_capacity(long jarg1, SimTKArrayRotation jarg1_);
  public final static native void SimTKArrayRotation_resize__SWIG_0(long jarg1, SimTKArrayRotation jarg1_, long jarg2);
  public final static native void SimTKArrayRotation_resize__SWIG_1(long jarg1, SimTKArrayRotation jarg1_, long jarg2, long jarg3, Rotation jarg3_);
  public final static native void SimTKArrayRotation_reserve(long jarg1, SimTKArrayRotation jarg1_, long jarg2);
  public final static native void SimTKArrayRotation_shrink_to_fit(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_allocated(long jarg1, SimTKArrayRotation jarg1_);
  public final static native boolean SimTKArrayRotation_isOwner(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_cbegin(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_begin__SWIG_0(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_cend(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_end__SWIG_0(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_crbegin(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_rbegin__SWIG_0(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_crend(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_rend__SWIG_0(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_cdata(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_data__SWIG_0(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_at__SWIG_0(long jarg1, SimTKArrayRotation jarg1_, long jarg2);
  public final static native long SimTKArrayRotation_getElt(long jarg1, SimTKArrayRotation jarg1_, long jarg2);
  public final static native long SimTKArrayRotation_updElt(long jarg1, SimTKArrayRotation jarg1_, long jarg2);
  public final static native long SimTKArrayRotation_front__SWIG_0(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_back__SWIG_0(long jarg1, SimTKArrayRotation jarg1_);
  public final static native void SimTKArrayRotation_push_back__SWIG_0(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native void SimTKArrayRotation_push_back__SWIG_1(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_raw_push_back(long jarg1, SimTKArrayRotation jarg1_);
  public final static native void SimTKArrayRotation_pop_back(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_erase__SWIG_0(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_, long jarg3, Rotation jarg3_);
  public final static native long SimTKArrayRotation_erase__SWIG_1(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native long SimTKArrayRotation_eraseFast(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_);
  public final static native void SimTKArrayRotation_clear(long jarg1, SimTKArrayRotation jarg1_);
  public final static native long SimTKArrayRotation_insert__SWIG_0(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_, long jarg3, long jarg4, Rotation jarg4_);
  public final static native long SimTKArrayRotation_insert__SWIG_1(long jarg1, SimTKArrayRotation jarg1_, long jarg2, Rotation jarg2_, long jarg3, Rotation jarg3_);
  public final static native long new_SimTKArrayMobilizedBodyIndex__SWIG_0();
  public final static native long new_SimTKArrayMobilizedBodyIndex__SWIG_1(long jarg1);
  public final static native long new_SimTKArrayMobilizedBodyIndex__SWIG_2(long jarg1, int jarg2);
  public final static native long new_SimTKArrayMobilizedBodyIndex__SWIG_3(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long new_SimTKArrayMobilizedBodyIndex__SWIG_4(long jarg1, long jarg2, long jarg3, DontCopy jarg3_);
  public final static native void delete_SimTKArrayMobilizedBodyIndex(long jarg1);
  public final static native long SimTKArrayMobilizedBodyIndex_deallocate(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native void SimTKArrayMobilizedBodyIndex_assign(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, int jarg3);
  public final static native void SimTKArrayMobilizedBodyIndex_fill(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, int jarg2);
  public final static native void SimTKArrayMobilizedBodyIndex_swap(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, SimTKArrayMobilizedBodyIndex jarg2_);
  public final static native long SimTKArrayMobilizedBodyIndex_adoptData__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long SimTKArrayMobilizedBodyIndex_adoptData__SWIG_1(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayMobilizedBodyIndex_shareData__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayMobilizedBodyIndex_shareData__SWIG_1(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayMobilizedBodyIndex_size(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_max_size(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native boolean SimTKArrayMobilizedBodyIndex_empty(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_capacity(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native void SimTKArrayMobilizedBodyIndex_resize__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2);
  public final static native void SimTKArrayMobilizedBodyIndex_resize__SWIG_1(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, int jarg3);
  public final static native void SimTKArrayMobilizedBodyIndex_reserve(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2);
  public final static native void SimTKArrayMobilizedBodyIndex_shrink_to_fit(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_allocated(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native boolean SimTKArrayMobilizedBodyIndex_isOwner(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_cbegin(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_begin__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_cend(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_end__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_crbegin(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_rbegin__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_crend(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_rend__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_cdata(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_data__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native int SimTKArrayMobilizedBodyIndex_at__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2);
  public final static native int SimTKArrayMobilizedBodyIndex_getElt(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2);
  public final static native long SimTKArrayMobilizedBodyIndex_updElt(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2);
  public final static native int SimTKArrayMobilizedBodyIndex_front__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native int SimTKArrayMobilizedBodyIndex_back__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native void SimTKArrayMobilizedBodyIndex_push_back__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, int jarg2);
  public final static native void SimTKArrayMobilizedBodyIndex_push_back__SWIG_1(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_raw_push_back(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native void SimTKArrayMobilizedBodyIndex_pop_back(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_erase__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, long jarg3);
  public final static native long SimTKArrayMobilizedBodyIndex_erase__SWIG_1(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2);
  public final static native long SimTKArrayMobilizedBodyIndex_eraseFast(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2);
  public final static native void SimTKArrayMobilizedBodyIndex_clear(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_);
  public final static native long SimTKArrayMobilizedBodyIndex_insert__SWIG_0(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long SimTKArrayMobilizedBodyIndex_insert__SWIG_1(long jarg1, SimTKArrayMobilizedBodyIndex jarg1_, long jarg2, int jarg3);
  public final static native long ArrayIndexUnsigned_max_size();
  public final static native long new_ArrayIndexUnsigned();
  public final static native void delete_ArrayIndexUnsigned(long jarg1);
  public final static native int ArrayIndexInt_max_size();
  public final static native long new_ArrayIndexInt();
  public final static native void delete_ArrayIndexInt(long jarg1);
  public final static native long new_PolygonalMesh();
  public final static native long PolygonalMesh_createSphereMesh__SWIG_0(double jarg1, int jarg2);
  public final static native long PolygonalMesh_createSphereMesh__SWIG_1(double jarg1);
  public final static native long PolygonalMesh_createBrickMesh__SWIG_0(long jarg1, Vec3 jarg1_, int jarg2);
  public final static native long PolygonalMesh_createBrickMesh__SWIG_1(long jarg1, Vec3 jarg1_);
  public final static native long PolygonalMesh_createCylinderMesh__SWIG_0(long jarg1, UnitVec3 jarg1_, double jarg2, double jarg3, int jarg4);
  public final static native long PolygonalMesh_createCylinderMesh__SWIG_1(long jarg1, UnitVec3 jarg1_, double jarg2, double jarg3);
  public final static native void PolygonalMesh_clear(long jarg1, PolygonalMesh jarg1_);
  public final static native int PolygonalMesh_getNumFaces(long jarg1, PolygonalMesh jarg1_);
  public final static native int PolygonalMesh_getNumVertices(long jarg1, PolygonalMesh jarg1_);
  public final static native long PolygonalMesh_getVertexPosition(long jarg1, PolygonalMesh jarg1_, int jarg2);
  public final static native int PolygonalMesh_getNumVerticesForFace(long jarg1, PolygonalMesh jarg1_, int jarg2);
  public final static native int PolygonalMesh_getFaceVertex(long jarg1, PolygonalMesh jarg1_, int jarg2, int jarg3);
  public final static native int PolygonalMesh_addVertex(long jarg1, PolygonalMesh jarg1_, long jarg2, Vec3 jarg2_);
  public final static native int PolygonalMesh_addFace(long jarg1, PolygonalMesh jarg1_, long jarg2, SimTKArrayInt jarg2_);
  public final static native long PolygonalMesh_scaleMesh(long jarg1, PolygonalMesh jarg1_, double jarg2);
  public final static native long PolygonalMesh_transformMesh(long jarg1, PolygonalMesh jarg1_, long jarg2, Transform jarg2_);
  public final static native void PolygonalMesh_loadFile(long jarg1, PolygonalMesh jarg1_, String jarg2);
  public final static native void delete_PolygonalMesh(long jarg1);
  public final static native long Black_get();
  public final static native long Gray_get();
  public final static native long Red_get();
  public final static native long Green_get();
  public final static native long Blue_get();
  public final static native long Yellow_get();
  public final static native long Orange_get();
  public final static native long Magenta_get();
  public final static native long Purple_get();
  public final static native long Cyan_get();
  public final static native long White_get();
  public final static native long new_DecorativeGeometry__SWIG_0();
  public final static native void delete_DecorativeGeometry(long jarg1);
  public final static native long new_DecorativeGeometry__SWIG_1(long jarg1, DecorativeGeometry jarg1_);
  public final static native int DecorativeGeometry_Hide_get();
  public final static native int DecorativeGeometry_DrawPoints_get();
  public final static native int DecorativeGeometry_DrawWireframe_get();
  public final static native int DecorativeGeometry_DrawSurface_get();
  public final static native int DecorativeGeometry_DrawDefault_get();
  public final static native long DecorativeGeometry_setBodyId(long jarg1, DecorativeGeometry jarg1_, int jarg2);
  public final static native long DecorativeGeometry_setIndexOnBody(long jarg1, DecorativeGeometry jarg1_, int jarg2);
  public final static native long DecorativeGeometry_setUserRef(long jarg1, DecorativeGeometry jarg1_, long jarg2);
  public final static native long DecorativeGeometry_setTransform(long jarg1, DecorativeGeometry jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeGeometry_setResolution(long jarg1, DecorativeGeometry jarg1_, double jarg2);
  public final static native long DecorativeGeometry_setScaleFactors(long jarg1, DecorativeGeometry jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeGeometry_setScale(long jarg1, DecorativeGeometry jarg1_, double jarg2);
  public final static native int DecorativeGeometry_getBodyId(long jarg1, DecorativeGeometry jarg1_);
  public final static native int DecorativeGeometry_getIndexOnBody(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_getUserRef(long jarg1, DecorativeGeometry jarg1_);
  public final static native double DecorativeGeometry_getResolution(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_getTransform(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_getScaleFactors(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_setColor(long jarg1, DecorativeGeometry jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeGeometry_setOpacity(long jarg1, DecorativeGeometry jarg1_, double jarg2);
  public final static native long DecorativeGeometry_setLineThickness(long jarg1, DecorativeGeometry jarg1_, double jarg2);
  public final static native long DecorativeGeometry_getColor(long jarg1, DecorativeGeometry jarg1_);
  public final static native double DecorativeGeometry_getOpacity(long jarg1, DecorativeGeometry jarg1_);
  public final static native double DecorativeGeometry_getLineThickness(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_setFaceCamera(long jarg1, DecorativeGeometry jarg1_, int jarg2);
  public final static native int DecorativeGeometry_getFaceCamera(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_setRepresentation(long jarg1, DecorativeGeometry jarg1_, int jarg2);
  public final static native int DecorativeGeometry_getRepresentation(long jarg1, DecorativeGeometry jarg1_);
  public final static native void DecorativeGeometry_implementGeometry(long jarg1, DecorativeGeometry jarg1_, long jarg2, DecorativeGeometryImplementation jarg2_);
  public final static native boolean DecorativeGeometry_isOwnerHandle(long jarg1, DecorativeGeometry jarg1_);
  public final static native boolean DecorativeGeometry_isEmptyHandle(long jarg1, DecorativeGeometry jarg1_);
  public final static native long new_DecorativeGeometry__SWIG_2(long jarg1);
  public final static native boolean DecorativeGeometry_hasRep(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_getRep(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_updRep(long jarg1, DecorativeGeometry jarg1_);
  public final static native boolean DecorativeGeometry_hasUserRef(long jarg1, DecorativeGeometry jarg1_);
  public final static native long DecorativeGeometry_getUserRefAsObject(long jarg1, DecorativeGeometry jarg1_);
  public final static native long new_DecorativePoint__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long new_DecorativePoint__SWIG_1();
  public final static native long DecorativePoint_setPoint(long jarg1, DecorativePoint jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativePoint_getPoint(long jarg1, DecorativePoint jarg1_);
  public final static native long DecorativePoint_setBodyId(long jarg1, DecorativePoint jarg1_, int jarg2);
  public final static native long DecorativePoint_setIndexOnBody(long jarg1, DecorativePoint jarg1_, int jarg2);
  public final static native long DecorativePoint_setUserRef(long jarg1, DecorativePoint jarg1_, long jarg2);
  public final static native long DecorativePoint_setTransform(long jarg1, DecorativePoint jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativePoint_setResolution(long jarg1, DecorativePoint jarg1_, double jarg2);
  public final static native long DecorativePoint_setScaleFactors(long jarg1, DecorativePoint jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativePoint_setColor(long jarg1, DecorativePoint jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativePoint_setOpacity(long jarg1, DecorativePoint jarg1_, double jarg2);
  public final static native long DecorativePoint_setLineThickness(long jarg1, DecorativePoint jarg1_, double jarg2);
  public final static native long DecorativePoint_setRepresentation(long jarg1, DecorativePoint jarg1_, int jarg2);
  public final static native void delete_DecorativePoint(long jarg1);
  public final static native long new_DecorativeLine__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long new_DecorativeLine__SWIG_1(long jarg1, Vec3 jarg1_);
  public final static native long new_DecorativeLine__SWIG_2();
  public final static native long DecorativeLine_setPoint1(long jarg1, DecorativeLine jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeLine_setPoint2(long jarg1, DecorativeLine jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeLine_setEndpoints(long jarg1, DecorativeLine jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long DecorativeLine_setBodyId(long jarg1, DecorativeLine jarg1_, int jarg2);
  public final static native long DecorativeLine_setIndexOnBody(long jarg1, DecorativeLine jarg1_, int jarg2);
  public final static native long DecorativeLine_setUserRef(long jarg1, DecorativeLine jarg1_, long jarg2);
  public final static native long DecorativeLine_setTransform(long jarg1, DecorativeLine jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeLine_setResolution(long jarg1, DecorativeLine jarg1_, double jarg2);
  public final static native long DecorativeLine_setScaleFactors(long jarg1, DecorativeLine jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeLine_setColor(long jarg1, DecorativeLine jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeLine_setOpacity(long jarg1, DecorativeLine jarg1_, double jarg2);
  public final static native long DecorativeLine_setLineThickness(long jarg1, DecorativeLine jarg1_, double jarg2);
  public final static native long DecorativeLine_setRepresentation(long jarg1, DecorativeLine jarg1_, int jarg2);
  public final static native long DecorativeLine_getPoint1(long jarg1, DecorativeLine jarg1_);
  public final static native long DecorativeLine_getPoint2(long jarg1, DecorativeLine jarg1_);
  public final static native long DecorativeLine_clone(long jarg1, DecorativeLine jarg1_);
  public final static native void delete_DecorativeLine(long jarg1);
  public final static native long new_DecorativeCircle__SWIG_0(double jarg1);
  public final static native long new_DecorativeCircle__SWIG_1();
  public final static native long DecorativeCircle_setRadius(long jarg1, DecorativeCircle jarg1_, double jarg2);
  public final static native double DecorativeCircle_getRadius(long jarg1, DecorativeCircle jarg1_);
  public final static native long DecorativeCircle_setBodyId(long jarg1, DecorativeCircle jarg1_, int jarg2);
  public final static native long DecorativeCircle_setIndexOnBody(long jarg1, DecorativeCircle jarg1_, int jarg2);
  public final static native long DecorativeCircle_setUserRef(long jarg1, DecorativeCircle jarg1_, long jarg2);
  public final static native long DecorativeCircle_setTransform(long jarg1, DecorativeCircle jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeCircle_setResolution(long jarg1, DecorativeCircle jarg1_, double jarg2);
  public final static native long DecorativeCircle_setScaleFactors(long jarg1, DecorativeCircle jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeCircle_setColor(long jarg1, DecorativeCircle jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeCircle_setOpacity(long jarg1, DecorativeCircle jarg1_, double jarg2);
  public final static native long DecorativeCircle_setLineThickness(long jarg1, DecorativeCircle jarg1_, double jarg2);
  public final static native long DecorativeCircle_setRepresentation(long jarg1, DecorativeCircle jarg1_, int jarg2);
  public final static native void delete_DecorativeCircle(long jarg1);
  public final static native long new_DecorativeSphere__SWIG_0(double jarg1);
  public final static native long new_DecorativeSphere__SWIG_1();
  public final static native long DecorativeSphere_setRadius(long jarg1, DecorativeSphere jarg1_, double jarg2);
  public final static native double DecorativeSphere_getRadius(long jarg1, DecorativeSphere jarg1_);
  public final static native long DecorativeSphere_setBodyId(long jarg1, DecorativeSphere jarg1_, int jarg2);
  public final static native long DecorativeSphere_setIndexOnBody(long jarg1, DecorativeSphere jarg1_, int jarg2);
  public final static native long DecorativeSphere_setUserRef(long jarg1, DecorativeSphere jarg1_, long jarg2);
  public final static native long DecorativeSphere_setTransform(long jarg1, DecorativeSphere jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeSphere_setResolution(long jarg1, DecorativeSphere jarg1_, double jarg2);
  public final static native long DecorativeSphere_setScaleFactors(long jarg1, DecorativeSphere jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeSphere_setColor(long jarg1, DecorativeSphere jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeSphere_setOpacity(long jarg1, DecorativeSphere jarg1_, double jarg2);
  public final static native long DecorativeSphere_setLineThickness(long jarg1, DecorativeSphere jarg1_, double jarg2);
  public final static native long DecorativeSphere_setRepresentation(long jarg1, DecorativeSphere jarg1_, int jarg2);
  public final static native long DecorativeSphere_clone(long jarg1, DecorativeSphere jarg1_);
  public final static native void delete_DecorativeSphere(long jarg1);
  public final static native long new_DecorativeEllipsoid__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long new_DecorativeEllipsoid__SWIG_1();
  public final static native long DecorativeEllipsoid_setRadii(long jarg1, DecorativeEllipsoid jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeEllipsoid_getRadii(long jarg1, DecorativeEllipsoid jarg1_);
  public final static native long DecorativeEllipsoid_setBodyId(long jarg1, DecorativeEllipsoid jarg1_, int jarg2);
  public final static native long DecorativeEllipsoid_setIndexOnBody(long jarg1, DecorativeEllipsoid jarg1_, int jarg2);
  public final static native long DecorativeEllipsoid_setUserRef(long jarg1, DecorativeEllipsoid jarg1_, long jarg2);
  public final static native long DecorativeEllipsoid_setTransform(long jarg1, DecorativeEllipsoid jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeEllipsoid_setResolution(long jarg1, DecorativeEllipsoid jarg1_, double jarg2);
  public final static native long DecorativeEllipsoid_setScaleFactors(long jarg1, DecorativeEllipsoid jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeEllipsoid_setColor(long jarg1, DecorativeEllipsoid jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeEllipsoid_setOpacity(long jarg1, DecorativeEllipsoid jarg1_, double jarg2);
  public final static native long DecorativeEllipsoid_setLineThickness(long jarg1, DecorativeEllipsoid jarg1_, double jarg2);
  public final static native long DecorativeEllipsoid_setRepresentation(long jarg1, DecorativeEllipsoid jarg1_, int jarg2);
  public final static native long DecorativeEllipsoid_clone(long jarg1, DecorativeEllipsoid jarg1_);
  public final static native void delete_DecorativeEllipsoid(long jarg1);
  public final static native long new_DecorativeBrick__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long new_DecorativeBrick__SWIG_1();
  public final static native long DecorativeBrick_setHalfLengths(long jarg1, DecorativeBrick jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeBrick_getHalfLengths(long jarg1, DecorativeBrick jarg1_);
  public final static native long DecorativeBrick_setBodyId(long jarg1, DecorativeBrick jarg1_, int jarg2);
  public final static native long DecorativeBrick_setIndexOnBody(long jarg1, DecorativeBrick jarg1_, int jarg2);
  public final static native long DecorativeBrick_setUserRef(long jarg1, DecorativeBrick jarg1_, long jarg2);
  public final static native long DecorativeBrick_setTransform(long jarg1, DecorativeBrick jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeBrick_setResolution(long jarg1, DecorativeBrick jarg1_, double jarg2);
  public final static native long DecorativeBrick_setScaleFactors(long jarg1, DecorativeBrick jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeBrick_setColor(long jarg1, DecorativeBrick jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeBrick_setOpacity(long jarg1, DecorativeBrick jarg1_, double jarg2);
  public final static native long DecorativeBrick_setLineThickness(long jarg1, DecorativeBrick jarg1_, double jarg2);
  public final static native long DecorativeBrick_setRepresentation(long jarg1, DecorativeBrick jarg1_, int jarg2);
  public final static native long DecorativeBrick_clone(long jarg1, DecorativeBrick jarg1_);
  public final static native void delete_DecorativeBrick(long jarg1);
  public final static native long new_DecorativeCylinder__SWIG_0(double jarg1, double jarg2);
  public final static native long new_DecorativeCylinder__SWIG_1(double jarg1);
  public final static native long new_DecorativeCylinder__SWIG_2();
  public final static native long DecorativeCylinder_setRadius(long jarg1, DecorativeCylinder jarg1_, double jarg2);
  public final static native long DecorativeCylinder_setHalfHeight(long jarg1, DecorativeCylinder jarg1_, double jarg2);
  public final static native double DecorativeCylinder_getRadius(long jarg1, DecorativeCylinder jarg1_);
  public final static native double DecorativeCylinder_getHalfHeight(long jarg1, DecorativeCylinder jarg1_);
  public final static native long DecorativeCylinder_setBodyId(long jarg1, DecorativeCylinder jarg1_, int jarg2);
  public final static native long DecorativeCylinder_setIndexOnBody(long jarg1, DecorativeCylinder jarg1_, int jarg2);
  public final static native long DecorativeCylinder_setUserRef(long jarg1, DecorativeCylinder jarg1_, long jarg2);
  public final static native long DecorativeCylinder_setTransform(long jarg1, DecorativeCylinder jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeCylinder_setResolution(long jarg1, DecorativeCylinder jarg1_, double jarg2);
  public final static native long DecorativeCylinder_setScaleFactors(long jarg1, DecorativeCylinder jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeCylinder_setColor(long jarg1, DecorativeCylinder jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeCylinder_setOpacity(long jarg1, DecorativeCylinder jarg1_, double jarg2);
  public final static native long DecorativeCylinder_setLineThickness(long jarg1, DecorativeCylinder jarg1_, double jarg2);
  public final static native long DecorativeCylinder_setRepresentation(long jarg1, DecorativeCylinder jarg1_, int jarg2);
  public final static native long DecorativeCylinder_clone(long jarg1, DecorativeCylinder jarg1_);
  public final static native void delete_DecorativeCylinder(long jarg1);
  public final static native long new_DecorativeFrame__SWIG_0(double jarg1);
  public final static native long new_DecorativeFrame__SWIG_1();
  public final static native long DecorativeFrame_setAxisLength(long jarg1, DecorativeFrame jarg1_, double jarg2);
  public final static native double DecorativeFrame_getAxisLength(long jarg1, DecorativeFrame jarg1_);
  public final static native long DecorativeFrame_setBodyId(long jarg1, DecorativeFrame jarg1_, int jarg2);
  public final static native long DecorativeFrame_setIndexOnBody(long jarg1, DecorativeFrame jarg1_, int jarg2);
  public final static native long DecorativeFrame_setUserRef(long jarg1, DecorativeFrame jarg1_, long jarg2);
  public final static native long DecorativeFrame_setTransform(long jarg1, DecorativeFrame jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeFrame_setResolution(long jarg1, DecorativeFrame jarg1_, double jarg2);
  public final static native long DecorativeFrame_setScaleFactors(long jarg1, DecorativeFrame jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeFrame_setColor(long jarg1, DecorativeFrame jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeFrame_setOpacity(long jarg1, DecorativeFrame jarg1_, double jarg2);
  public final static native long DecorativeFrame_setLineThickness(long jarg1, DecorativeFrame jarg1_, double jarg2);
  public final static native long DecorativeFrame_setRepresentation(long jarg1, DecorativeFrame jarg1_, int jarg2);
  public final static native long DecorativeFrame_clone(long jarg1, DecorativeFrame jarg1_);
  public final static native void delete_DecorativeFrame(long jarg1);
  public final static native long new_DecorativeText__SWIG_0(String jarg1);
  public final static native long new_DecorativeText__SWIG_1();
  public final static native long DecorativeText_setText(long jarg1, DecorativeText jarg1_, String jarg2);
  public final static native String DecorativeText_getText(long jarg1, DecorativeText jarg1_);
  public final static native long DecorativeText_setIsScreenText(long jarg1, DecorativeText jarg1_, boolean jarg2);
  public final static native boolean DecorativeText_getIsScreenText(long jarg1, DecorativeText jarg1_);
  public final static native long DecorativeText_setBodyId(long jarg1, DecorativeText jarg1_, int jarg2);
  public final static native long DecorativeText_setIndexOnBody(long jarg1, DecorativeText jarg1_, int jarg2);
  public final static native long DecorativeText_setUserRef(long jarg1, DecorativeText jarg1_, long jarg2);
  public final static native long DecorativeText_setTransform(long jarg1, DecorativeText jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeText_setResolution(long jarg1, DecorativeText jarg1_, double jarg2);
  public final static native long DecorativeText_setScaleFactors(long jarg1, DecorativeText jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeText_setColor(long jarg1, DecorativeText jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeText_setOpacity(long jarg1, DecorativeText jarg1_, double jarg2);
  public final static native long DecorativeText_setLineThickness(long jarg1, DecorativeText jarg1_, double jarg2);
  public final static native long DecorativeText_setFaceCamera(long jarg1, DecorativeText jarg1_, int jarg2);
  public final static native long DecorativeText_setRepresentation(long jarg1, DecorativeText jarg1_, int jarg2);
  public final static native void delete_DecorativeText(long jarg1);
  public final static native long new_DecorativeMesh(long jarg1, PolygonalMesh jarg1_);
  public final static native long DecorativeMesh_getMesh(long jarg1, DecorativeMesh jarg1_);
  public final static native long DecorativeMesh_setBodyId(long jarg1, DecorativeMesh jarg1_, int jarg2);
  public final static native long DecorativeMesh_setIndexOnBody(long jarg1, DecorativeMesh jarg1_, int jarg2);
  public final static native long DecorativeMesh_setUserRef(long jarg1, DecorativeMesh jarg1_, long jarg2);
  public final static native long DecorativeMesh_setTransform(long jarg1, DecorativeMesh jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeMesh_setResolution(long jarg1, DecorativeMesh jarg1_, double jarg2);
  public final static native long DecorativeMesh_setScaleFactors(long jarg1, DecorativeMesh jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeMesh_setColor(long jarg1, DecorativeMesh jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeMesh_setOpacity(long jarg1, DecorativeMesh jarg1_, double jarg2);
  public final static native long DecorativeMesh_setLineThickness(long jarg1, DecorativeMesh jarg1_, double jarg2);
  public final static native long DecorativeMesh_setRepresentation(long jarg1, DecorativeMesh jarg1_, int jarg2);
  public final static native void delete_DecorativeMesh(long jarg1);
  public final static native long new_DecorativeMeshFile(String jarg1);
  public final static native String DecorativeMeshFile_getMeshFile(long jarg1, DecorativeMeshFile jarg1_);
  public final static native long DecorativeMeshFile_setBodyId(long jarg1, DecorativeMeshFile jarg1_, int jarg2);
  public final static native long DecorativeMeshFile_setIndexOnBody(long jarg1, DecorativeMeshFile jarg1_, int jarg2);
  public final static native long DecorativeMeshFile_setUserRef(long jarg1, DecorativeMeshFile jarg1_, long jarg2);
  public final static native long DecorativeMeshFile_setTransform(long jarg1, DecorativeMeshFile jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeMeshFile_setResolution(long jarg1, DecorativeMeshFile jarg1_, double jarg2);
  public final static native long DecorativeMeshFile_setScaleFactors(long jarg1, DecorativeMeshFile jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeMeshFile_setColor(long jarg1, DecorativeMeshFile jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeMeshFile_setOpacity(long jarg1, DecorativeMeshFile jarg1_, double jarg2);
  public final static native long DecorativeMeshFile_setLineThickness(long jarg1, DecorativeMeshFile jarg1_, double jarg2);
  public final static native long DecorativeMeshFile_setRepresentation(long jarg1, DecorativeMeshFile jarg1_, int jarg2);
  public final static native long DecorativeMeshFile_clone(long jarg1, DecorativeMeshFile jarg1_);
  public final static native void delete_DecorativeMeshFile(long jarg1);
  public final static native long new_DecorativeTorus__SWIG_0(double jarg1, double jarg2);
  public final static native long new_DecorativeTorus__SWIG_1(double jarg1);
  public final static native long new_DecorativeTorus__SWIG_2();
  public final static native long DecorativeTorus_setTorusRadius(long jarg1, DecorativeTorus jarg1_, double jarg2);
  public final static native long DecorativeTorus_setTubeRadius(long jarg1, DecorativeTorus jarg1_, double jarg2);
  public final static native double DecorativeTorus_getTorusRadius(long jarg1, DecorativeTorus jarg1_);
  public final static native double DecorativeTorus_getTubeRadius(long jarg1, DecorativeTorus jarg1_);
  public final static native long DecorativeTorus_setBodyId(long jarg1, DecorativeTorus jarg1_, int jarg2);
  public final static native long DecorativeTorus_setIndexOnBody(long jarg1, DecorativeTorus jarg1_, int jarg2);
  public final static native long DecorativeTorus_setUserRef(long jarg1, DecorativeTorus jarg1_, long jarg2);
  public final static native long DecorativeTorus_setTransform(long jarg1, DecorativeTorus jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeTorus_setResolution(long jarg1, DecorativeTorus jarg1_, double jarg2);
  public final static native long DecorativeTorus_setScaleFactors(long jarg1, DecorativeTorus jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeTorus_setColor(long jarg1, DecorativeTorus jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeTorus_setOpacity(long jarg1, DecorativeTorus jarg1_, double jarg2);
  public final static native long DecorativeTorus_setLineThickness(long jarg1, DecorativeTorus jarg1_, double jarg2);
  public final static native long DecorativeTorus_setRepresentation(long jarg1, DecorativeTorus jarg1_, int jarg2);
  public final static native long DecorativeTorus_clone(long jarg1, DecorativeTorus jarg1_);
  public final static native void delete_DecorativeTorus(long jarg1);
  public final static native long new_DecorativeArrow__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_, double jarg3);
  public final static native long new_DecorativeArrow__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long new_DecorativeArrow__SWIG_2(long jarg1, Vec3 jarg1_);
  public final static native long new_DecorativeArrow__SWIG_3();
  public final static native long DecorativeArrow_getStartPoint(long jarg1, DecorativeArrow jarg1_);
  public final static native long DecorativeArrow_getEndPoint(long jarg1, DecorativeArrow jarg1_);
  public final static native double DecorativeArrow_getTipLength(long jarg1, DecorativeArrow jarg1_);
  public final static native long DecorativeArrow_setStartPoint(long jarg1, DecorativeArrow jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeArrow_setEndPoint(long jarg1, DecorativeArrow jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeArrow_setTipLength(long jarg1, DecorativeArrow jarg1_, double jarg2);
  public final static native long DecorativeArrow_setBodyId(long jarg1, DecorativeArrow jarg1_, int jarg2);
  public final static native long DecorativeArrow_setIndexOnBody(long jarg1, DecorativeArrow jarg1_, int jarg2);
  public final static native long DecorativeArrow_setUserRef(long jarg1, DecorativeArrow jarg1_, long jarg2);
  public final static native long DecorativeArrow_setTransform(long jarg1, DecorativeArrow jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeArrow_setResolution(long jarg1, DecorativeArrow jarg1_, double jarg2);
  public final static native long DecorativeArrow_setScaleFactors(long jarg1, DecorativeArrow jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeArrow_setColor(long jarg1, DecorativeArrow jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeArrow_setOpacity(long jarg1, DecorativeArrow jarg1_, double jarg2);
  public final static native long DecorativeArrow_setLineThickness(long jarg1, DecorativeArrow jarg1_, double jarg2);
  public final static native long DecorativeArrow_setRepresentation(long jarg1, DecorativeArrow jarg1_, int jarg2);
  public final static native long DecorativeArrow_clone(long jarg1, DecorativeArrow jarg1_);
  public final static native void delete_DecorativeArrow(long jarg1);
  public final static native long new_DecorativeCone__SWIG_0(long jarg1, Vec3 jarg1_, long jarg2, UnitVec3 jarg2_, double jarg3, double jarg4);
  public final static native long new_DecorativeCone__SWIG_1(long jarg1, Vec3 jarg1_, long jarg2, UnitVec3 jarg2_, double jarg3);
  public final static native long new_DecorativeCone__SWIG_2(long jarg1, Vec3 jarg1_, long jarg2, UnitVec3 jarg2_);
  public final static native long new_DecorativeCone__SWIG_3(long jarg1, Vec3 jarg1_);
  public final static native long new_DecorativeCone__SWIG_4();
  public final static native long DecorativeCone_getOrigin(long jarg1, DecorativeCone jarg1_);
  public final static native long DecorativeCone_getDirection(long jarg1, DecorativeCone jarg1_);
  public final static native double DecorativeCone_getHeight(long jarg1, DecorativeCone jarg1_);
  public final static native double DecorativeCone_getBaseRadius(long jarg1, DecorativeCone jarg1_);
  public final static native long DecorativeCone_setOrigin(long jarg1, DecorativeCone jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeCone_setDirection(long jarg1, DecorativeCone jarg1_, long jarg2, UnitVec3 jarg2_);
  public final static native long DecorativeCone_setHeight(long jarg1, DecorativeCone jarg1_, double jarg2);
  public final static native long DecorativeCone_setBaseRadius(long jarg1, DecorativeCone jarg1_, double jarg2);
  public final static native long DecorativeCone_setBodyId(long jarg1, DecorativeCone jarg1_, int jarg2);
  public final static native long DecorativeCone_setIndexOnBody(long jarg1, DecorativeCone jarg1_, int jarg2);
  public final static native long DecorativeCone_setUserRef(long jarg1, DecorativeCone jarg1_, long jarg2);
  public final static native long DecorativeCone_setTransform(long jarg1, DecorativeCone jarg1_, long jarg2, Transform jarg2_);
  public final static native long DecorativeCone_setResolution(long jarg1, DecorativeCone jarg1_, double jarg2);
  public final static native long DecorativeCone_setScaleFactors(long jarg1, DecorativeCone jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeCone_setColor(long jarg1, DecorativeCone jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long DecorativeCone_setOpacity(long jarg1, DecorativeCone jarg1_, double jarg2);
  public final static native long DecorativeCone_setLineThickness(long jarg1, DecorativeCone jarg1_, double jarg2);
  public final static native long DecorativeCone_setRepresentation(long jarg1, DecorativeCone jarg1_, int jarg2);
  public final static native long DecorativeCone_clone(long jarg1, DecorativeCone jarg1_);
  public final static native void delete_DecorativeCone(long jarg1);
  public final static native long new_Decorations__SWIG_0();
  public final static native long new_Decorations__SWIG_1(long jarg1, DecorativeGeometry jarg1_);
  public final static native long Decorations_addDecoration__SWIG_0(long jarg1, Decorations jarg1_, long jarg2, DecorativeGeometry jarg2_);
  public final static native long Decorations_addDecoration__SWIG_1(long jarg1, Decorations jarg1_, long jarg2, Transform jarg2_, long jarg3, DecorativeGeometry jarg3_);
  public final static native int Decorations_getNumDecorations(long jarg1, Decorations jarg1_);
  public final static native long Decorations_getDecoration(long jarg1, Decorations jarg1_, int jarg2);
  public final static native long Decorations_setBodyId(long jarg1, Decorations jarg1_, int jarg2);
  public final static native long Decorations_setIndexOnBody(long jarg1, Decorations jarg1_, int jarg2);
  public final static native long Decorations_setUserRef(long jarg1, Decorations jarg1_, long jarg2);
  public final static native long Decorations_setTransform(long jarg1, Decorations jarg1_, long jarg2, Transform jarg2_);
  public final static native long Decorations_setResolution(long jarg1, Decorations jarg1_, double jarg2);
  public final static native long Decorations_setScaleFactors(long jarg1, Decorations jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Decorations_setColor(long jarg1, Decorations jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long Decorations_setOpacity(long jarg1, Decorations jarg1_, double jarg2);
  public final static native long Decorations_setLineThickness(long jarg1, Decorations jarg1_, double jarg2);
  public final static native long Decorations_setRepresentation(long jarg1, Decorations jarg1_, int jarg2);
  public final static native void delete_Decorations(long jarg1);
  public final static native void delete_DecorativeGeometryImplementation(long jarg1);
  public final static native void DecorativeGeometryImplementation_implementPointGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativePoint jarg2_);
  public final static native void DecorativeGeometryImplementation_implementLineGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeLine jarg2_);
  public final static native void DecorativeGeometryImplementation_implementBrickGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeBrick jarg2_);
  public final static native void DecorativeGeometryImplementation_implementCylinderGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeCylinder jarg2_);
  public final static native void DecorativeGeometryImplementation_implementCircleGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeCircle jarg2_);
  public final static native void DecorativeGeometryImplementation_implementSphereGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeSphere jarg2_);
  public final static native void DecorativeGeometryImplementation_implementEllipsoidGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeEllipsoid jarg2_);
  public final static native void DecorativeGeometryImplementation_implementFrameGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeFrame jarg2_);
  public final static native void DecorativeGeometryImplementation_implementTextGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeText jarg2_);
  public final static native void DecorativeGeometryImplementation_implementMeshGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeMesh jarg2_);
  public final static native void DecorativeGeometryImplementation_implementMeshFileGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeMeshFile jarg2_);
  public final static native void DecorativeGeometryImplementation_implementTorusGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeTorus jarg2_);
  public final static native void DecorativeGeometryImplementation_implementArrowGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeArrow jarg2_);
  public final static native void DecorativeGeometryImplementation_implementConeGeometry(long jarg1, DecorativeGeometryImplementation jarg1_, long jarg2, DecorativeCone jarg2_);
  public final static native long new_DecorativeGeometryImplementation();
  public final static native void DecorativeGeometryImplementation_director_connect(DecorativeGeometryImplementation obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void DecorativeGeometryImplementation_change_ownership(DecorativeGeometryImplementation obj, long cptr, boolean take_or_release);
  public final static native long new_ArrayDecorativeGeometry__SWIG_0();
  public final static native long new_ArrayDecorativeGeometry__SWIG_1(long jarg1);
  public final static native long new_ArrayDecorativeGeometry__SWIG_2(long jarg1, long jarg2, DecorativeGeometry jarg2_);
  public final static native long new_ArrayDecorativeGeometry__SWIG_3(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long new_ArrayDecorativeGeometry__SWIG_4(long jarg1, DecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3, DontCopy jarg3_);
  public final static native void delete_ArrayDecorativeGeometry(long jarg1);
  public final static native long ArrayDecorativeGeometry_deallocate(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native void ArrayDecorativeGeometry_assign(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, long jarg3, DecorativeGeometry jarg3_);
  public final static native void ArrayDecorativeGeometry_fill(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_);
  public final static native void ArrayDecorativeGeometry_swap(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, ArrayDecorativeGeometry jarg2_);
  public final static native long ArrayDecorativeGeometry_adoptData__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3, long jarg4);
  public final static native long ArrayDecorativeGeometry_adoptData__SWIG_1(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3);
  public final static native long ArrayDecorativeGeometry_shareData__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3);
  public final static native long ArrayDecorativeGeometry_shareData__SWIG_1(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3, DecorativeGeometry jarg3_);
  public final static native long ArrayDecorativeGeometry_size(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_max_size(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native boolean ArrayDecorativeGeometry_empty(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_capacity(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native void ArrayDecorativeGeometry_resize__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2);
  public final static native void ArrayDecorativeGeometry_resize__SWIG_1(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, long jarg3, DecorativeGeometry jarg3_);
  public final static native void ArrayDecorativeGeometry_reserve(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2);
  public final static native void ArrayDecorativeGeometry_shrink_to_fit(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_allocated(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native boolean ArrayDecorativeGeometry_isOwner(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_cbegin(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_begin__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_cend(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_end__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_crbegin(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_rbegin__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_crend(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_rend__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_cdata(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_data__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_at__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2);
  public final static native long ArrayDecorativeGeometry_getElt(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2);
  public final static native long ArrayDecorativeGeometry_updElt(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2);
  public final static native long ArrayDecorativeGeometry_front__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_back__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native void ArrayDecorativeGeometry_push_back__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_);
  public final static native void ArrayDecorativeGeometry_push_back__SWIG_1(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_raw_push_back(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native void ArrayDecorativeGeometry_pop_back(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_erase__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3, DecorativeGeometry jarg3_);
  public final static native long ArrayDecorativeGeometry_erase__SWIG_1(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_);
  public final static native long ArrayDecorativeGeometry_eraseFast(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_);
  public final static native void ArrayDecorativeGeometry_clear(long jarg1, ArrayDecorativeGeometry jarg1_);
  public final static native long ArrayDecorativeGeometry_insert__SWIG_0(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3, long jarg4, DecorativeGeometry jarg4_);
  public final static native long ArrayDecorativeGeometry_insert__SWIG_1(long jarg1, ArrayDecorativeGeometry jarg1_, long jarg2, DecorativeGeometry jarg2_, long jarg3, DecorativeGeometry jarg3_);
  public final static native int Stage_Empty_get();
  public final static native int Stage_Topology_get();
  public final static native int Stage_Model_get();
  public final static native int Stage_Instance_get();
  public final static native int Stage_Time_get();
  public final static native int Stage_Position_get();
  public final static native int Stage_Velocity_get();
  public final static native int Stage_Dynamics_get();
  public final static native int Stage_Acceleration_get();
  public final static native int Stage_Report_get();
  public final static native int Stage_Infinity_get();
  public final static native int Stage_LowestValid_get();
  public final static native int Stage_HighestValid_get();
  public final static native int Stage_LowestRuntime_get();
  public final static native int Stage_HighestRuntime_get();
  public final static native int Stage_NValid_get();
  public final static native int Stage_NRuntime_get();
  public final static native long new_Stage__SWIG_0();
  public final static native long new_Stage__SWIG_1(int jarg1);
  public final static native long Stage_next(long jarg1, Stage jarg1_);
  public final static native long Stage_prev(long jarg1, Stage jarg1_);
  public final static native long Stage_getName(long jarg1, Stage jarg1_);
  public final static native void Stage_invalidate(long jarg1, Stage jarg1_, long jarg2, Stage jarg2_);
  public final static native boolean Stage_isInRuntimeRange(long jarg1, Stage jarg1_);
  public final static native void delete_Stage(long jarg1);
  public final static native long new_State__SWIG_0();
  public final static native void delete_State(long jarg1);
  public final static native void State_clear(long jarg1, State jarg1_);
  public final static native void State_setNumSubsystems(long jarg1, State jarg1_, int jarg2);
  public final static native long new_State__SWIG_1(long jarg1, State jarg1_);
  public final static native int State_getNumSubsystems(long jarg1, State jarg1_);
  public final static native long State_getSystemStage(long jarg1, State jarg1_);
  public final static native void State_invalidateAll(long jarg1, State jarg1_, long jarg2, Stage jarg2_);
  public final static native void State_invalidateAllCacheAtOrAbove(long jarg1, State jarg1_, long jarg2, Stage jarg2_);
  public final static native int State_getNY(long jarg1, State jarg1_);
  public final static native int State_getNQ__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getQStart__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getNU__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getUStart__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getNZ__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getZStart__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getNYErr(long jarg1, State jarg1_);
  public final static native int State_getNQErr__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getQErrStart__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getNUErr__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getUErrStart__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getNUDotErr__SWIG_0(long jarg1, State jarg1_);
  public final static native int State_getNMultipliers(long jarg1, State jarg1_);
  public final static native int State_getNEventTriggers(long jarg1, State jarg1_);
  public final static native int State_getNEventTriggersByStage(long jarg1, State jarg1_, long jarg2, Stage jarg2_);
  public final static native long State_getEventTriggerStartByStage(long jarg1, State jarg1_, long jarg2, Stage jarg2_);
  public final static native int State_getQStart__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getNQ__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getUStart__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getNU__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getZStart__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getNZ__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getQErrStart__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getNQErr__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getUErrStart__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getNUErr__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getUDotErrStart(long jarg1, State jarg1_, int jarg2);
  public final static native int State_getNUDotErr__SWIG_1(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getEventTriggers(long jarg1, State jarg1_);
  public final static native long State_getEventTriggersByStage__SWIG_0(long jarg1, State jarg1_, long jarg2, Stage jarg2_);
  public final static native long State_getEventTriggersByStage__SWIG_1(long jarg1, State jarg1_, int jarg2, long jarg3, Stage jarg3_);
  public final static native long State_updEventTriggers(long jarg1, State jarg1_);
  public final static native long State_updEventTriggersByStage__SWIG_0(long jarg1, State jarg1_, long jarg2, Stage jarg2_);
  public final static native long State_updEventTriggersByStage__SWIG_1(long jarg1, State jarg1_, int jarg2, long jarg3, Stage jarg3_);
  public final static native long State_getQ__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getU__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getZ__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getUWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getZWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updQ__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updU__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updZ__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updUWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updZWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getQDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getUDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getZDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getQDotDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updQDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updUDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updZDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updQDotDot__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getQErr__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getUErr__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getUDotErr__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getMultipliers__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getQErrWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_getUErrWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updQErr__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updUErr__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updUDotErr__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updMultipliers__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updQErrWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native long State_updUErrWeights__SWIG_0(long jarg1, State jarg1_, int jarg2);
  public final static native double State_getTime(long jarg1, State jarg1_);
  public final static native long State_getY(long jarg1, State jarg1_);
  public final static native long State_getQ__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getU__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getZ__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getUWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getZWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updUWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updZWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updTime(long jarg1, State jarg1_);
  public final static native long State_updY(long jarg1, State jarg1_);
  public final static native void State_setTime(long jarg1, State jarg1_, double jarg2);
  public final static native void State_setY(long jarg1, State jarg1_, long jarg2, Vector jarg2_);
  public final static native long State_updQ__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updU__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updZ__SWIG_1(long jarg1, State jarg1_);
  public final static native void State_setQ(long jarg1, State jarg1_, long jarg2, Vector jarg2_);
  public final static native void State_setU(long jarg1, State jarg1_, long jarg2, Vector jarg2_);
  public final static native void State_setZ(long jarg1, State jarg1_, long jarg2, Vector jarg2_);
  public final static native long State_getYDot(long jarg1, State jarg1_);
  public final static native long State_getQDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getZDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getUDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getQDotDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updYDot(long jarg1, State jarg1_);
  public final static native long State_updQDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updZDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updUDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updQDotDot__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getYErr(long jarg1, State jarg1_);
  public final static native long State_getQErr__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getUErr__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getUDotErr__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getMultipliers__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getQErrWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_getUErrWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updQErrWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updUErrWeights__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updYErr(long jarg1, State jarg1_);
  public final static native long State_updQErr__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updUErr__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updUDotErr__SWIG_1(long jarg1, State jarg1_);
  public final static native long State_updMultipliers__SWIG_1(long jarg1, State jarg1_);
  public final static native void State_getSystemStageVersions(long jarg1, State jarg1_, long jarg2, SimTKArrayInt jarg2_);
  public final static native long State_getLowestSystemStageDifference(long jarg1, State jarg1_, long jarg2, SimTKArrayInt jarg2_);
  public final static native void State_setSystemTopologyStageVersion(long jarg1, State jarg1_, int jarg2);
  public final static native void State_autoUpdateDiscreteVariables(long jarg1, State jarg1_);
  public final static native long State_cacheToString(long jarg1, State jarg1_);
  public final static native long new_StdVectorState__SWIG_0();
  public final static native long new_StdVectorState__SWIG_1(long jarg1);
  public final static native long StdVectorState_size(long jarg1, StdVectorState jarg1_);
  public final static native long StdVectorState_capacity(long jarg1, StdVectorState jarg1_);
  public final static native void StdVectorState_reserve(long jarg1, StdVectorState jarg1_, long jarg2);
  public final static native boolean StdVectorState_isEmpty(long jarg1, StdVectorState jarg1_);
  public final static native void StdVectorState_clear(long jarg1, StdVectorState jarg1_);
  public final static native void StdVectorState_add(long jarg1, StdVectorState jarg1_, long jarg2, State jarg2_);
  public final static native long StdVectorState_get(long jarg1, StdVectorState jarg1_, int jarg2);
  public final static native void StdVectorState_set(long jarg1, StdVectorState jarg1_, int jarg2, long jarg3, State jarg3_);
  public final static native void delete_StdVectorState(long jarg1);
  public final static native long new_SimbodyMatterSubsystem();
  public final static native void delete_SimbodyMatterSubsystem(long jarg1);
  public final static native double SimbodyMatterSubsystem_calcSystemMass(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcSystemMassCenterLocationInGround(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcSystemMassPropertiesInGround(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcSystemCentralInertiaInGround(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcSystemMassCenterVelocityInGround(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcSystemMassCenterAccelerationInGround(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcSystemMomentumAboutGroundOrigin(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcSystemCentralMomentum(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native double SimbodyMatterSubsystem_calcKineticEnergy(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native void SimbodyMatterSubsystem_multiplyBySystemJacobian(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, VectorOfSpatialVec jarg4_);
  public final static native void SimbodyMatterSubsystem_calcBiasForSystemJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, VectorOfSpatialVec jarg3_);
  public final static native void SimbodyMatterSubsystem_calcBiasForSystemJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_);
  public final static native void SimbodyMatterSubsystem_multiplyBySystemJacobianTranspose(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, VectorOfSpatialVec jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_calcSystemJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, MatrixOfSpatialVec jarg3_);
  public final static native void SimbodyMatterSubsystem_calcSystemJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_multiplyByStationJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, Vector jarg5_, long jarg6, VectorVec3 jarg6_);
  public final static native long SimbodyMatterSubsystem_multiplyByStationJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_multiplyByStationJacobianTranspose__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, VectorVec3 jarg5_, long jarg6, Vector jarg6_);
  public final static native void SimbodyMatterSubsystem_multiplyByStationJacobianTranspose__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5, Vec3 jarg5_, long jarg6, Vector jarg6_);
  public final static native void SimbodyMatterSubsystem_calcStationJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, MatrixVec3 jarg5_);
  public final static native void SimbodyMatterSubsystem_calcStationJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5, RowVectorVec3 jarg5_);
  public final static native void SimbodyMatterSubsystem_calcStationJacobian__SWIG_2(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, Matrix jarg5_);
  public final static native void SimbodyMatterSubsystem_calcStationJacobian__SWIG_3(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5, Matrix jarg5_);
  public final static native void SimbodyMatterSubsystem_calcBiasForStationJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, VectorVec3 jarg5_);
  public final static native void SimbodyMatterSubsystem_calcBiasForStationJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, Vector jarg5_);
  public final static native long SimbodyMatterSubsystem_calcBiasForStationJacobian__SWIG_2(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_);
  public final static native void SimbodyMatterSubsystem_multiplyByFrameJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, Vector jarg5_, long jarg6, VectorOfSpatialVec jarg6_);
  public final static native long SimbodyMatterSubsystem_multiplyByFrameJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_multiplyByFrameJacobianTranspose__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, VectorOfSpatialVec jarg5_, long jarg6, Vector jarg6_);
  public final static native void SimbodyMatterSubsystem_multiplyByFrameJacobianTranspose__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5, SpatialVec jarg5_, long jarg6, Vector jarg6_);
  public final static native void SimbodyMatterSubsystem_calcFrameJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, MatrixOfSpatialVec jarg5_);
  public final static native void SimbodyMatterSubsystem_calcFrameJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5);
  public final static native void SimbodyMatterSubsystem_calcFrameJacobian__SWIG_2(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, Matrix jarg5_);
  public final static native void SimbodyMatterSubsystem_calcFrameJacobian__SWIG_3(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_, long jarg5, Matrix jarg5_);
  public final static native void SimbodyMatterSubsystem_calcBiasForFrameJacobian__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, VectorOfSpatialVec jarg5_);
  public final static native void SimbodyMatterSubsystem_calcBiasForFrameJacobian__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, SimTKArrayMobilizedBodyIndex jarg3_, long jarg4, SimTKArrayVec3 jarg4_, long jarg5, Vector jarg5_);
  public final static native long SimbodyMatterSubsystem_calcBiasForFrameJacobian__SWIG_2(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, int jarg3, long jarg4, Vec3 jarg4_);
  public final static native void SimbodyMatterSubsystem_multiplyByM(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_multiplyByMInv(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_calcM(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_calcMInv(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_calcProjectedMInv(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_solveForConstraintImpulses(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_multiplyByG__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_multiplyByG__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_calcBiasForMultiplyByG(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_);
  public final static native void SimbodyMatterSubsystem_calcG(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_calcBiasForAccelerationConstraints(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_);
  public final static native void SimbodyMatterSubsystem_multiplyByGTranspose(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_calcGTranspose(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_multiplyByPq__SWIG_0(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_multiplyByPq__SWIG_1(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_calcBiasForMultiplyByPq(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_);
  public final static native void SimbodyMatterSubsystem_calcPq(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_multiplyByPqTranspose(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_calcPqTranspose(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_calcP(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_calcPt(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Matrix jarg3_);
  public final static native void SimbodyMatterSubsystem_multiplyByN(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, boolean jarg3, long jarg4, Vector jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_multiplyByNInv(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, boolean jarg3, long jarg4, Vector jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_multiplyByNDot(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, boolean jarg3, long jarg4, Vector jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_calcAcceleration(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, VectorOfSpatialVec jarg4_, long jarg5, Vector jarg5_, long jarg6, VectorOfSpatialVec jarg6_);
  public final static native void SimbodyMatterSubsystem_calcAccelerationIgnoringConstraints(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, VectorOfSpatialVec jarg4_, long jarg5, Vector jarg5_, long jarg6, VectorOfSpatialVec jarg6_);
  public final static native void SimbodyMatterSubsystem_calcResidualForceIgnoringConstraints(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, VectorOfSpatialVec jarg4_, long jarg5, Vector jarg5_, long jarg6, Vector jarg6_);
  public final static native void SimbodyMatterSubsystem_calcResidualForce(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, VectorOfSpatialVec jarg4_, long jarg5, Vector jarg5_, long jarg6, Vector jarg6_, long jarg7, Vector jarg7_);
  public final static native void SimbodyMatterSubsystem_calcBodyAccelerationFromUDot(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, VectorOfSpatialVec jarg4_);
  public final static native void SimbodyMatterSubsystem_calcConstraintForcesFromMultipliers(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, VectorOfSpatialVec jarg4_, long jarg5, Vector jarg5_);
  public final static native void SimbodyMatterSubsystem_calcMobilizerReactionForces(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, VectorOfSpatialVec jarg3_);
  public final static native long SimbodyMatterSubsystem_getMotionMultipliers(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native long SimbodyMatterSubsystem_calcMotionErrors(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Stage jarg3_);
  public final static native void SimbodyMatterSubsystem_findMotionForces(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_);
  public final static native long SimbodyMatterSubsystem_getConstraintMultipliers(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native void SimbodyMatterSubsystem_findConstraintForces(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, VectorOfSpatialVec jarg3_, long jarg4, Vector jarg4_);
  public final static native double SimbodyMatterSubsystem_calcMotionPower(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native double SimbodyMatterSubsystem_calcConstraintPower(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_);
  public final static native void SimbodyMatterSubsystem_calcTreeEquivalentMobilityForces(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, VectorOfSpatialVec jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_calcQDot(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native void SimbodyMatterSubsystem_calcQDotDot(long jarg1, SimbodyMatterSubsystem jarg1_, long jarg2, State jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_);
  public final static native boolean SimbodyMatterSubsystem_isInstanceOf(long jarg1);
  public final static native long SimbodyMatterSubsystem_downcast(long jarg1);
  public final static native long SimbodyMatterSubsystem_updDowncast(long jarg1);
  public final static native long SimbodyMatterSubsystem_getRep(long jarg1, SimbodyMatterSubsystem jarg1_);
  public final static native long SimbodyMatterSubsystem_updRep(long jarg1, SimbodyMatterSubsystem jarg1_);
  public final static native long new_SimTKVisualizer__SWIG_0(long jarg1);
  public final static native long new_SimTKVisualizer__SWIG_1(long jarg1, long jarg2);
  public final static native long new_SimTKVisualizer__SWIG_2(long jarg1, SimTKVisualizer jarg1_);
  public final static native void delete_SimTKVisualizer(long jarg1);
  public final static native void SimTKVisualizer_shutdown(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_setShutdownWhenDestructed(long jarg1, SimTKVisualizer jarg1_, boolean jarg2);
  public final static native boolean SimTKVisualizer_getShutdownWhenDestructed(long jarg1, SimTKVisualizer jarg1_);
  public final static native int SimTKVisualizer_PassThrough_get();
  public final static native int SimTKVisualizer_Sampling_get();
  public final static native int SimTKVisualizer_RealTime_get();
  public final static native int SimTKVisualizer_GroundAndSky_get();
  public final static native int SimTKVisualizer_SolidColor_get();
  public final static native int SimTKVisualizer_ViewMenuId_get();
  public final static native long SimTKVisualizer_setBackgroundType(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native long SimTKVisualizer_setBackgroundColor(long jarg1, SimTKVisualizer jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long SimTKVisualizer_setShowShadows(long jarg1, SimTKVisualizer jarg1_, boolean jarg2);
  public final static native long SimTKVisualizer_setShowFrameRate(long jarg1, SimTKVisualizer jarg1_, boolean jarg2);
  public final static native long SimTKVisualizer_setShowSimTime(long jarg1, SimTKVisualizer jarg1_, boolean jarg2);
  public final static native long SimTKVisualizer_setShowFrameNumber(long jarg1, SimTKVisualizer jarg1_, boolean jarg2);
  public final static native long SimTKVisualizer_setWindowTitle(long jarg1, SimTKVisualizer jarg1_, long jarg2);
  public final static native long SimTKVisualizer_setSystemUpDirection(long jarg1, SimTKVisualizer jarg1_, long jarg2, CoordinateDirection jarg2_);
  public final static native long SimTKVisualizer_getSystemUpDirection(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_setGroundHeight(long jarg1, SimTKVisualizer jarg1_, double jarg2);
  public final static native double SimTKVisualizer_getGroundHeight(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_setMode(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native int SimTKVisualizer_getMode(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_setDesiredFrameRate(long jarg1, SimTKVisualizer jarg1_, double jarg2);
  public final static native double SimTKVisualizer_getDesiredFrameRate(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_setRealTimeScale(long jarg1, SimTKVisualizer jarg1_, double jarg2);
  public final static native double SimTKVisualizer_getRealTimeScale(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_setDesiredBufferLengthInSec(long jarg1, SimTKVisualizer jarg1_, double jarg2);
  public final static native double SimTKVisualizer_getDesiredBufferLengthInSec(long jarg1, SimTKVisualizer jarg1_);
  public final static native double SimTKVisualizer_getActualBufferLengthInSec(long jarg1, SimTKVisualizer jarg1_);
  public final static native int SimTKVisualizer_getActualBufferLengthInFrames(long jarg1, SimTKVisualizer jarg1_);
  public final static native int SimTKVisualizer_addInputListener(long jarg1, SimTKVisualizer jarg1_, long jarg2, SimTKVisualizerInputListener jarg2_);
  public final static native int SimTKVisualizer_getNumInputListeners(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getInputListener(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native long SimTKVisualizer_updInputListener(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native int SimTKVisualizer_addFrameController(long jarg1, SimTKVisualizer jarg1_, long jarg2, SimTKVisualizer.FrameController jarg2_);
  public final static native int SimTKVisualizer_getNumFrameControllers(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getFrameController(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native long SimTKVisualizer_updFrameController(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native void SimTKVisualizer_report(long jarg1, SimTKVisualizer jarg1_, long jarg2, State jarg2_);
  public final static native void SimTKVisualizer_flushFrames(long jarg1, SimTKVisualizer jarg1_);
  public final static native void SimTKVisualizer_drawFrameNow(long jarg1, SimTKVisualizer jarg1_, long jarg2, State jarg2_);
  public final static native long SimTKVisualizer_addMenu(long jarg1, SimTKVisualizer jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native long SimTKVisualizer_addSlider(long jarg1, SimTKVisualizer jarg1_, long jarg2, int jarg3, double jarg4, double jarg5, double jarg6);
  public final static native int SimTKVisualizer_addDecoration(long jarg1, SimTKVisualizer jarg1_, int jarg2, long jarg3, Transform jarg3_, long jarg4, DecorativeGeometry jarg4_);
  public final static native int SimTKVisualizer_getNumDecorations(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getDecoration(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native long SimTKVisualizer_updDecoration(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native int SimTKVisualizer_addRubberBandLine(long jarg1, SimTKVisualizer jarg1_, int jarg2, long jarg3, Vec3 jarg3_, int jarg4, long jarg5, Vec3 jarg5_, long jarg6, DecorativeLine jarg6_);
  public final static native int SimTKVisualizer_getNumRubberBandLines(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getRubberBandLine(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native long SimTKVisualizer_updRubberBandLine(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native int SimTKVisualizer_addDecorationGenerator(long jarg1, SimTKVisualizer jarg1_, long jarg2);
  public final static native int SimTKVisualizer_getNumDecorationGenerators(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getDecorationGenerator(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native long SimTKVisualizer_updDecorationGenerator(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native long SimTKVisualizer_setCameraTransform(long jarg1, SimTKVisualizer jarg1_, long jarg2, Transform jarg2_);
  public final static native long SimTKVisualizer_zoomCameraToShowAllGeometry(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_pointCameraAt(long jarg1, SimTKVisualizer jarg1_, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long SimTKVisualizer_setCameraFieldOfView(long jarg1, SimTKVisualizer jarg1_, double jarg2);
  public final static native long SimTKVisualizer_setCameraClippingPlanes(long jarg1, SimTKVisualizer jarg1_, double jarg2, double jarg3);
  public final static native long SimTKVisualizer_setSliderValue(long jarg1, SimTKVisualizer jarg1_, int jarg2, double jarg3);
  public final static native long SimTKVisualizer_setSliderRange(long jarg1, SimTKVisualizer jarg1_, int jarg2, double jarg3, double jarg4);
  public final static native void SimTKVisualizer_dumpStats(long jarg1, SimTKVisualizer jarg1_, long jarg2);
  public final static native void SimTKVisualizer_clearStats(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getInputListeners(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getFrameControllers(long jarg1, SimTKVisualizer jarg1_);
  public final static native long SimTKVisualizer_getSystem(long jarg1, SimTKVisualizer jarg1_);
  public final static native int SimTKVisualizer_getRefCount(long jarg1, SimTKVisualizer jarg1_);
  public final static native void SimTKVisualizer_FrameController_generateControls(long jarg1, SimTKVisualizer.FrameController jarg1_, long jarg2, SimTKVisualizer jarg2_, long jarg3, State jarg3_, long jarg4, ArrayDecorativeGeometry jarg4_);
  public final static native void delete_SimTKVisualizer_FrameController(long jarg1);
  public final static native long new_SimTKVisualizer_BodyFollower__SWIG_0(long jarg1, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_, long jarg4, UnitVec3 jarg4_);
  public final static native long new_SimTKVisualizer_BodyFollower__SWIG_1(long jarg1, long jarg2, Vec3 jarg2_, long jarg3, Vec3 jarg3_);
  public final static native long new_SimTKVisualizer_BodyFollower__SWIG_2(long jarg1, long jarg2, Vec3 jarg2_);
  public final static native long new_SimTKVisualizer_BodyFollower__SWIG_3(long jarg1);
  public final static native void SimTKVisualizer_BodyFollower_generateControls(long jarg1, SimTKVisualizer.BodyFollower jarg1_, long jarg2, SimTKVisualizer jarg2_, long jarg3, State jarg3_, long jarg4, ArrayDecorativeGeometry jarg4_);
  public final static native void delete_SimTKVisualizer_BodyFollower(long jarg1);
  public final static native long SimTKVisualizer_setBackgroundTypeByInt(long jarg1, SimTKVisualizer jarg1_, int jarg2);
  public final static native int SimTKVisualizerInputListener_ShiftIsDown_get();
  public final static native int SimTKVisualizerInputListener_ControlIsDown_get();
  public final static native int SimTKVisualizerInputListener_AltIsDown_get();
  public final static native int SimTKVisualizerInputListener_IsSpecialKey_get();
  public final static native long SimTKVisualizerInputListener_SpecialKeyOffset_get();
  public final static native int SimTKVisualizerInputListener_KeyControlC_get();
  public final static native int SimTKVisualizerInputListener_KeyBeep_get();
  public final static native int SimTKVisualizerInputListener_KeyBackspace_get();
  public final static native int SimTKVisualizerInputListener_KeyTab_get();
  public final static native int SimTKVisualizerInputListener_KeyLF_get();
  public final static native int SimTKVisualizerInputListener_KeyReturn_get();
  public final static native int SimTKVisualizerInputListener_KeyEnter_get();
  public final static native int SimTKVisualizerInputListener_KeyEsc_get();
  public final static native int SimTKVisualizerInputListener_KeyDelete_get();
  public final static native int SimTKVisualizerInputListener_KeyF1_get();
  public final static native int SimTKVisualizerInputListener_KeyF2_get();
  public final static native int SimTKVisualizerInputListener_KeyF3_get();
  public final static native int SimTKVisualizerInputListener_KeyF4_get();
  public final static native int SimTKVisualizerInputListener_KeyF5_get();
  public final static native int SimTKVisualizerInputListener_KeyF6_get();
  public final static native int SimTKVisualizerInputListener_KeyF7_get();
  public final static native int SimTKVisualizerInputListener_KeyF8_get();
  public final static native int SimTKVisualizerInputListener_KeyF9_get();
  public final static native int SimTKVisualizerInputListener_KeyF10_get();
  public final static native int SimTKVisualizerInputListener_KeyF11_get();
  public final static native int SimTKVisualizerInputListener_KeyF12_get();
  public final static native int SimTKVisualizerInputListener_KeyLeftArrow_get();
  public final static native int SimTKVisualizerInputListener_KeyUpArrow_get();
  public final static native int SimTKVisualizerInputListener_KeyRightArrow_get();
  public final static native int SimTKVisualizerInputListener_KeyDownArrow_get();
  public final static native int SimTKVisualizerInputListener_KeyPageUp_get();
  public final static native int SimTKVisualizerInputListener_KeyPageDown_get();
  public final static native int SimTKVisualizerInputListener_KeyHome_get();
  public final static native int SimTKVisualizerInputListener_KeyEnd_get();
  public final static native int SimTKVisualizerInputListener_KeyInsert_get();
  public final static native void delete_SimTKVisualizerInputListener(long jarg1);
  public final static native boolean SimTKVisualizerInputListener_keyPressed(long jarg1, SimTKVisualizerInputListener jarg1_, long jarg2, long jarg3);
  public final static native boolean SimTKVisualizerInputListener_menuSelected(long jarg1, SimTKVisualizerInputListener jarg1_, int jarg2, int jarg3);
  public final static native boolean SimTKVisualizerInputListener_sliderMoved(long jarg1, SimTKVisualizerInputListener jarg1_, int jarg2, double jarg3);
  public final static native long new_SimTKVisualizerInputListener();
  public final static native long new_SimTKVisualizerInputSilo();
  public final static native void delete_SimTKVisualizerInputSilo(long jarg1);
  public final static native boolean SimTKVisualizerInputSilo_isAnyUserInput(long jarg1, SimTKVisualizerInputSilo jarg1_);
  public final static native void SimTKVisualizerInputSilo_waitForAnyUserInput(long jarg1, SimTKVisualizerInputSilo jarg1_);
  public final static native boolean SimTKVisualizerInputSilo_takeKeyHit(long jarg1, SimTKVisualizerInputSilo jarg1_, long jarg2, long jarg3);
  public final static native void SimTKVisualizerInputSilo_waitForKeyHit(long jarg1, SimTKVisualizerInputSilo jarg1_, long jarg2, long jarg3);
  public final static native boolean SimTKVisualizerInputSilo_takeMenuPick(long jarg1, SimTKVisualizerInputSilo jarg1_, long jarg2, long jarg3);
  public final static native void SimTKVisualizerInputSilo_waitForMenuPick(long jarg1, SimTKVisualizerInputSilo jarg1_, long jarg2, long jarg3);
  public final static native boolean SimTKVisualizerInputSilo_takeSliderMove(long jarg1, SimTKVisualizerInputSilo jarg1_, long jarg2, long jarg3);
  public final static native void SimTKVisualizerInputSilo_waitForSliderMove(long jarg1, SimTKVisualizerInputSilo jarg1_, long jarg2, long jarg3);
  public final static native void SimTKVisualizerInputSilo_clear(long jarg1, SimTKVisualizerInputSilo jarg1_);
  public final static native long SimTKVisualizerInputSilo_takeKeyHitKeyOnly(long jarg1, SimTKVisualizerInputSilo jarg1_);
  public final static native long UnitVec3_SWIGUpcast(long jarg1);
  public final static native long Quaternion_SWIGUpcast(long jarg1);
  public final static native long MatrixView_SWIGUpcast(long jarg1);
  public final static native long Matrix_SWIGUpcast(long jarg1);
  public final static native long VectorBaseDouble_SWIGUpcast(long jarg1);
  public final static native long VectorView_SWIGUpcast(long jarg1);
  public final static native long Vector_SWIGUpcast(long jarg1);
  public final static native long RowVectorBaseDouble_SWIGUpcast(long jarg1);
  public final static native long RowVectorView_SWIGUpcast(long jarg1);
  public final static native long RowVector_SWIGUpcast(long jarg1);
  public final static native long MatrixViewVec3_SWIGUpcast(long jarg1);
  public final static native long MatrixVec3_SWIGUpcast(long jarg1);
  public final static native long VectorBaseVec3_SWIGUpcast(long jarg1);
  public final static native long VectorViewVec3_SWIGUpcast(long jarg1);
  public final static native long VectorVec3_SWIGUpcast(long jarg1);
  public final static native long RowVectorBaseVec3_SWIGUpcast(long jarg1);
  public final static native long RowVectorViewVec3_SWIGUpcast(long jarg1);
  public final static native long RowVectorVec3_SWIGUpcast(long jarg1);
  public final static native long MatrixViewVec6_SWIGUpcast(long jarg1);
  public final static native long MatrixVec6_SWIGUpcast(long jarg1);
  public final static native long VectorBaseVec6_SWIGUpcast(long jarg1);
  public final static native long VectorViewVec6_SWIGUpcast(long jarg1);
  public final static native long VectorVec6_SWIGUpcast(long jarg1);
  public final static native long RowVectorBaseVec6_SWIGUpcast(long jarg1);
  public final static native long RowVectorViewVec6_SWIGUpcast(long jarg1);
  public final static native long RowVectorVec6_SWIGUpcast(long jarg1);
  public final static native long MatrixQuaternion_SWIGUpcast(long jarg1);
  public final static native long VectorBaseQuaternion_SWIGUpcast(long jarg1);
  public final static native long VectorQuaternion_SWIGUpcast(long jarg1);
  public final static native long RowVectorBaseQuaternion_SWIGUpcast(long jarg1);
  public final static native long RowVectorViewQuaternion_SWIGUpcast(long jarg1);
  public final static native long RowVectorQuaternion_SWIGUpcast(long jarg1);
  public final static native long Rotation_SWIGUpcast(long jarg1);
  public final static native long MatrixViewMat33_SWIGUpcast(long jarg1);
  public final static native long MatrixMat33_SWIGUpcast(long jarg1);
  public final static native long VectorBaseMat33_SWIGUpcast(long jarg1);
  public final static native long VectorViewMat33_SWIGUpcast(long jarg1);
  public final static native long VectorMat33_SWIGUpcast(long jarg1);
  public final static native long RowVectorBaseMat33_SWIGUpcast(long jarg1);
  public final static native long RowVectorViewMat33_SWIGUpcast(long jarg1);
  public final static native long RowVectorMat33_SWIGUpcast(long jarg1);
  public final static native long MatrixRotation_SWIGUpcast(long jarg1);
  public final static native long VectorBaseRotation_SWIGUpcast(long jarg1);
  public final static native long VectorRotation_SWIGUpcast(long jarg1);
  public final static native long RowVectorBaseRotation_SWIGUpcast(long jarg1);
  public final static native long RowVectorViewRotation_SWIGUpcast(long jarg1);
  public final static native long RowVectorRotation_SWIGUpcast(long jarg1);
  public final static native long DecorativePoint_SWIGUpcast(long jarg1);
  public final static native long DecorativeLine_SWIGUpcast(long jarg1);
  public final static native long DecorativeCircle_SWIGUpcast(long jarg1);
  public final static native long DecorativeSphere_SWIGUpcast(long jarg1);
  public final static native long DecorativeEllipsoid_SWIGUpcast(long jarg1);
  public final static native long DecorativeBrick_SWIGUpcast(long jarg1);
  public final static native long DecorativeCylinder_SWIGUpcast(long jarg1);
  public final static native long DecorativeFrame_SWIGUpcast(long jarg1);
  public final static native long DecorativeText_SWIGUpcast(long jarg1);
  public final static native long DecorativeMesh_SWIGUpcast(long jarg1);
  public final static native long DecorativeMeshFile_SWIGUpcast(long jarg1);
  public final static native long DecorativeTorus_SWIGUpcast(long jarg1);
  public final static native long DecorativeArrow_SWIGUpcast(long jarg1);
  public final static native long DecorativeCone_SWIGUpcast(long jarg1);
  public final static native long Decorations_SWIGUpcast(long jarg1);
  public final static native long SimTKVisualizer_BodyFollower_SWIGUpcast(long jarg1);
  public final static native long SimTKVisualizerInputSilo_SWIGUpcast(long jarg1);

  public static void SwigDirector_DecorativeGeometryImplementation_implementPointGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementPointGeometry(new DecorativePoint(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementLineGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementLineGeometry(new DecorativeLine(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementBrickGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementBrickGeometry(new DecorativeBrick(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementCylinderGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementCylinderGeometry(new DecorativeCylinder(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementCircleGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementCircleGeometry(new DecorativeCircle(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementSphereGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementSphereGeometry(new DecorativeSphere(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementEllipsoidGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementEllipsoidGeometry(new DecorativeEllipsoid(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementFrameGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementFrameGeometry(new DecorativeFrame(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementTextGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementTextGeometry(new DecorativeText(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementMeshGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementMeshGeometry(new DecorativeMesh(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementMeshFileGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementMeshFileGeometry(new DecorativeMeshFile(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementTorusGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementTorusGeometry(new DecorativeTorus(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementArrowGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementArrowGeometry(new DecorativeArrow(arg0, false));
  }
  public static void SwigDirector_DecorativeGeometryImplementation_implementConeGeometry(DecorativeGeometryImplementation jself, long arg0) {
    jself.implementConeGeometry(new DecorativeCone(arg0, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
