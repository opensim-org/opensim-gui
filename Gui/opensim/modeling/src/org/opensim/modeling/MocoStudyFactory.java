/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  This class creates MocoStudies of common interest.
 */
public class MocoStudyFactory {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public MocoStudyFactory(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(MocoStudyFactory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimMocoJNI.delete_MocoStudyFactory(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   *  In the "linear tangent steering" problem, we control the direction to<br>
   *  apply a constant thrust to a point mass to move the mass a given<br>
   *  vertical distance and maximize its final horizontal speed.<br>
   *  This function defines internal classes: a DirectionActuator, and a<br>
   *  LinearTangentFinalSpeed. This function is intended for use in testing.<br>
   *  This problem has an analytical solution, and<br>
   *  is described in Section 2.4 of Bryson and Ho [1]. Bryson, A. E., Ho,<br>
   *  Y.C., Applied Optimal Control, Optimization, Estimation, and Control.<br>
   *  New York London Sydney Toronto. John Wiley &amp; Sons. 1975.
   */
  public static MocoStudy createLinearTangentSteeringStudy(double acceleration, double finalTime, double finalHeight) {
    return new MocoStudy(opensimMocoJNI.MocoStudyFactory_createLinearTangentSteeringStudy(acceleration, finalTime, finalHeight), true);
  }

  public MocoStudyFactory() {
    this(opensimMocoJNI.new_MocoStudyFactory(), true);
  }

}
