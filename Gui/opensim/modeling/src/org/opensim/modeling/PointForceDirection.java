/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  Convenience class for a generic representation of geometry of a complex<br>
 *     Force (or any other object) with multiple points of contact through<br>
 *     which forces are applied to bodies. This represents one such point and an<br>
 *     array of these objects defines a complete Force distribution (ie. path).<br>
 * <br>
 * @author Ajay Seth<br>
 * @version 1.0
 */
public class PointForceDirection {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public PointForceDirection(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(PointForceDirection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_PointForceDirection(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   *  Default constructor takes the point, body, direction and scale<br>
   *         as arguments 
   */
  public PointForceDirection(Vec3 point, PhysicalFrame frame, Vec3 direction, double scale) {
    this(opensimSimulationJNI.new_PointForceDirection__SWIG_0(Vec3.getCPtr(point), point, PhysicalFrame.getCPtr(frame), frame, Vec3.getCPtr(direction), direction, scale), true);
  }

  /**
   *  Default constructor takes the point, body, direction and scale<br>
   *         as arguments 
   */
  public PointForceDirection(Vec3 point, PhysicalFrame frame, Vec3 direction) {
    this(opensimSimulationJNI.new_PointForceDirection__SWIG_1(Vec3.getCPtr(point), point, PhysicalFrame.getCPtr(frame), frame, Vec3.getCPtr(direction), direction), true);
  }

  /**
   *  get point of "contact" with on a body defined in the body frame 
   */
  public Vec3 point() {
    return new Vec3(opensimSimulationJNI.PointForceDirection_point(swigCPtr, this), true);
  }

  /**
   *  get the body in which the point is defined 
   */
  public PhysicalFrame frame() {
    return new PhysicalFrame(opensimSimulationJNI.PointForceDirection_frame(swigCPtr, this), false);
  }

  /**
   *  get direction of the force at the point defined in ground 
   */
  public Vec3 direction() {
    return new Vec3(opensimSimulationJNI.PointForceDirection_direction(swigCPtr, this), true);
  }

  /**
   *  get the scale factor on the force 
   */
  public double scale() {
    return opensimSimulationJNI.PointForceDirection_scale(swigCPtr, this);
  }

  /**
   *  replace the current direction with the resultant with a new direction 
   */
  public void addToDirection(Vec3 newDirection) {
    opensimSimulationJNI.PointForceDirection_addToDirection(swigCPtr, this, Vec3.getCPtr(newDirection), newDirection);
  }

}
