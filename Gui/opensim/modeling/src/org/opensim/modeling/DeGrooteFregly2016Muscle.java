/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class DeGrooteFregly2016Muscle extends Muscle {
  private transient long swigCPtr;

  public DeGrooteFregly2016Muscle(long cPtr, boolean cMemoryOwn) {
    super(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(DeGrooteFregly2016Muscle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimActuatorsAnalysesToolsJNI.delete_DeGrooteFregly2016Muscle(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static DeGrooteFregly2016Muscle safeDownCast(OpenSimObject obj) {
    long cPtr = opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new DeGrooteFregly2016Muscle(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new DeGrooteFregly2016Muscle(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_activation_time_constant(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_activation_time_constant(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_activation_time_constant(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_activation_time_constant__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_activation_time_constant(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_activation_time_constant__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_activation_time_constant(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_activation_time_constant__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_activation_time_constant(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_activation_time_constant(swigCPtr, this, value);
  }

  public void constructProperty_activation_time_constant(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_activation_time_constant(swigCPtr, this, initValue);
  }

  public double get_activation_time_constant() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_activation_time_constant__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_activation_time_constant() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_activation_time_constant__SWIG_1(swigCPtr, this), false);
  }

  public void set_activation_time_constant(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_activation_time_constant__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_deactivation_time_constant(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_deactivation_time_constant(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_deactivation_time_constant(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_deactivation_time_constant__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_deactivation_time_constant(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_deactivation_time_constant__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_deactivation_time_constant(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_deactivation_time_constant__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_deactivation_time_constant(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_deactivation_time_constant(swigCPtr, this, value);
  }

  public void constructProperty_deactivation_time_constant(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_deactivation_time_constant(swigCPtr, this, initValue);
  }

  public double get_deactivation_time_constant() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_deactivation_time_constant__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_deactivation_time_constant() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_deactivation_time_constant__SWIG_1(swigCPtr, this), false);
  }

  public void set_deactivation_time_constant(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_deactivation_time_constant__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_default_activation(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_default_activation(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_default_activation(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_default_activation__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_default_activation(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_default_activation__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_default_activation(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_default_activation__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_default_activation(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_default_activation(swigCPtr, this, value);
  }

  public void constructProperty_default_activation(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_default_activation(swigCPtr, this, initValue);
  }

  public double get_default_activation() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_default_activation__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_default_activation() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_default_activation__SWIG_1(swigCPtr, this), false);
  }

  public void set_default_activation(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_default_activation__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_default_normalized_tendon_force(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_default_normalized_tendon_force(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_default_normalized_tendon_force(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_default_normalized_tendon_force__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_default_normalized_tendon_force(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_default_normalized_tendon_force__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_default_normalized_tendon_force(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_default_normalized_tendon_force__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_default_normalized_tendon_force(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_default_normalized_tendon_force(swigCPtr, this, value);
  }

  public void constructProperty_default_normalized_tendon_force(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_default_normalized_tendon_force(swigCPtr, this, initValue);
  }

  public double get_default_normalized_tendon_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_default_normalized_tendon_force__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_default_normalized_tendon_force() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_default_normalized_tendon_force__SWIG_1(swigCPtr, this), false);
  }

  public void set_default_normalized_tendon_force(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_default_normalized_tendon_force__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_active_force_width_scale(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_active_force_width_scale(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_active_force_width_scale(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_active_force_width_scale__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_active_force_width_scale(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_active_force_width_scale__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_active_force_width_scale(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_active_force_width_scale__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_active_force_width_scale(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_active_force_width_scale(swigCPtr, this, value);
  }

  public void constructProperty_active_force_width_scale(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_active_force_width_scale(swigCPtr, this, initValue);
  }

  public double get_active_force_width_scale() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_active_force_width_scale__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_active_force_width_scale() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_active_force_width_scale__SWIG_1(swigCPtr, this), false);
  }

  public void set_active_force_width_scale(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_active_force_width_scale__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_fiber_damping(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_fiber_damping(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_fiber_damping(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_fiber_damping__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_fiber_damping(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_fiber_damping__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_fiber_damping(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_fiber_damping__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_fiber_damping(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_fiber_damping(swigCPtr, this, value);
  }

  public void constructProperty_fiber_damping(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_fiber_damping(swigCPtr, this, initValue);
  }

  public double get_fiber_damping() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_fiber_damping__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_fiber_damping() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_fiber_damping__SWIG_1(swigCPtr, this), false);
  }

  public void set_fiber_damping(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_fiber_damping__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ignore_passive_fiber_force(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_ignore_passive_fiber_force(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public boolean get_ignore_passive_fiber_force(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_ignore_passive_fiber_force__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_ignore_passive_fiber_force(int i) {
    return new SWIGTYPE_p_bool(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_ignore_passive_fiber_force__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ignore_passive_fiber_force(int i, boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_ignore_passive_fiber_force__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_ignore_passive_fiber_force(boolean value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_ignore_passive_fiber_force(swigCPtr, this, value);
  }

  public void constructProperty_ignore_passive_fiber_force(boolean initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_ignore_passive_fiber_force(swigCPtr, this, initValue);
  }

  public boolean get_ignore_passive_fiber_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_ignore_passive_fiber_force__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_ignore_passive_fiber_force() {
    return new SWIGTYPE_p_bool(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_ignore_passive_fiber_force__SWIG_1(swigCPtr, this), false);
  }

  public void set_ignore_passive_fiber_force(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_ignore_passive_fiber_force__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_passive_fiber_strain_at_one_norm_force(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_passive_fiber_strain_at_one_norm_force(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_passive_fiber_strain_at_one_norm_force(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_passive_fiber_strain_at_one_norm_force__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_passive_fiber_strain_at_one_norm_force(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_passive_fiber_strain_at_one_norm_force__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_passive_fiber_strain_at_one_norm_force(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_passive_fiber_strain_at_one_norm_force__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_passive_fiber_strain_at_one_norm_force(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_passive_fiber_strain_at_one_norm_force(swigCPtr, this, value);
  }

  public void constructProperty_passive_fiber_strain_at_one_norm_force(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_passive_fiber_strain_at_one_norm_force(swigCPtr, this, initValue);
  }

  public double get_passive_fiber_strain_at_one_norm_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_passive_fiber_strain_at_one_norm_force__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_passive_fiber_strain_at_one_norm_force() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_passive_fiber_strain_at_one_norm_force__SWIG_1(swigCPtr, this), false);
  }

  public void set_passive_fiber_strain_at_one_norm_force(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_passive_fiber_strain_at_one_norm_force__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_tendon_strain_at_one_norm_force(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_tendon_strain_at_one_norm_force(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public double get_tendon_strain_at_one_norm_force(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_tendon_strain_at_one_norm_force__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_tendon_strain_at_one_norm_force(int i) {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_tendon_strain_at_one_norm_force__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_tendon_strain_at_one_norm_force(int i, double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_tendon_strain_at_one_norm_force__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_tendon_strain_at_one_norm_force(double value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_tendon_strain_at_one_norm_force(swigCPtr, this, value);
  }

  public void constructProperty_tendon_strain_at_one_norm_force(double initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_tendon_strain_at_one_norm_force(swigCPtr, this, initValue);
  }

  public double get_tendon_strain_at_one_norm_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_tendon_strain_at_one_norm_force__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_tendon_strain_at_one_norm_force() {
    return new SWIGTYPE_p_double(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_tendon_strain_at_one_norm_force__SWIG_1(swigCPtr, this), false);
  }

  public void set_tendon_strain_at_one_norm_force(double value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_tendon_strain_at_one_norm_force__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_tendon_compliance_dynamics_mode(DeGrooteFregly2016Muscle source) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_copyProperty_tendon_compliance_dynamics_mode(swigCPtr, this, DeGrooteFregly2016Muscle.getCPtr(source), source);
  }

  public String get_tendon_compliance_dynamics_mode(int i) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_tendon_compliance_dynamics_mode__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_tendon_compliance_dynamics_mode(int i) {
    return new SWIGTYPE_p_std__string(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_tendon_compliance_dynamics_mode__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_tendon_compliance_dynamics_mode(int i, String value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_tendon_compliance_dynamics_mode__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_tendon_compliance_dynamics_mode(String value) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_append_tendon_compliance_dynamics_mode(swigCPtr, this, value);
  }

  public void constructProperty_tendon_compliance_dynamics_mode(String initValue) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_constructProperty_tendon_compliance_dynamics_mode(swigCPtr, this, initValue);
  }

  public String get_tendon_compliance_dynamics_mode() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_get_tendon_compliance_dynamics_mode__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_tendon_compliance_dynamics_mode() {
    return new SWIGTYPE_p_std__string(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_upd_tendon_compliance_dynamics_mode__SWIG_1(swigCPtr, this), false);
  }

  public void set_tendon_compliance_dynamics_mode(String value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_set_tendon_compliance_dynamics_mode__SWIG_1(swigCPtr, this, value);
  }

  public void set_has_output_passive_fiber_elastic_force(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_elastic_force_set(swigCPtr, this, value);
  }

  public boolean get_has_output_passive_fiber_elastic_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_elastic_force_get(swigCPtr, this);
  }

  public void set_has_output_passive_fiber_elastic_force_along_tendon(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_elastic_force_along_tendon_set(swigCPtr, this, value);
  }

  public boolean get_has_output_passive_fiber_elastic_force_along_tendon() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_elastic_force_along_tendon_get(swigCPtr, this);
  }

  public void set_has_output_passive_fiber_damping_force(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_damping_force_set(swigCPtr, this, value);
  }

  public boolean get_has_output_passive_fiber_damping_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_damping_force_get(swigCPtr, this);
  }

  public void set_has_output_passive_fiber_damping_force_along_tendon(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_damping_force_along_tendon_set(swigCPtr, this, value);
  }

  public boolean get_has_output_passive_fiber_damping_force_along_tendon() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_passive_fiber_damping_force_along_tendon_get(swigCPtr, this);
  }

  public void set_has_output_implicitresidual_normalized_tendon_force(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_implicitresidual_normalized_tendon_force_set(swigCPtr, this, value);
  }

  public boolean get_has_output_implicitresidual_normalized_tendon_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_implicitresidual_normalized_tendon_force_get(swigCPtr, this);
  }

  public void set_has_output_implicitenabled_normalized_tendon_force(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_implicitenabled_normalized_tendon_force_set(swigCPtr, this, value);
  }

  public boolean get_has_output_implicitenabled_normalized_tendon_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_implicitenabled_normalized_tendon_force_get(swigCPtr, this);
  }

  public void set_has_output_statebounds_normalized_tendon_force(boolean value) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_statebounds_normalized_tendon_force_set(swigCPtr, this, value);
  }

  public boolean get_has_output_statebounds_normalized_tendon_force() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle__has_output_statebounds_normalized_tendon_force_get(swigCPtr, this);
  }

  public DeGrooteFregly2016Muscle() {
    this(opensimActuatorsAnalysesToolsJNI.new_DeGrooteFregly2016Muscle(), true);
  }

  public double getActivation(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getActivation(swigCPtr, this, State.getCPtr(s), s);
  }

  public void setActivation(State s, double activation) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_setActivation(swigCPtr, this, State.getCPtr(s), s, activation);
  }

  public void computeInitialFiberEquilibrium(State s) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_computeInitialFiberEquilibrium(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getPassiveFiberElasticForce(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getPassiveFiberElasticForce(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getPassiveFiberElasticForceAlongTendon(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getPassiveFiberElasticForceAlongTendon(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getPassiveFiberDampingForce(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getPassiveFiberDampingForce(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getPassiveFiberDampingForceAlongTendon(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getPassiveFiberDampingForceAlongTendon(swigCPtr, this, State.getCPtr(s), s);
  }

  public boolean getImplicitEnabledNormalizedTendonForce(State arg0) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getImplicitEnabledNormalizedTendonForce(swigCPtr, this, State.getCPtr(arg0), arg0);
  }

  public double getImplicitResidualNormalizedTendonForce(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getImplicitResidualNormalizedTendonForce(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getNormalizedTendonForce(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getNormalizedTendonForce(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getNormalizedTendonForceDerivative(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getNormalizedTendonForceDerivative(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getEquilibriumResidual(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getEquilibriumResidual(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getLinearizedEquilibriumResidualDerivative(State s) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getLinearizedEquilibriumResidualDerivative(swigCPtr, this, State.getCPtr(s), s);
  }

  public static String getActivationStateName() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getActivationStateName();
  }

  public static String getNormalizedTendonForceStateName() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getNormalizedTendonForceStateName();
  }

  public static String getImplicitDynamicsDerivativeName() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getImplicitDynamicsDerivativeName();
  }

  public static String getImplicitDynamicsResidualName() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getImplicitDynamicsResidualName();
  }

  public static double getMinNormalizedTendonForce() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getMinNormalizedTendonForce();
  }

  public static double getMaxNormalizedTendonForce() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getMaxNormalizedTendonForce();
  }

  public Vec2 getBoundsNormalizedTendonForce(State arg0) {
    return new Vec2(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getBoundsNormalizedTendonForce(swigCPtr, this, State.getCPtr(arg0), arg0), true);
  }

  public static double getMinNormalizedFiberLength() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getMinNormalizedFiberLength();
  }

  public static double getMaxNormalizedFiberLength() {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getMaxNormalizedFiberLength();
  }

  public Vec2 getBoundsNormalizedFiberLength() {
    return new Vec2(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_getBoundsNormalizedFiberLength(swigCPtr, this), true);
  }

  public void setNormalizedTendonForce(State s, double normTendonForce) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_setNormalizedTendonForce(swigCPtr, this, State.getCPtr(s), s, normTendonForce);
  }

  public double calcActiveForceLengthMultiplier(double normFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcActiveForceLengthMultiplier(swigCPtr, this, normFiberLength);
  }

  public double calcActiveForceLengthMultiplierDerivative(double normFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcActiveForceLengthMultiplierDerivative(swigCPtr, this, normFiberLength);
  }

  public static double calcForceVelocityMultiplier(double normFiberVelocity) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcForceVelocityMultiplier(normFiberVelocity);
  }

  public static double calcForceVelocityInverseCurve(double forceVelocityMult) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcForceVelocityInverseCurve(forceVelocityMult);
  }

  public double calcPassiveForceMultiplier(double normFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcPassiveForceMultiplier(swigCPtr, this, normFiberLength);
  }

  public double calcPassiveForceMultiplierDerivative(double normFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcPassiveForceMultiplierDerivative(swigCPtr, this, normFiberLength);
  }

  public double calcPassiveForceMultiplierIntegral(double normFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcPassiveForceMultiplierIntegral(swigCPtr, this, normFiberLength);
  }

  public double calcTendonForceMultiplier(double normTendonLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcTendonForceMultiplier(swigCPtr, this, normTendonLength);
  }

  public double calcTendonForceMultiplierDerivative(double normTendonLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcTendonForceMultiplierDerivative(swigCPtr, this, normTendonLength);
  }

  public double calcTendonForceMultiplierIntegral(double normTendonLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcTendonForceMultiplierIntegral(swigCPtr, this, normTendonLength);
  }

  public double calcTendonForceLengthInverseCurve(double normTendonForce) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcTendonForceLengthInverseCurve(swigCPtr, this, normTendonForce);
  }

  public double calcTendonForceLengthInverseCurveDerivative(double derivNormTendonForce, double normTendonLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcTendonForceLengthInverseCurveDerivative(swigCPtr, this, derivNormTendonForce, normTendonLength);
  }

  public void calcFiberForce(double activation, double activeForceLengthMultiplier, double forceVelocityMultiplier, double normPassiveFiberForce, double normFiberVelocity, SWIGTYPE_p_double activeFiberForce, SWIGTYPE_p_double conPassiveFiberForce, SWIGTYPE_p_double nonConPassiveFiberForce, SWIGTYPE_p_double totalFiberForce) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcFiberForce(swigCPtr, this, activation, activeForceLengthMultiplier, forceVelocityMultiplier, normPassiveFiberForce, normFiberVelocity, SWIGTYPE_p_double.getCPtr(activeFiberForce), SWIGTYPE_p_double.getCPtr(conPassiveFiberForce), SWIGTYPE_p_double.getCPtr(nonConPassiveFiberForce), SWIGTYPE_p_double.getCPtr(totalFiberForce));
  }

  public double calcFiberStiffness(double activation, double normFiberLength, double fiberVelocityMultiplier) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcFiberStiffness(swigCPtr, this, activation, normFiberLength, fiberVelocityMultiplier);
  }

  public double calcTendonStiffness(double normTendonLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcTendonStiffness(swigCPtr, this, normTendonLength);
  }

  public double calcMuscleStiffness(double tendonStiffness, double fiberStiffnessAlongTendon) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcMuscleStiffness(swigCPtr, this, tendonStiffness, fiberStiffnessAlongTendon);
  }

  public double calcPartialPennationAnglePartialFiberLength(double fiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcPartialPennationAnglePartialFiberLength(swigCPtr, this, fiberLength);
  }

  public double calcPartialFiberForceAlongTendonPartialFiberLength(double fiberForce, double fiberStiffness, double sinPennationAngle, double cosPennationAngle, double partialPennationAnglePartialFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcPartialFiberForceAlongTendonPartialFiberLength(swigCPtr, this, fiberForce, fiberStiffness, sinPennationAngle, cosPennationAngle, partialPennationAnglePartialFiberLength);
  }

  public double calcFiberStiffnessAlongTendon(double fiberLength, double partialFiberForceAlongTendonPartialFiberLength, double sinPennationAngle, double cosPennationAngle, double partialPennationAnglePartialFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcFiberStiffnessAlongTendon(swigCPtr, this, fiberLength, partialFiberForceAlongTendonPartialFiberLength, sinPennationAngle, cosPennationAngle, partialPennationAnglePartialFiberLength);
  }

  public double calcPartialTendonLengthPartialFiberLength(double fiberLength, double sinPennationAngle, double cosPennationAngle, double partialPennationAnglePartialFiberLength) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcPartialTendonLengthPartialFiberLength(swigCPtr, this, fiberLength, sinPennationAngle, cosPennationAngle, partialPennationAnglePartialFiberLength);
  }

  public double calcPartialTendonForcePartialFiberLength(double tendonStiffness, double fiberLength, double sinPennationAngle, double cosPennationAngle) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcPartialTendonForcePartialFiberLength(swigCPtr, this, tendonStiffness, fiberLength, sinPennationAngle, cosPennationAngle);
  }

  public double calcEquilibriumResidual(double muscleTendonLength, double muscleTendonVelocity, double activation, double normTendonForce, double normTendonForceDerivative) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcEquilibriumResidual(swigCPtr, this, muscleTendonLength, muscleTendonVelocity, activation, normTendonForce, normTendonForceDerivative);
  }

  public double calcLinearizedEquilibriumResidualDerivative(double muscleTendonLength, double muscleTendonVelocity, double activation, double normTendonForce, double normTendonForceDerivative) {
    return opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_calcLinearizedEquilibriumResidualDerivative(swigCPtr, this, muscleTendonLength, muscleTendonVelocity, activation, normTendonForce, normTendonForceDerivative);
  }

  public DataTable exportFiberLengthCurvesToTable(Vector normFiberLengths) {
    return new DataTable(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_exportFiberLengthCurvesToTable__SWIG_0(swigCPtr, this, Vector.getCPtr(normFiberLengths), normFiberLengths), true);
  }

  public DataTable exportFiberLengthCurvesToTable() {
    return new DataTable(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_exportFiberLengthCurvesToTable__SWIG_1(swigCPtr, this), true);
  }

  public DataTable exportFiberVelocityMultiplierToTable(Vector normFiberVelocities) {
    return new DataTable(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_exportFiberVelocityMultiplierToTable__SWIG_0(swigCPtr, this, Vector.getCPtr(normFiberVelocities), normFiberVelocities), true);
  }

  public DataTable exportFiberVelocityMultiplierToTable() {
    return new DataTable(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_exportFiberVelocityMultiplierToTable__SWIG_1(swigCPtr, this), true);
  }

  public DataTable exportTendonForceMultiplierToTable(Vector normTendonLengths) {
    return new DataTable(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_exportTendonForceMultiplierToTable__SWIG_0(swigCPtr, this, Vector.getCPtr(normTendonLengths), normTendonLengths), true);
  }

  public DataTable exportTendonForceMultiplierToTable() {
    return new DataTable(opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_exportTendonForceMultiplierToTable__SWIG_1(swigCPtr, this), true);
  }

  public void printCurvesToSTOFiles(String directory) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_printCurvesToSTOFiles__SWIG_0(swigCPtr, this, directory);
  }

  public void printCurvesToSTOFiles() {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_printCurvesToSTOFiles__SWIG_1(swigCPtr, this);
  }

  public static void replaceMuscles(Model model, boolean allowUnsupportedMuscles) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_replaceMuscles__SWIG_0(Model.getCPtr(model), model, allowUnsupportedMuscles);
  }

  public static void replaceMuscles(Model model) {
    opensimActuatorsAnalysesToolsJNI.DeGrooteFregly2016Muscle_replaceMuscles__SWIG_1(Model.getCPtr(model), model);
  }

}
