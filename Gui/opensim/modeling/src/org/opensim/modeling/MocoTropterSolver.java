/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class MocoTropterSolver extends MocoDirectCollocationSolver {
  private transient long swigCPtr;

  public MocoTropterSolver(long cPtr, boolean cMemoryOwn) {
    super(opensimMocoJNI.MocoTropterSolver_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(MocoTropterSolver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimMocoJNI.delete_MocoTropterSolver(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static MocoTropterSolver safeDownCast(OpenSimObject obj) {
    long cPtr = opensimMocoJNI.MocoTropterSolver_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new MocoTropterSolver(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimMocoJNI.MocoTropterSolver_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimMocoJNI.MocoTropterSolver_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimMocoJNI.MocoTropterSolver_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new MocoTropterSolver(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimMocoJNI.MocoTropterSolver_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_optim_jacobian_approximation(MocoTropterSolver source) {
    opensimMocoJNI.MocoTropterSolver_copyProperty_optim_jacobian_approximation(swigCPtr, this, MocoTropterSolver.getCPtr(source), source);
  }

  public String get_optim_jacobian_approximation(int i) {
    return opensimMocoJNI.MocoTropterSolver_get_optim_jacobian_approximation__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_optim_jacobian_approximation(int i) {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoTropterSolver_upd_optim_jacobian_approximation__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_optim_jacobian_approximation(int i, String value) {
    opensimMocoJNI.MocoTropterSolver_set_optim_jacobian_approximation__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_optim_jacobian_approximation(String value) {
    return opensimMocoJNI.MocoTropterSolver_append_optim_jacobian_approximation(swigCPtr, this, value);
  }

  public void constructProperty_optim_jacobian_approximation(String initValue) {
    opensimMocoJNI.MocoTropterSolver_constructProperty_optim_jacobian_approximation(swigCPtr, this, initValue);
  }

  public String get_optim_jacobian_approximation() {
    return opensimMocoJNI.MocoTropterSolver_get_optim_jacobian_approximation__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_optim_jacobian_approximation() {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoTropterSolver_upd_optim_jacobian_approximation__SWIG_1(swigCPtr, this), false);
  }

  public void set_optim_jacobian_approximation(String value) {
    opensimMocoJNI.MocoTropterSolver_set_optim_jacobian_approximation__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_optim_sparsity_detection(MocoTropterSolver source) {
    opensimMocoJNI.MocoTropterSolver_copyProperty_optim_sparsity_detection(swigCPtr, this, MocoTropterSolver.getCPtr(source), source);
  }

  public String get_optim_sparsity_detection(int i) {
    return opensimMocoJNI.MocoTropterSolver_get_optim_sparsity_detection__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_optim_sparsity_detection(int i) {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoTropterSolver_upd_optim_sparsity_detection__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_optim_sparsity_detection(int i, String value) {
    opensimMocoJNI.MocoTropterSolver_set_optim_sparsity_detection__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_optim_sparsity_detection(String value) {
    return opensimMocoJNI.MocoTropterSolver_append_optim_sparsity_detection(swigCPtr, this, value);
  }

  public void constructProperty_optim_sparsity_detection(String initValue) {
    opensimMocoJNI.MocoTropterSolver_constructProperty_optim_sparsity_detection(swigCPtr, this, initValue);
  }

  public String get_optim_sparsity_detection() {
    return opensimMocoJNI.MocoTropterSolver_get_optim_sparsity_detection__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_optim_sparsity_detection() {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoTropterSolver_upd_optim_sparsity_detection__SWIG_1(swigCPtr, this), false);
  }

  public void set_optim_sparsity_detection(String value) {
    opensimMocoJNI.MocoTropterSolver_set_optim_sparsity_detection__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_exact_hessian_block_sparsity_mode(MocoTropterSolver source) {
    opensimMocoJNI.MocoTropterSolver_copyProperty_exact_hessian_block_sparsity_mode(swigCPtr, this, MocoTropterSolver.getCPtr(source), source);
  }

  public String get_exact_hessian_block_sparsity_mode(int i) {
    return opensimMocoJNI.MocoTropterSolver_get_exact_hessian_block_sparsity_mode__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_exact_hessian_block_sparsity_mode(int i) {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoTropterSolver_upd_exact_hessian_block_sparsity_mode__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_exact_hessian_block_sparsity_mode(int i, String value) {
    opensimMocoJNI.MocoTropterSolver_set_exact_hessian_block_sparsity_mode__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_exact_hessian_block_sparsity_mode(String value) {
    return opensimMocoJNI.MocoTropterSolver_append_exact_hessian_block_sparsity_mode(swigCPtr, this, value);
  }

  public void constructProperty_exact_hessian_block_sparsity_mode() {
    opensimMocoJNI.MocoTropterSolver_constructProperty_exact_hessian_block_sparsity_mode__SWIG_0(swigCPtr, this);
  }

  public void constructProperty_exact_hessian_block_sparsity_mode(String initValue) {
    opensimMocoJNI.MocoTropterSolver_constructProperty_exact_hessian_block_sparsity_mode__SWIG_1(swigCPtr, this, initValue);
  }

  public String get_exact_hessian_block_sparsity_mode() {
    return opensimMocoJNI.MocoTropterSolver_get_exact_hessian_block_sparsity_mode__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_exact_hessian_block_sparsity_mode() {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoTropterSolver_upd_exact_hessian_block_sparsity_mode__SWIG_1(swigCPtr, this), false);
  }

  public void set_exact_hessian_block_sparsity_mode(String value) {
    opensimMocoJNI.MocoTropterSolver_set_exact_hessian_block_sparsity_mode__SWIG_1(swigCPtr, this, value);
  }

  public MocoTropterSolver() {
    this(opensimMocoJNI.new_MocoTropterSolver(), true);
  }

  public static boolean isAvailable() {
    return opensimMocoJNI.MocoTropterSolver_isAvailable();
  }

  public MocoTrajectory createGuess(String type) {
    return new MocoTrajectory(opensimMocoJNI.MocoTropterSolver_createGuess__SWIG_0(swigCPtr, this, type), true);
  }

  public MocoTrajectory createGuess() {
    return new MocoTrajectory(opensimMocoJNI.MocoTropterSolver_createGuess__SWIG_1(swigCPtr, this), true);
  }

  public void setGuess(MocoTrajectory guess) {
    opensimMocoJNI.MocoTropterSolver_setGuess__SWIG_0(swigCPtr, this, MocoTrajectory.getCPtr(guess), guess);
  }

  public void setGuess(String type) {
    opensimMocoJNI.MocoTropterSolver_setGuess__SWIG_1(swigCPtr, this, type);
  }

  public void setGuessFile(String file) {
    opensimMocoJNI.MocoTropterSolver_setGuessFile(swigCPtr, this, file);
  }

  public void clearGuess() {
    opensimMocoJNI.MocoTropterSolver_clearGuess(swigCPtr, this);
  }

  public MocoTrajectory getGuess() {
    return new MocoTrajectory(opensimMocoJNI.MocoTropterSolver_getGuess(swigCPtr, this), false);
  }

  public static void printOptimizationSolverOptions(String solver) {
    opensimMocoJNI.MocoTropterSolver_printOptimizationSolverOptions__SWIG_0(solver);
  }

  public static void printOptimizationSolverOptions() {
    opensimMocoJNI.MocoTropterSolver_printOptimizationSolverOptions__SWIG_1();
  }

}
