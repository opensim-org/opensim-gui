/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  This defines a sphere centered at the origin. The default constructor <br>
 * creates a sphere of diameter 1. *
 */
public class DecorativeSphere extends DecorativeGeometry {
  private transient long swigCPtr;

  public DecorativeSphere(long cPtr, boolean cMemoryOwn) {
    super(opensimSimbodyJNI.DecorativeSphere_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(DecorativeSphere obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimbodyJNI.delete_DecorativeSphere(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DecorativeSphere(double radius) {
    this(opensimSimbodyJNI.new_DecorativeSphere__SWIG_0(radius), true);
  }

  public DecorativeSphere() {
    this(opensimSimbodyJNI.new_DecorativeSphere__SWIG_1(), true);
  }

  public DecorativeSphere setRadius(double arg0) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setRadius(swigCPtr, this, arg0), false);
  }

  public double getRadius() {
    return opensimSimbodyJNI.DecorativeSphere_getRadius(swigCPtr, this);
  }

  public DecorativeSphere setBodyId(int b) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setBodyId(swigCPtr, this, b), false);
  }

  public DecorativeSphere setIndexOnBody(int x) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setIndexOnBody(swigCPtr, this, x), false);
  }

  public DecorativeSphere setUserRef(SWIGTYPE_p_void p) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setUserRef(swigCPtr, this, SWIGTYPE_p_void.getCPtr(p)), false);
  }

  public DecorativeSphere setTransform(Transform X_BD) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setTransform(swigCPtr, this, Transform.getCPtr(X_BD), X_BD), false);
  }

  public DecorativeSphere setResolution(double r) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setResolution(swigCPtr, this, r), false);
  }

  public DecorativeSphere setScaleFactors(Vec3 s) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setScaleFactors(swigCPtr, this, Vec3.getCPtr(s), s), false);
  }

  public DecorativeSphere setColor(Vec3 rgb) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setColor(swigCPtr, this, Vec3.getCPtr(rgb), rgb), false);
  }

  public DecorativeSphere setOpacity(double o) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setOpacity(swigCPtr, this, o), false);
  }

  public DecorativeSphere setLineThickness(double t) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setLineThickness(swigCPtr, this, t), false);
  }

  public DecorativeSphere setRepresentation(DecorativeGeometry.Representation r) {
    return new DecorativeSphere(opensimSimbodyJNI.DecorativeSphere_setRepresentation(swigCPtr, this, r.swigValue()), false);
  }

  public DecorativeSphere clone() {
    long cPtr = opensimSimbodyJNI.DecorativeSphere_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new DecorativeSphere(cPtr, false);
  }

}
