/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  This defines a rectangular solid centered at the origin and aligned with <br>
 * the local frame axes. The default constructor creates a cube of length 1 on <br>
 * each side. *
 */
public class DecorativeBrick extends DecorativeGeometry {
  private transient long swigCPtr;

  public DecorativeBrick(long cPtr, boolean cMemoryOwn) {
    super(opensimSimbodyJNI.DecorativeBrick_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(DecorativeBrick obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimbodyJNI.delete_DecorativeBrick(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DecorativeBrick(Vec3 halfLengths) {
    this(opensimSimbodyJNI.new_DecorativeBrick__SWIG_0(Vec3.getCPtr(halfLengths), halfLengths), true);
  }

  public DecorativeBrick() {
    this(opensimSimbodyJNI.new_DecorativeBrick__SWIG_1(), true);
  }

  public DecorativeBrick setHalfLengths(Vec3 arg0) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setHalfLengths(swigCPtr, this, Vec3.getCPtr(arg0), arg0), false);
  }

  public Vec3 getHalfLengths() {
    return new Vec3(opensimSimbodyJNI.DecorativeBrick_getHalfLengths(swigCPtr, this), false);
  }

  public DecorativeBrick setBodyId(int b) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setBodyId(swigCPtr, this, b), false);
  }

  public DecorativeBrick setIndexOnBody(int x) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setIndexOnBody(swigCPtr, this, x), false);
  }

  public DecorativeBrick setUserRef(SWIGTYPE_p_void p) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setUserRef(swigCPtr, this, SWIGTYPE_p_void.getCPtr(p)), false);
  }

  public DecorativeBrick setTransform(Transform X_BD) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setTransform(swigCPtr, this, Transform.getCPtr(X_BD), X_BD), false);
  }

  public DecorativeBrick setResolution(double r) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setResolution(swigCPtr, this, r), false);
  }

  public DecorativeBrick setScaleFactors(Vec3 s) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setScaleFactors(swigCPtr, this, Vec3.getCPtr(s), s), false);
  }

  public DecorativeBrick setColor(Vec3 rgb) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setColor(swigCPtr, this, Vec3.getCPtr(rgb), rgb), false);
  }

  public DecorativeBrick setOpacity(double o) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setOpacity(swigCPtr, this, o), false);
  }

  public DecorativeBrick setLineThickness(double t) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setLineThickness(swigCPtr, this, t), false);
  }

  public DecorativeBrick setRepresentation(DecorativeGeometry.Representation r) {
    return new DecorativeBrick(opensimSimbodyJNI.DecorativeBrick_setRepresentation(swigCPtr, this, r.swigValue()), false);
  }

  public DecorativeBrick clone() {
    long cPtr = opensimSimbodyJNI.DecorativeBrick_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new DecorativeBrick(cPtr, false);
  }

}
