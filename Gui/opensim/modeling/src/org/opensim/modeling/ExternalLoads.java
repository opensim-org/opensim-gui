/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ExternalLoads extends ModelComponentSetExternalForces {
  private transient long swigCPtr;

  public ExternalLoads(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.ExternalLoads_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ExternalLoads obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_ExternalLoads(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ExternalLoads safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.ExternalLoads_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new ExternalLoads(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.ExternalLoads_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.ExternalLoads_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.ExternalLoads_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ExternalLoads(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.ExternalLoads_getConcreteClassName(swigCPtr, this);
  }

  public ExternalLoads() {
    this(opensimSimulationJNI.new_ExternalLoads__SWIG_0(), true);
  }

  public ExternalLoads(String fileName, boolean aUpdateFromXMLNode) {
    this(opensimSimulationJNI.new_ExternalLoads__SWIG_1(fileName, aUpdateFromXMLNode), true);
  }

  public ExternalLoads(ExternalLoads aExternalLoads) {
    this(opensimSimulationJNI.new_ExternalLoads__SWIG_2(ExternalLoads.getCPtr(aExternalLoads), aExternalLoads), true);
  }

  public void copyData(ExternalLoads otherExternalLoads) {
    opensimSimulationJNI.ExternalLoads_copyData(swigCPtr, this, ExternalLoads.getCPtr(otherExternalLoads), otherExternalLoads);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode, int versionNumber) {
    opensimSimulationJNI.ExternalLoads_updateFromXMLNode__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode), versionNumber);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    opensimSimulationJNI.ExternalLoads_updateFromXMLNode__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode));
  }

  public void extendConnectToModel(Model aModel) {
    opensimSimulationJNI.ExternalLoads_extendConnectToModel(swigCPtr, this, Model.getCPtr(aModel), aModel);
  }

  public String getDataFileName() {
    return opensimSimulationJNI.ExternalLoads_getDataFileName(swigCPtr, this);
  }

  public void setDataFileName(String aNewFile) {
    opensimSimulationJNI.ExternalLoads_setDataFileName(swigCPtr, this, aNewFile);
  }

  public void transformPointsExpressedInGroundToAppliedBodies(Storage kinematics, double startTime, double endTime) {
    opensimSimulationJNI.ExternalLoads_transformPointsExpressedInGroundToAppliedBodies__SWIG_0(swigCPtr, this, Storage.getCPtr(kinematics), kinematics, startTime, endTime);
  }

  public void transformPointsExpressedInGroundToAppliedBodies(Storage kinematics, double startTime) {
    opensimSimulationJNI.ExternalLoads_transformPointsExpressedInGroundToAppliedBodies__SWIG_1(swigCPtr, this, Storage.getCPtr(kinematics), kinematics, startTime);
  }

  public void transformPointsExpressedInGroundToAppliedBodies(Storage kinematics) {
    opensimSimulationJNI.ExternalLoads_transformPointsExpressedInGroundToAppliedBodies__SWIG_2(swigCPtr, this, Storage.getCPtr(kinematics), kinematics);
  }

  public ExternalForce transformPointExpressedInGroundToAppliedBody(ExternalForce exForce, Storage kinematics, double startTime, double endTime) {
    long cPtr = opensimSimulationJNI.ExternalLoads_transformPointExpressedInGroundToAppliedBody(swigCPtr, this, ExternalForce.getCPtr(exForce), exForce, Storage.getCPtr(kinematics), kinematics, startTime, endTime);
    return (cPtr == 0) ? null : new ExternalForce(cPtr, false);
  }

  public void clearLoadedFromFile() {
    opensimSimulationJNI.ExternalLoads_clearLoadedFromFile(swigCPtr, this);
  }

}
