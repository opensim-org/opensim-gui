/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class VisualizerUtilities {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public VisualizerUtilities(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(VisualizerUtilities obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_VisualizerUtilities(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   *  <br>
   *  Play back an existing motion (from the table) in the<br>
   *  simbody-visualizer. The Storage should contain all generalized<br>
   *  coordinates. The visualizer window allows the user to control playback<br>
   *  speed. This function blocks until the user exits the simbody-visualizer<br>
   *  window.
   */
  public static void showMotion(Model arg0, TimeSeriesTable arg1) {
    opensimSimulationJNI.VisualizerUtilities_showMotion(Model.getCPtr(arg0), arg0, TimeSeriesTable.getCPtr(arg1), arg1);
  }

  /**
   *  <br>
   *   Visualize the passed in model in a simbody-visualizer window.<br>
   *   This function blocks until the user exits the simbody-visualizer<br>
   *   window. 
   */
  public static void showModel(Model arg0) {
    opensimSimulationJNI.VisualizerUtilities_showModel(Model.getCPtr(arg0), arg0);
  }

  /**
   *  Show markers with time histories specified by the passed in <br>
   *         TimeSeriesTableVec3. Visualization is shown in the simbody visualizer.<br>
   *         Function blocks waiting for user to hit a key to start. 
   */
  public static void showMarkerData(TimeSeriesTableVec3 arg0) {
    opensimSimulationJNI.VisualizerUtilities_showMarkerData(TimeSeriesTableVec3.getCPtr(arg0), arg0);
  }

  /**
   *  Show frames with time histories specified by the passed in<br>
   *         TimeSeriesTableQuaternion. Visualization is shown in the simbody<br>
   *        visualizer. <br>
   *        - layout options: <br>
   *             -'line' default layout frames in a row along Z axis<br>
   *             -'circle' frames laid out around a half-circle in the Y-Z plane<br>
   *             -'model' Load passed in model and overlay frames at origins of <br>
   *                 corresponding bodies at default pose. Must have invoked<br>
   *                 initSystem() on the model.<br>
   * <br>
   *        Function blocks waiting for user to hit a key to start. 
   */
  public static void showOrientationData(TimeSeriesTableQuaternion arg0, String layout, Model modelForPose) {
    opensimSimulationJNI.VisualizerUtilities_showOrientationData__SWIG_0(TimeSeriesTableQuaternion.getCPtr(arg0), arg0, layout, Model.getCPtr(modelForPose), modelForPose);
  }

  /**
   *  Show frames with time histories specified by the passed in<br>
   *         TimeSeriesTableQuaternion. Visualization is shown in the simbody<br>
   *        visualizer. <br>
   *        - layout options: <br>
   *             -'line' default layout frames in a row along Z axis<br>
   *             -'circle' frames laid out around a half-circle in the Y-Z plane<br>
   *             -'model' Load passed in model and overlay frames at origins of <br>
   *                 corresponding bodies at default pose. Must have invoked<br>
   *                 initSystem() on the model.<br>
   * <br>
   *        Function blocks waiting for user to hit a key to start. 
   */
  public static void showOrientationData(TimeSeriesTableQuaternion arg0, String layout) {
    opensimSimulationJNI.VisualizerUtilities_showOrientationData__SWIG_1(TimeSeriesTableQuaternion.getCPtr(arg0), arg0, layout);
  }

  /**
   *  Show frames with time histories specified by the passed in<br>
   *         TimeSeriesTableQuaternion. Visualization is shown in the simbody<br>
   *        visualizer. <br>
   *        - layout options: <br>
   *             -'line' default layout frames in a row along Z axis<br>
   *             -'circle' frames laid out around a half-circle in the Y-Z plane<br>
   *             -'model' Load passed in model and overlay frames at origins of <br>
   *                 corresponding bodies at default pose. Must have invoked<br>
   *                 initSystem() on the model.<br>
   * <br>
   *        Function blocks waiting for user to hit a key to start. 
   */
  public static void showOrientationData(TimeSeriesTableQuaternion arg0) {
    opensimSimulationJNI.VisualizerUtilities_showOrientationData__SWIG_2(TimeSeriesTableQuaternion.getCPtr(arg0), arg0);
  }

  public VisualizerUtilities() {
    this(opensimSimulationJNI.new_VisualizerUtilities(), true);
  }

}
