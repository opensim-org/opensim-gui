/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ToyReflexController extends Controller {
  private transient long swigCPtr;

  protected ToyReflexController(long cPtr, boolean cMemoryOwn) {
    super(opensimExampleComponentsJNI.ToyReflexController_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ToyReflexController obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimExampleComponentsJNI.delete_ToyReflexController(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ToyReflexController safeDownCast(OpenSimObject obj) {
    long cPtr = opensimExampleComponentsJNI.ToyReflexController_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new ToyReflexController(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimExampleComponentsJNI.ToyReflexController_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimExampleComponentsJNI.ToyReflexController_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimExampleComponentsJNI.ToyReflexController_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ToyReflexController(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimExampleComponentsJNI.ToyReflexController_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_gain(ToyReflexController source) {
    opensimExampleComponentsJNI.ToyReflexController_copyProperty_gain(swigCPtr, this, ToyReflexController.getCPtr(source), source);
  }

  public double get_gain(int i) {
    return opensimExampleComponentsJNI.ToyReflexController_get_gain__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_gain(int i) {
    return new SWIGTYPE_p_double(opensimExampleComponentsJNI.ToyReflexController_upd_gain__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_gain(int i, double value) {
    opensimExampleComponentsJNI.ToyReflexController_set_gain__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_gain(double value) {
    return opensimExampleComponentsJNI.ToyReflexController_append_gain(swigCPtr, this, value);
  }

  public void constructProperty_gain(double initValue) {
    opensimExampleComponentsJNI.ToyReflexController_constructProperty_gain(swigCPtr, this, initValue);
  }

  public double get_gain() {
    return opensimExampleComponentsJNI.ToyReflexController_get_gain__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_gain() {
    return new SWIGTYPE_p_double(opensimExampleComponentsJNI.ToyReflexController_upd_gain__SWIG_1(swigCPtr, this), false);
  }

  public void set_gain(double value) {
    opensimExampleComponentsJNI.ToyReflexController_set_gain__SWIG_1(swigCPtr, this, value);
  }

  public ToyReflexController() {
    this(opensimExampleComponentsJNI.new_ToyReflexController__SWIG_0(), true);
  }

  public ToyReflexController(double gain) {
    this(opensimExampleComponentsJNI.new_ToyReflexController__SWIG_1(gain), true);
  }

  public void computeControls(State s, Vector controls) {
    opensimExampleComponentsJNI.ToyReflexController_computeControls(swigCPtr, this, State.getCPtr(s), s, Vector.getCPtr(controls), controls);
  }

}
