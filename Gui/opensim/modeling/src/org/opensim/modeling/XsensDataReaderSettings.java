/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  XsensDataReaderSettings is a class that reads files produced by IMU<br>
 *    manufacturer Xsens and produces datatables from them. This is intended to<br>
 *    help consume IMU outputs.
 */
public class XsensDataReaderSettings extends OpenSimObject {
  private transient long swigCPtr;

  public XsensDataReaderSettings(long cPtr, boolean cMemoryOwn) {
    super(opensimCommonJNI.XsensDataReaderSettings_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(XsensDataReaderSettings obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimCommonJNI.delete_XsensDataReaderSettings(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static XsensDataReaderSettings safeDownCast(OpenSimObject obj) {
    long cPtr = opensimCommonJNI.XsensDataReaderSettings_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new XsensDataReaderSettings(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimCommonJNI.XsensDataReaderSettings_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimCommonJNI.XsensDataReaderSettings_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimCommonJNI.XsensDataReaderSettings_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new XsensDataReaderSettings(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimCommonJNI.XsensDataReaderSettings_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_data_folder(XsensDataReaderSettings source) {
    opensimCommonJNI.XsensDataReaderSettings_copyProperty_data_folder(swigCPtr, this, XsensDataReaderSettings.getCPtr(source), source);
  }

  public String get_data_folder(int i) {
    return opensimCommonJNI.XsensDataReaderSettings_get_data_folder__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_data_folder(int i) {
    return new SWIGTYPE_p_std__string(opensimCommonJNI.XsensDataReaderSettings_upd_data_folder__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_data_folder(int i, String value) {
    opensimCommonJNI.XsensDataReaderSettings_set_data_folder__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_data_folder(String value) {
    return opensimCommonJNI.XsensDataReaderSettings_append_data_folder(swigCPtr, this, value);
  }

  public void constructProperty_data_folder(String initValue) {
    opensimCommonJNI.XsensDataReaderSettings_constructProperty_data_folder(swigCPtr, this, initValue);
  }

  public String get_data_folder() {
    return opensimCommonJNI.XsensDataReaderSettings_get_data_folder__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_data_folder() {
    return new SWIGTYPE_p_std__string(opensimCommonJNI.XsensDataReaderSettings_upd_data_folder__SWIG_1(swigCPtr, this), false);
  }

  public void set_data_folder(String value) {
    opensimCommonJNI.XsensDataReaderSettings_set_data_folder__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_trial_prefix(XsensDataReaderSettings source) {
    opensimCommonJNI.XsensDataReaderSettings_copyProperty_trial_prefix(swigCPtr, this, XsensDataReaderSettings.getCPtr(source), source);
  }

  public String get_trial_prefix(int i) {
    return opensimCommonJNI.XsensDataReaderSettings_get_trial_prefix__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_trial_prefix(int i) {
    return new SWIGTYPE_p_std__string(opensimCommonJNI.XsensDataReaderSettings_upd_trial_prefix__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_trial_prefix(int i, String value) {
    opensimCommonJNI.XsensDataReaderSettings_set_trial_prefix__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_trial_prefix(String value) {
    return opensimCommonJNI.XsensDataReaderSettings_append_trial_prefix(swigCPtr, this, value);
  }

  public void constructProperty_trial_prefix(String initValue) {
    opensimCommonJNI.XsensDataReaderSettings_constructProperty_trial_prefix(swigCPtr, this, initValue);
  }

  public String get_trial_prefix() {
    return opensimCommonJNI.XsensDataReaderSettings_get_trial_prefix__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_trial_prefix() {
    return new SWIGTYPE_p_std__string(opensimCommonJNI.XsensDataReaderSettings_upd_trial_prefix__SWIG_1(swigCPtr, this), false);
  }

  public void set_trial_prefix(String value) {
    opensimCommonJNI.XsensDataReaderSettings_set_trial_prefix__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ExperimentalSensors(XsensDataReaderSettings source) {
    opensimCommonJNI.XsensDataReaderSettings_copyProperty_ExperimentalSensors(swigCPtr, this, XsensDataReaderSettings.getCPtr(source), source);
  }

  public ExperimentalSensor get_ExperimentalSensors(int i) {
    return new ExperimentalSensor(opensimCommonJNI.XsensDataReaderSettings_get_ExperimentalSensors(swigCPtr, this, i), false);
  }

  public ExperimentalSensor upd_ExperimentalSensors(int i) {
    return new ExperimentalSensor(opensimCommonJNI.XsensDataReaderSettings_upd_ExperimentalSensors(swigCPtr, this, i), false);
  }

  public void set_ExperimentalSensors(int i, ExperimentalSensor value) {
    opensimCommonJNI.XsensDataReaderSettings_set_ExperimentalSensors(swigCPtr, this, i, ExperimentalSensor.getCPtr(value), value);
  }

  public int append_ExperimentalSensors(ExperimentalSensor value) {
    return opensimCommonJNI.XsensDataReaderSettings_append_ExperimentalSensors(swigCPtr, this, ExperimentalSensor.getCPtr(value), value);
  }

  public void constructProperty_ExperimentalSensors() {
    opensimCommonJNI.XsensDataReaderSettings_constructProperty_ExperimentalSensors(swigCPtr, this);
  }

  public XsensDataReaderSettings() {
    this(opensimCommonJNI.new_XsensDataReaderSettings__SWIG_0(), true);
  }

  public XsensDataReaderSettings(String xmlFile) {
    this(opensimCommonJNI.new_XsensDataReaderSettings__SWIG_1(xmlFile), true);
  }

}
