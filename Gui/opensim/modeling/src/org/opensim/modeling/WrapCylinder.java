/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 * A class implementing a cylinder for muscle wrapping.<br>
 * <br>
 * @author Peter Loan  <br>
 * updated for OpenSim 4.0 by Benjamin Michaud, 2019.
 */
public class WrapCylinder extends WrapObject {
  private transient long swigCPtr;

  public WrapCylinder(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.WrapCylinder_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(WrapCylinder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_WrapCylinder(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static WrapCylinder safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.WrapCylinder_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new WrapCylinder(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.WrapCylinder_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.WrapCylinder_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.WrapCylinder_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new WrapCylinder(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.WrapCylinder_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_radius(WrapCylinder source) {
    opensimSimulationJNI.WrapCylinder_copyProperty_radius(swigCPtr, this, WrapCylinder.getCPtr(source), source);
  }

  public double get_radius(int i) {
    return opensimSimulationJNI.WrapCylinder_get_radius__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_radius(int i) {
    return new SWIGTYPE_p_double(opensimSimulationJNI.WrapCylinder_upd_radius__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_radius(int i, double value) {
    opensimSimulationJNI.WrapCylinder_set_radius__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_radius(double value) {
    return opensimSimulationJNI.WrapCylinder_append_radius(swigCPtr, this, value);
  }

  public void constructProperty_radius(double initValue) {
    opensimSimulationJNI.WrapCylinder_constructProperty_radius(swigCPtr, this, initValue);
  }

  public double get_radius() {
    return opensimSimulationJNI.WrapCylinder_get_radius__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_radius() {
    return new SWIGTYPE_p_double(opensimSimulationJNI.WrapCylinder_upd_radius__SWIG_1(swigCPtr, this), false);
  }

  public void set_radius(double value) {
    opensimSimulationJNI.WrapCylinder_set_radius__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_length(WrapCylinder source) {
    opensimSimulationJNI.WrapCylinder_copyProperty_length(swigCPtr, this, WrapCylinder.getCPtr(source), source);
  }

  public double get_length(int i) {
    return opensimSimulationJNI.WrapCylinder_get_length__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_length(int i) {
    return new SWIGTYPE_p_double(opensimSimulationJNI.WrapCylinder_upd_length__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_length(int i, double value) {
    opensimSimulationJNI.WrapCylinder_set_length__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_length(double value) {
    return opensimSimulationJNI.WrapCylinder_append_length(swigCPtr, this, value);
  }

  public void constructProperty_length(double initValue) {
    opensimSimulationJNI.WrapCylinder_constructProperty_length(swigCPtr, this, initValue);
  }

  public double get_length() {
    return opensimSimulationJNI.WrapCylinder_get_length__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_length() {
    return new SWIGTYPE_p_double(opensimSimulationJNI.WrapCylinder_upd_length__SWIG_1(swigCPtr, this), false);
  }

  public void set_length(double value) {
    opensimSimulationJNI.WrapCylinder_set_length__SWIG_1(swigCPtr, this, value);
  }

  public WrapCylinder() {
    this(opensimSimulationJNI.new_WrapCylinder(), true);
  }

  public String getWrapTypeName() {
    return opensimSimulationJNI.WrapCylinder_getWrapTypeName(swigCPtr, this);
  }

  public String getDimensionsString() {
    return opensimSimulationJNI.WrapCylinder_getDimensionsString(swigCPtr, this);
  }

  /**
   *  Scale the cylinder's dimensions. The base class (WrapObject) scales the<br>
   *         origin of the cylinder in the body's reference frame. 
   */
  public void extendScale(State s, ScaleSet scaleSet) {
    opensimSimulationJNI.WrapCylinder_extendScale(swigCPtr, this, State.getCPtr(s), s, ScaleSet.getCPtr(scaleSet), scaleSet);
  }

}
