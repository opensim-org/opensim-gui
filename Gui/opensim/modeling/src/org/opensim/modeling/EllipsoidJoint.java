/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class EllipsoidJoint extends Joint {
  private transient long swigCPtr;

  protected EllipsoidJoint(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.EllipsoidJoint_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(EllipsoidJoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_EllipsoidJoint(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static EllipsoidJoint safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.EllipsoidJoint_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new EllipsoidJoint(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.EllipsoidJoint_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.EllipsoidJoint_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.EllipsoidJoint_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new EllipsoidJoint(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.EllipsoidJoint_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_radii_x_y_z(EllipsoidJoint source) {
    opensimSimulationJNI.EllipsoidJoint_copyProperty_radii_x_y_z(swigCPtr, this, EllipsoidJoint.getCPtr(source), source);
  }

  public Vec3 get_radii_x_y_z(int i) {
    return new Vec3(opensimSimulationJNI.EllipsoidJoint_get_radii_x_y_z__SWIG_0(swigCPtr, this, i), false);
  }

  public Vec3 upd_radii_x_y_z(int i) {
    return new Vec3(opensimSimulationJNI.EllipsoidJoint_upd_radii_x_y_z__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_radii_x_y_z(int i, Vec3 value) {
    opensimSimulationJNI.EllipsoidJoint_set_radii_x_y_z__SWIG_0(swigCPtr, this, i, Vec3.getCPtr(value), value);
  }

  public int append_radii_x_y_z(Vec3 value) {
    return opensimSimulationJNI.EllipsoidJoint_append_radii_x_y_z(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public void constructProperty_radii_x_y_z(Vec3 initValue) {
    opensimSimulationJNI.EllipsoidJoint_constructProperty_radii_x_y_z(swigCPtr, this, Vec3.getCPtr(initValue), initValue);
  }

  public Vec3 get_radii_x_y_z() {
    return new Vec3(opensimSimulationJNI.EllipsoidJoint_get_radii_x_y_z__SWIG_1(swigCPtr, this), false);
  }

  public Vec3 upd_radii_x_y_z() {
    return new Vec3(opensimSimulationJNI.EllipsoidJoint_upd_radii_x_y_z__SWIG_1(swigCPtr, this), false);
  }

  public void set_radii_x_y_z(Vec3 value) {
    opensimSimulationJNI.EllipsoidJoint_set_radii_x_y_z__SWIG_1(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public EllipsoidJoint() {
    this(opensimSimulationJNI.new_EllipsoidJoint__SWIG_0(), true);
  }

  public EllipsoidJoint(String name, PhysicalFrame parent, PhysicalFrame child, Vec3 ellipsoidRadii) {
    this(opensimSimulationJNI.new_EllipsoidJoint__SWIG_1(name, PhysicalFrame.getCPtr(parent), parent, PhysicalFrame.getCPtr(child), child, Vec3.getCPtr(ellipsoidRadii), ellipsoidRadii), true);
  }

  public EllipsoidJoint(String name, PhysicalFrame parent, Vec3 locationInParent, Vec3 orientationInParent, PhysicalFrame child, Vec3 locationInChild, Vec3 orientationInChild, Vec3 ellipsoidRadii) {
    this(opensimSimulationJNI.new_EllipsoidJoint__SWIG_2(name, PhysicalFrame.getCPtr(parent), parent, Vec3.getCPtr(locationInParent), locationInParent, Vec3.getCPtr(orientationInParent), orientationInParent, PhysicalFrame.getCPtr(child), child, Vec3.getCPtr(locationInChild), locationInChild, Vec3.getCPtr(orientationInChild), orientationInChild, Vec3.getCPtr(ellipsoidRadii), ellipsoidRadii), true);
  }

  public void setEllipsoidRadii(Vec3 radii) {
    opensimSimulationJNI.EllipsoidJoint_setEllipsoidRadii(swigCPtr, this, Vec3.getCPtr(radii), radii);
  }

  public Coordinate getCoordinate() {
    return new Coordinate(opensimSimulationJNI.EllipsoidJoint_getCoordinate__SWIG_0_0(swigCPtr, this), false);
  }

  public Coordinate updCoordinate() {
    return new Coordinate(opensimSimulationJNI.EllipsoidJoint_updCoordinate__SWIG_0_0(swigCPtr, this), false);
  }

  public Coordinate getCoordinate(EllipsoidJoint.Coord idx) {
    return new Coordinate(opensimSimulationJNI.EllipsoidJoint_getCoordinate__SWIG_1(swigCPtr, this, idx.swigValue()), false);
  }

  public Coordinate updCoordinate(EllipsoidJoint.Coord idx) {
    return new Coordinate(opensimSimulationJNI.EllipsoidJoint_updCoordinate__SWIG_1(swigCPtr, this, idx.swigValue()), false);
  }

  public void extendScale(State s, ScaleSet scaleSet) {
    opensimSimulationJNI.EllipsoidJoint_extendScale(swigCPtr, this, State.getCPtr(s), s, ScaleSet.getCPtr(scaleSet), scaleSet);
  }

  public final static class Coord {
    public final static EllipsoidJoint.Coord Rotation1X = new EllipsoidJoint.Coord("Rotation1X", opensimSimulationJNI.EllipsoidJoint_Coord_Rotation1X_get());
    public final static EllipsoidJoint.Coord Rotation2Y = new EllipsoidJoint.Coord("Rotation2Y", opensimSimulationJNI.EllipsoidJoint_Coord_Rotation2Y_get());
    public final static EllipsoidJoint.Coord Rotation3Z = new EllipsoidJoint.Coord("Rotation3Z", opensimSimulationJNI.EllipsoidJoint_Coord_Rotation3Z_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Coord swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Coord.class + " with value " + swigValue);
    }

    private Coord(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Coord(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Coord(String swigName, Coord swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Coord[] swigValues = { Rotation1X, Rotation2Y, Rotation3Z };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
