/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Probe extends ModelComponent {
  private transient long swigCPtr;

  protected Probe(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.Probe_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Probe obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_Probe(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Probe safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.Probe_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Probe(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.Probe_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.Probe_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.Probe_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Probe(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.Probe_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_enabled(Probe source) {
    opensimSimulationJNI.Probe_copyProperty_enabled(swigCPtr, this, Probe.getCPtr(source), source);
  }

  public boolean get_enabled(int i) {
    return opensimSimulationJNI.Probe_get_enabled__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_enabled(int i) {
    return new SWIGTYPE_p_bool(opensimSimulationJNI.Probe_upd_enabled__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_enabled(int i, boolean value) {
    opensimSimulationJNI.Probe_set_enabled__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_enabled(boolean value) {
    return opensimSimulationJNI.Probe_append_enabled(swigCPtr, this, value);
  }

  public void constructProperty_enabled(boolean initValue) {
    opensimSimulationJNI.Probe_constructProperty_enabled(swigCPtr, this, initValue);
  }

  public boolean get_enabled() {
    return opensimSimulationJNI.Probe_get_enabled__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_enabled() {
    return new SWIGTYPE_p_bool(opensimSimulationJNI.Probe_upd_enabled__SWIG_1(swigCPtr, this), false);
  }

  public void set_enabled(boolean value) {
    opensimSimulationJNI.Probe_set_enabled__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_probe_operation(Probe source) {
    opensimSimulationJNI.Probe_copyProperty_probe_operation(swigCPtr, this, Probe.getCPtr(source), source);
  }

  public String get_probe_operation(int i) {
    return opensimSimulationJNI.Probe_get_probe_operation__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_probe_operation(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.Probe_upd_probe_operation__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_probe_operation(int i, String value) {
    opensimSimulationJNI.Probe_set_probe_operation__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_probe_operation(String value) {
    return opensimSimulationJNI.Probe_append_probe_operation(swigCPtr, this, value);
  }

  public void constructProperty_probe_operation(String initValue) {
    opensimSimulationJNI.Probe_constructProperty_probe_operation(swigCPtr, this, initValue);
  }

  public String get_probe_operation() {
    return opensimSimulationJNI.Probe_get_probe_operation__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_probe_operation() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.Probe_upd_probe_operation__SWIG_1(swigCPtr, this), false);
  }

  public void set_probe_operation(String value) {
    opensimSimulationJNI.Probe_set_probe_operation__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_initial_conditions_for_integration(Probe source) {
    opensimSimulationJNI.Probe_copyProperty_initial_conditions_for_integration(swigCPtr, this, Probe.getCPtr(source), source);
  }

  public double get_initial_conditions_for_integration(int i) {
    return opensimSimulationJNI.Probe_get_initial_conditions_for_integration(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_initial_conditions_for_integration(int i) {
    return new SWIGTYPE_p_double(opensimSimulationJNI.Probe_upd_initial_conditions_for_integration(swigCPtr, this, i), false);
  }

  public void set_initial_conditions_for_integration(int i, double value) {
    opensimSimulationJNI.Probe_set_initial_conditions_for_integration(swigCPtr, this, i, value);
  }

  public int append_initial_conditions_for_integration(double value) {
    return opensimSimulationJNI.Probe_append_initial_conditions_for_integration(swigCPtr, this, value);
  }

  public void constructProperty_initial_conditions_for_integration() {
    opensimSimulationJNI.Probe_constructProperty_initial_conditions_for_integration(swigCPtr, this);
  }

  public void copyProperty_gain(Probe source) {
    opensimSimulationJNI.Probe_copyProperty_gain(swigCPtr, this, Probe.getCPtr(source), source);
  }

  public double get_gain(int i) {
    return opensimSimulationJNI.Probe_get_gain__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_gain(int i) {
    return new SWIGTYPE_p_double(opensimSimulationJNI.Probe_upd_gain__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_gain(int i, double value) {
    opensimSimulationJNI.Probe_set_gain__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_gain(double value) {
    return opensimSimulationJNI.Probe_append_gain(swigCPtr, this, value);
  }

  public void constructProperty_gain(double initValue) {
    opensimSimulationJNI.Probe_constructProperty_gain(swigCPtr, this, initValue);
  }

  public double get_gain() {
    return opensimSimulationJNI.Probe_get_gain__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_gain() {
    return new SWIGTYPE_p_double(opensimSimulationJNI.Probe_upd_gain__SWIG_1(swigCPtr, this), false);
  }

  public void set_gain(double value) {
    opensimSimulationJNI.Probe_set_gain__SWIG_1(swigCPtr, this, value);
  }

  public void set_has_output_probe_outputs(boolean value) {
    opensimSimulationJNI.Probe__has_output_probe_outputs_set(swigCPtr, this, value);
  }

  public boolean get_has_output_probe_outputs() {
    return opensimSimulationJNI.Probe__has_output_probe_outputs_get(swigCPtr, this);
  }

  public void reset(State s) {
    opensimSimulationJNI.Probe_reset(swigCPtr, this, State.getCPtr(s), s);
  }

  public int getNumInternalMeasureStates() {
    return opensimSimulationJNI.Probe_getNumInternalMeasureStates(swigCPtr, this);
  }

  public boolean isEnabled() {
    return opensimSimulationJNI.Probe_isEnabled(swigCPtr, this);
  }

  public void setEnabled(boolean enabled) {
    opensimSimulationJNI.Probe_setEnabled(swigCPtr, this, enabled);
  }

  public String getOperation() {
    return opensimSimulationJNI.Probe_getOperation(swigCPtr, this);
  }

  public void setOperation(String probe_operation) {
    opensimSimulationJNI.Probe_setOperation(swigCPtr, this, probe_operation);
  }

  public Vector getInitialConditions() {
    return new Vector(opensimSimulationJNI.Probe_getInitialConditions(swigCPtr, this), true);
  }

  public void setInitialConditions(Vector initial_conditions_for_integration) {
    opensimSimulationJNI.Probe_setInitialConditions(swigCPtr, this, Vector.getCPtr(initial_conditions_for_integration), initial_conditions_for_integration);
  }

  public double getGain() {
    return opensimSimulationJNI.Probe_getGain(swigCPtr, this);
  }

  public void setGain(double gain) {
    opensimSimulationJNI.Probe_setGain(swigCPtr, this, gain);
  }

  public Vector getProbeOutputs(State state) {
    return new Vector(opensimSimulationJNI.Probe_getProbeOutputs(swigCPtr, this, State.getCPtr(state), state), true);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element node, int versionNumber) {
    opensimSimulationJNI.Probe_updateFromXMLNode(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(node), versionNumber);
  }

}
