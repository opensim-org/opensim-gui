/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 * A PhysicalOffsetFrame is a PhysicalFrame whose transform is specified as a <br>
 * constant offset from another PhysicalFrame. PhysicalOffsetFrames can be used<br>
 * to specify the location of a Joint or Constraint on a Body or any other <br>
 * PhysicalFrame. For example, the location and orientation of the knee joint <br>
 * frame specified in the femur (thigh) and tibia (shank) Body reference frames.<br>
 * This class has the methods of both the OffsetFrame (template) and the<br>
 * PhysicalFrame class.<br>
 * <br>
 * NOTE: PhysicalOffsetFrame is closed to extensions. Consider extending<br>
 * OffsetFrame and/or use the mixin with a derived class of PhysicalFrame.<br>
 * <br>
 * @author Ajay Seth
 */
public class PhysicalOffsetFrame extends PhysicalFrameWithOffset {
  private transient long swigCPtr;

  public PhysicalOffsetFrame(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.PhysicalOffsetFrame_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(PhysicalOffsetFrame obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_PhysicalOffsetFrame(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static PhysicalOffsetFrame safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.PhysicalOffsetFrame_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new PhysicalOffsetFrame(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.PhysicalOffsetFrame_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.PhysicalOffsetFrame_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.PhysicalOffsetFrame_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new PhysicalOffsetFrame(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.PhysicalOffsetFrame_getConcreteClassName(swigCPtr, this);
  }

  public PhysicalOffsetFrame() {
    this(opensimSimulationJNI.new_PhysicalOffsetFrame__SWIG_0(), true);
  }

  public PhysicalOffsetFrame(PhysicalFrame parent, Transform offset) {
    this(opensimSimulationJNI.new_PhysicalOffsetFrame__SWIG_1(PhysicalFrame.getCPtr(parent), parent, Transform.getCPtr(offset), offset), true);
  }

  public PhysicalOffsetFrame(String name, PhysicalFrame parent, Transform offset) {
    this(opensimSimulationJNI.new_PhysicalOffsetFrame__SWIG_2(name, PhysicalFrame.getCPtr(parent), parent, Transform.getCPtr(offset), offset), true);
  }

  public PhysicalOffsetFrame(String name, String parentName, Transform offset) {
    this(opensimSimulationJNI.new_PhysicalOffsetFrame__SWIG_3(name, parentName, Transform.getCPtr(offset), offset), true);
  }

}
