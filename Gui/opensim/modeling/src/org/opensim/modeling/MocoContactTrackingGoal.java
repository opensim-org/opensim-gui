/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class MocoContactTrackingGoal extends MocoGoal {
  private transient long swigCPtr;

  public MocoContactTrackingGoal(long cPtr, boolean cMemoryOwn) {
    super(opensimMocoJNI.MocoContactTrackingGoal_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(MocoContactTrackingGoal obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimMocoJNI.delete_MocoContactTrackingGoal(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static MocoContactTrackingGoal safeDownCast(OpenSimObject obj) {
    long cPtr = opensimMocoJNI.MocoContactTrackingGoal_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new MocoContactTrackingGoal(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimMocoJNI.MocoContactTrackingGoal_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimMocoJNI.MocoContactTrackingGoal_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimMocoJNI.MocoContactTrackingGoal_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new MocoContactTrackingGoal(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimMocoJNI.MocoContactTrackingGoal_getConcreteClassName(swigCPtr, this);
  }

  public MocoContactTrackingGoal() {
    this(opensimMocoJNI.new_MocoContactTrackingGoal__SWIG_0(), true);
  }

  public MocoContactTrackingGoal(String name) {
    this(opensimMocoJNI.new_MocoContactTrackingGoal__SWIG_1(name), true);
  }

  public MocoContactTrackingGoal(String name, double weight) {
    this(opensimMocoJNI.new_MocoContactTrackingGoal__SWIG_2(name, weight), true);
  }

  public void setExternalLoadsFile(String extLoadsFile) {
    opensimMocoJNI.MocoContactTrackingGoal_setExternalLoadsFile(swigCPtr, this, extLoadsFile);
  }

  public void setExternalLoads(ExternalLoads extLoads) {
    opensimMocoJNI.MocoContactTrackingGoal_setExternalLoads(swigCPtr, this, ExternalLoads.getCPtr(extLoads), extLoads);
  }

  public void addContactGroup(StdVectorString contactForcePaths, String externalForceName) {
    opensimMocoJNI.MocoContactTrackingGoal_addContactGroup__SWIG_0(swigCPtr, this, StdVectorString.getCPtr(contactForcePaths), contactForcePaths, externalForceName);
  }

  public void addContactGroup(MocoContactTrackingGoalGroup group) {
    opensimMocoJNI.MocoContactTrackingGoal_addContactGroup__SWIG_1(swigCPtr, this, MocoContactTrackingGoalGroup.getCPtr(group), group);
  }

  public void setProjection(String projection) {
    opensimMocoJNI.MocoContactTrackingGoal_setProjection(swigCPtr, this, projection);
  }

  public String getProjection() {
    return opensimMocoJNI.MocoContactTrackingGoal_getProjection(swigCPtr, this);
  }

  public void setProjectionVector(Vec3 normal) {
    opensimMocoJNI.MocoContactTrackingGoal_setProjectionVector(swigCPtr, this, Vec3.getCPtr(normal), normal);
  }

  public void clearProjectionVector() {
    opensimMocoJNI.MocoContactTrackingGoal_clearProjectionVector(swigCPtr, this);
  }

  public Vec3 getProjectionVector() {
    return new Vec3(opensimMocoJNI.MocoContactTrackingGoal_getProjectionVector(swigCPtr, this), true);
  }

}
