/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  A line between two points. Note that the actual placement can be changed <br>
 * by the parent class transform &amp; scale; here we are just generating the <br>
 * initial line in the geometry object's local frame. <br>
 * <br>
 * There is a default constructor for this object but it is not much<br>
 * use unless followed by endpoint specifications. By default we produce<br>
 * a line going from (0,0,0) to (1,1,1) just so it will show up if you<br>
 * forget to set it to something meaningful. Having a default constructor<br>
 * allows us to have arrays of these objects. *
 */
public class DecorativeLine extends DecorativeGeometry {
  private transient long swigCPtr;

  public DecorativeLine(long cPtr, boolean cMemoryOwn) {
    super(opensimSimbodyJNI.DecorativeLine_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(DecorativeLine obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimbodyJNI.delete_DecorativeLine(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DecorativeLine(Vec3 p1, Vec3 p2) {
    this(opensimSimbodyJNI.new_DecorativeLine__SWIG_0(Vec3.getCPtr(p1), p1, Vec3.getCPtr(p2), p2), true);
  }

  public DecorativeLine(Vec3 p1) {
    this(opensimSimbodyJNI.new_DecorativeLine__SWIG_1(Vec3.getCPtr(p1), p1), true);
  }

  public DecorativeLine() {
    this(opensimSimbodyJNI.new_DecorativeLine__SWIG_2(), true);
  }

  public DecorativeLine setPoint1(Vec3 p1) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setPoint1(swigCPtr, this, Vec3.getCPtr(p1), p1), false);
  }

  public DecorativeLine setPoint2(Vec3 p2) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setPoint2(swigCPtr, this, Vec3.getCPtr(p2), p2), false);
  }

  public DecorativeLine setEndpoints(Vec3 p1, Vec3 p2) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setEndpoints(swigCPtr, this, Vec3.getCPtr(p1), p1, Vec3.getCPtr(p2), p2), false);
  }

  public DecorativeLine setBodyId(int b) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setBodyId(swigCPtr, this, b), false);
  }

  public DecorativeLine setIndexOnBody(int x) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setIndexOnBody(swigCPtr, this, x), false);
  }

  public DecorativeLine setUserRef(SWIGTYPE_p_void p) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setUserRef(swigCPtr, this, SWIGTYPE_p_void.getCPtr(p)), false);
  }

  public DecorativeLine setTransform(Transform X_BD) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setTransform(swigCPtr, this, Transform.getCPtr(X_BD), X_BD), false);
  }

  public DecorativeLine setResolution(double r) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setResolution(swigCPtr, this, r), false);
  }

  public DecorativeLine setScaleFactors(Vec3 s) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setScaleFactors(swigCPtr, this, Vec3.getCPtr(s), s), false);
  }

  public DecorativeLine setColor(Vec3 rgb) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setColor(swigCPtr, this, Vec3.getCPtr(rgb), rgb), false);
  }

  public DecorativeLine setOpacity(double o) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setOpacity(swigCPtr, this, o), false);
  }

  public DecorativeLine setLineThickness(double t) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setLineThickness(swigCPtr, this, t), false);
  }

  public DecorativeLine setRepresentation(DecorativeGeometry.Representation r) {
    return new DecorativeLine(opensimSimbodyJNI.DecorativeLine_setRepresentation(swigCPtr, this, r.swigValue()), false);
  }

  public Vec3 getPoint1() {
    return new Vec3(opensimSimbodyJNI.DecorativeLine_getPoint1(swigCPtr, this), false);
  }

  public Vec3 getPoint2() {
    return new Vec3(opensimSimbodyJNI.DecorativeLine_getPoint2(swigCPtr, this), false);
  }

  public DecorativeLine clone() {
    long cPtr = opensimSimbodyJNI.DecorativeLine_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new DecorativeLine(cPtr, false);
  }

}
