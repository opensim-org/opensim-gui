/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ExpressionBasedCoordinateForce extends Force {
  private transient long swigCPtr;

  protected ExpressionBasedCoordinateForce(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.ExpressionBasedCoordinateForce_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ExpressionBasedCoordinateForce obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_ExpressionBasedCoordinateForce(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ExpressionBasedCoordinateForce safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.ExpressionBasedCoordinateForce_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new ExpressionBasedCoordinateForce(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.ExpressionBasedCoordinateForce_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ExpressionBasedCoordinateForce(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_coordinate(ExpressionBasedCoordinateForce source) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_copyProperty_coordinate(swigCPtr, this, ExpressionBasedCoordinateForce.getCPtr(source), source);
  }

  public String get_coordinate(int i) {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_get_coordinate__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_coordinate(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExpressionBasedCoordinateForce_upd_coordinate__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_coordinate(int i, String value) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_set_coordinate__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_coordinate(String value) {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_append_coordinate(swigCPtr, this, value);
  }

  public void constructProperty_coordinate(String initValue) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_constructProperty_coordinate(swigCPtr, this, initValue);
  }

  public String get_coordinate() {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_get_coordinate__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_coordinate() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExpressionBasedCoordinateForce_upd_coordinate__SWIG_1(swigCPtr, this), false);
  }

  public void set_coordinate(String value) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_set_coordinate__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_expression(ExpressionBasedCoordinateForce source) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_copyProperty_expression(swigCPtr, this, ExpressionBasedCoordinateForce.getCPtr(source), source);
  }

  public String get_expression(int i) {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_get_expression__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_expression(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExpressionBasedCoordinateForce_upd_expression__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_expression(int i, String value) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_set_expression__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_expression(String value) {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_append_expression(swigCPtr, this, value);
  }

  public void constructProperty_expression(String initValue) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_constructProperty_expression(swigCPtr, this, initValue);
  }

  public String get_expression() {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_get_expression__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_expression() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExpressionBasedCoordinateForce_upd_expression__SWIG_1(swigCPtr, this), false);
  }

  public void set_expression(String value) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_set_expression__SWIG_1(swigCPtr, this, value);
  }

  public ExpressionBasedCoordinateForce() {
    this(opensimSimulationJNI.new_ExpressionBasedCoordinateForce__SWIG_0(), true);
  }

  public ExpressionBasedCoordinateForce(String coordinate, String expression) {
    this(opensimSimulationJNI.new_ExpressionBasedCoordinateForce__SWIG_1(coordinate, expression), true);
  }

  public void setCoordinateName(String coord) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_setCoordinateName(swigCPtr, this, coord);
  }

  public String getCoordinateName() {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_getCoordinateName(swigCPtr, this);
  }

  public void setExpression(String expression) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_setExpression(swigCPtr, this, expression);
  }

  public double getForceMagnitude(State state) {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_getForceMagnitude(swigCPtr, this, State.getCPtr(state), state);
  }

  public void computeForce(State state, VectorOfSpatialVec bodyForces, Vector generalizedForces) {
    opensimSimulationJNI.ExpressionBasedCoordinateForce_computeForce(swigCPtr, this, State.getCPtr(state), state, VectorOfSpatialVec.getCPtr(bodyForces), bodyForces, Vector.getCPtr(generalizedForces), generalizedForces);
  }

  public double calcExpressionForce(State s) {
    return opensimSimulationJNI.ExpressionBasedCoordinateForce_calcExpressionForce(swigCPtr, this, State.getCPtr(s), s);
  }

  public ArrayStr getRecordLabels() {
    return new ArrayStr(opensimSimulationJNI.ExpressionBasedCoordinateForce_getRecordLabels(swigCPtr, this), true);
  }

  public ArrayDouble getRecordValues(State state) {
    return new ArrayDouble(opensimSimulationJNI.ExpressionBasedCoordinateForce_getRecordValues(swigCPtr, this, State.getCPtr(state), state), true);
  }

}
