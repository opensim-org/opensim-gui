/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *  Update table column labels to use post-4.0 state paths instead of pre-4.0<br>
 * state names. For example, this converts column labels as follows:<br>
 *   - `pelvis_tilt` -&gt; `/jointset/ground_pelvis/pelvis_tilt/value`<br>
 *   - `pelvis_tilt_u` -&gt; `/jointset/ground_pelvis/pelvis_tilt/speed`<br>
 *   - `soleus.activation` -&gt; `/forceset/soleus/activation`<br>
 *   - `soleus.fiber_length` -&gt; `/forceset/soleus/fiber_length`<br>
 * This can also be used to convert an Inverse Kinematics Tool solution MOT<br>
 * file to be used as a states file (with only coordinate values).<br>
 * If a column label does not identify a state in the model,<br>
 * the column label is not changed. Column labels must be unique.<br>
 * This operator is implemented using updateStateLabels40(). 
 */
public class TabOpUseAbsoluteStateNames extends TableOperator {
  private transient long swigCPtr;

  public TabOpUseAbsoluteStateNames(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.TabOpUseAbsoluteStateNames_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(TabOpUseAbsoluteStateNames obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_TabOpUseAbsoluteStateNames(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static TabOpUseAbsoluteStateNames safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.TabOpUseAbsoluteStateNames_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new TabOpUseAbsoluteStateNames(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.TabOpUseAbsoluteStateNames_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.TabOpUseAbsoluteStateNames_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.TabOpUseAbsoluteStateNames_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new TabOpUseAbsoluteStateNames(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.TabOpUseAbsoluteStateNames_getConcreteClassName(swigCPtr, this);
  }

  public TabOpUseAbsoluteStateNames() {
    this(opensimSimulationJNI.new_TabOpUseAbsoluteStateNames(), true);
  }

  public void operate(TimeSeriesTable table, Model model) {
    opensimSimulationJNI.TabOpUseAbsoluteStateNames_operate(swigCPtr, this, TimeSeriesTable.getCPtr(table), table, Model.getCPtr(model), model);
  }

}
