/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 *     <br>
 *     The MocoContactImpulseTrackingGoalGroup reflects the name of a single ExternalForce <br>
 *     and a list of smooth compliant contact force components in the model. <br>
 *     The MocoContactImpulseTrackingGoal calculates the difference in contact impulse, <br>
 *     for a single axis, between the data from the ExternalForce and the sum of the <br>
 *     forces from the contact force components.<br>
 *     ## Alternative frame paths<br>
 *     Contact force elements that correspond to a single ExternalForce are<br>
 *     typically attached to the same single body/frame. However, it is possible<br>
 *     that these contact force elements are spread over multiple bodies. For<br>
 *     example, the ground reaction force for the left foot may be modeled by<br>
 *     contact force elements on separate calcaneus and toe body segments.<br>
 *     The "applied_to_body" property of the associated ExternalForce will match<br>
 *     only one of these multiple bodies (e.g., only the calcaneus), causing Moco<br>
 *     to give an error, saying one of the contact elements does not seem to be<br>
 *     associated with the ExternalForce. To handle this situation, specify the<br>
 * other* body (e.g., the toes) under alternative_frame_paths. Without<br>
 *     specifying these alternative frames, Moco does not know which force to use<br>
 *     (the force on the sphere or the force on the half-space) when summing the<br>
 *     contact forces across contact force elements.<br>
 *     @see MocoContactImpulseTrackingGoal 
 */
public class MocoContactImpulseTrackingGoalGroup extends OpenSimObject {
  private transient long swigCPtr;

  public MocoContactImpulseTrackingGoalGroup(long cPtr, boolean cMemoryOwn) {
    super(opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(MocoContactImpulseTrackingGoalGroup obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimMocoJNI.delete_MocoContactImpulseTrackingGoalGroup(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static MocoContactImpulseTrackingGoalGroup safeDownCast(OpenSimObject obj) {
    long cPtr = opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new MocoContactImpulseTrackingGoalGroup(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new MocoContactImpulseTrackingGoalGroup(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_contact_force_paths(MocoContactImpulseTrackingGoalGroup source) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_copyProperty_contact_force_paths(swigCPtr, this, MocoContactImpulseTrackingGoalGroup.getCPtr(source), source);
  }

  public String get_contact_force_paths(int i) {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_get_contact_force_paths(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_contact_force_paths(int i) {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_upd_contact_force_paths(swigCPtr, this, i), false);
  }

  public void set_contact_force_paths(int i, String value) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_set_contact_force_paths(swigCPtr, this, i, value);
  }

  public int append_contact_force_paths(String value) {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_append_contact_force_paths(swigCPtr, this, value);
  }

  public void constructProperty_contact_force_paths() {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_constructProperty_contact_force_paths(swigCPtr, this);
  }

  public void copyProperty_external_force_name(MocoContactImpulseTrackingGoalGroup source) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_copyProperty_external_force_name(swigCPtr, this, MocoContactImpulseTrackingGoalGroup.getCPtr(source), source);
  }

  public String get_external_force_name(int i) {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_get_external_force_name__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_external_force_name(int i) {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_upd_external_force_name__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_external_force_name(int i, String value) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_set_external_force_name__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_external_force_name(String value) {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_append_external_force_name(swigCPtr, this, value);
  }

  public void constructProperty_external_force_name(String initValue) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_constructProperty_external_force_name(swigCPtr, this, initValue);
  }

  public String get_external_force_name() {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_get_external_force_name__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_external_force_name() {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_upd_external_force_name__SWIG_1(swigCPtr, this), false);
  }

  public void set_external_force_name(String value) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_set_external_force_name__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_alternative_frame_paths(MocoContactImpulseTrackingGoalGroup source) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_copyProperty_alternative_frame_paths(swigCPtr, this, MocoContactImpulseTrackingGoalGroup.getCPtr(source), source);
  }

  public String get_alternative_frame_paths(int i) {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_get_alternative_frame_paths(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_alternative_frame_paths(int i) {
    return new SWIGTYPE_p_std__string(opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_upd_alternative_frame_paths(swigCPtr, this, i), false);
  }

  public void set_alternative_frame_paths(int i, String value) {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_set_alternative_frame_paths(swigCPtr, this, i, value);
  }

  public int append_alternative_frame_paths(String value) {
    return opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_append_alternative_frame_paths(swigCPtr, this, value);
  }

  public void constructProperty_alternative_frame_paths() {
    opensimMocoJNI.MocoContactImpulseTrackingGoalGroup_constructProperty_alternative_frame_paths(swigCPtr, this);
  }

  public MocoContactImpulseTrackingGoalGroup() {
    this(opensimMocoJNI.new_MocoContactImpulseTrackingGoalGroup__SWIG_0(), true);
  }

  public MocoContactImpulseTrackingGoalGroup(StdVectorString contactForcePaths, String externalForceName) {
    this(opensimMocoJNI.new_MocoContactImpulseTrackingGoalGroup__SWIG_1(StdVectorString.getCPtr(contactForcePaths), contactForcePaths, externalForceName), true);
  }

  public MocoContactImpulseTrackingGoalGroup(StdVectorString contactForcePaths, String externalForceName, StdVectorString altFramePaths) {
    this(opensimMocoJNI.new_MocoContactImpulseTrackingGoalGroup__SWIG_2(StdVectorString.getCPtr(contactForcePaths), contactForcePaths, externalForceName, StdVectorString.getCPtr(altFramePaths), altFramePaths), true);
  }

}
