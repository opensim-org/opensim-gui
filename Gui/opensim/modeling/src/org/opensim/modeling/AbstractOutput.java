/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 * Output formalizes the access to a value of interest computed by the <br>
 * owning Component. The value is then exposed and easily accessible for use by<br>
 * other components (e.g. to satisfy an Input).<br>
 * The purpose of an Output is to bind a value of interest to a component's <br>
 * member function (generator), and provide a generic interface to the value, <br>
 * its type and label so it can be easily identified. It also specifies the <br>
 * realization (computational) stage at which the value is valid, so that a <br>
 * caller can provide adequate error handling.<br>
 * <br>
 * For example, a Body can have its position transformation with respect to  <br>
 * ground as an Output, which is only accessible when the model has been <br>
 * realized to the Position stage or beyond, in which case it depends on the<br>
 * Position stage. The validity of data flow can be checked prior to<br>
 * initiating a simulation.<br>
 * <br>
 * An Output is intended to lightweight and adds no computational overhead<br>
 * if the output goes unused. When an Output's value is called upon,<br>
 * the overhead is a single redirect to the corresponding member function<br>
 * for the value.<br>
 * <br>
 * An Output can either be a single-value Output or a list Output. A list Output<br>
 * is one that can have multiple Channels. The Channels are what get connected<br>
 * to Inputs.<br>
 * @author Ajay Seth
 */
public class AbstractOutput {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public AbstractOutput(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(AbstractOutput obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimCommonJNI.delete_AbstractOutput(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   *  Output's name 
   */
  public String getName() {
    return opensimCommonJNI.AbstractOutput_getName(swigCPtr, this);
  }

  /**
   *  Output's dependence on System being realized to at least this System::Stage 
   */
  public Stage getDependsOnStage() {
    return new Stage(opensimCommonJNI.AbstractOutput_getDependsOnStage(swigCPtr, this), false);
  }

  /**
   *  Can this Output have more than one channel? 
   */
  public boolean isListOutput() {
    return opensimCommonJNI.AbstractOutput_isListOutput(swigCPtr, this);
  }

  /**
   *  Output's owning Component 
   */
  public Component getOwner() {
    return new Component(opensimCommonJNI.AbstractOutput_getOwner(swigCPtr, this), false);
  }

  /**
   *  This returns &lt;absolute-path-to-component&gt;|&lt;output-name&gt;. 
   */
  public String getPathName() {
    return opensimCommonJNI.AbstractOutput_getPathName(swigCPtr, this);
  }

  /**
   *  Output Interface  Remove all channels from this Output (for list Outputs). 
   */
  public void clearChannels() {
    opensimCommonJNI.AbstractOutput_clearChannels(swigCPtr, this);
  }

  /**
   *  Add a channel to this Output. This should be called within the<br>
   * component's extendFinalizeFromProperties() .
   */
  public void addChannel(String channelName) {
    opensimCommonJNI.AbstractOutput_addChannel(swigCPtr, this, channelName);
  }

  public AbstractChannel getChannel(String name) {
    return new AbstractChannel(opensimCommonJNI.AbstractOutput_getChannel(swigCPtr, this, name), false);
  }

  /**
   *  The name of the value type (e.g., `double`) produced by this output. 
   */
  public String getTypeName() {
    return opensimCommonJNI.AbstractOutput_getTypeName(swigCPtr, this);
  }

  public String getValueAsString(State state) {
    return opensimCommonJNI.AbstractOutput_getValueAsString(swigCPtr, this, State.getCPtr(state), state);
  }

  public boolean isCompatible(AbstractOutput arg0) {
    return opensimCommonJNI.AbstractOutput_isCompatible(swigCPtr, this, AbstractOutput.getCPtr(arg0), arg0);
  }

  public void compatibleAssign(AbstractOutput arg0) {
    opensimCommonJNI.AbstractOutput_compatibleAssign(swigCPtr, this, AbstractOutput.getCPtr(arg0), arg0);
  }

  public AbstractOutput clone() {
    long cPtr = opensimCommonJNI.AbstractOutput_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new AbstractOutput(cPtr, true);
  }

  /**
   *  Specification for number of significant figures in string value. 
   */
  public long getNumberOfSignificantDigits() {
    return opensimCommonJNI.AbstractOutput_getNumberOfSignificantDigits(swigCPtr, this);
  }

  public void setNumberOfSignificantDigits(long numSigFigs) {
    opensimCommonJNI.AbstractOutput_setNumberOfSignificantDigits(swigCPtr, this, numSigFigs);
  }

}
