/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class StdVectorState {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected StdVectorState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(StdVectorState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimbodyJNI.delete_StdVectorState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public StdVectorState() {
    this(opensimSimbodyJNI.new_StdVectorState__SWIG_0(), true);
  }

  public StdVectorState(long n) {
    this(opensimSimbodyJNI.new_StdVectorState__SWIG_1(n), true);
  }

  public long size() {
    return opensimSimbodyJNI.StdVectorState_size(swigCPtr, this);
  }

  public long capacity() {
    return opensimSimbodyJNI.StdVectorState_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    opensimSimbodyJNI.StdVectorState_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return opensimSimbodyJNI.StdVectorState_isEmpty(swigCPtr, this);
  }

  public void clear() {
    opensimSimbodyJNI.StdVectorState_clear(swigCPtr, this);
  }

  public void add(State x) {
    opensimSimbodyJNI.StdVectorState_add(swigCPtr, this, State.getCPtr(x), x);
  }

  public State get(int i) {
    return new State(opensimSimbodyJNI.StdVectorState_get(swigCPtr, this, i), false);
  }

  public void set(int i, State val) {
    opensimSimbodyJNI.StdVectorState_set(swigCPtr, this, i, State.getCPtr(val), val);
  }

}
