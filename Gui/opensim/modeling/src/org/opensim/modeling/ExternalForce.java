/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 * An ExternalForce is a Force class specialized at applying an external force <br>
 * and/or torque to a body as described by arrays (columns) of a Storage object.<br>
 * The source of the Storage may be experimental sensor recording or user <br>
 * generated data. The Storage must be able to supply (1) an array of time, (2) <br>
 * arrays for the x,y,z, components of force and/or torque in time. Optionally,<br>
 * (3) arrays for the point of force application in time. An ExternalForce <br>
 * must specify the identifier (e.g. Force1.x Force1.y Force1.z) for the force<br>
 * components (columns) listed in the Storage either by individual labels or<br>
 * collectively (e.g. as "Force1"). Similarly, identifiers for the applied<br>
 * torque and optionally the point of force application must be specified. <br>
 * <br>
 * If an identifier is supplied and it cannot uniquely identify the force data <br>
 * (e.g. the force, torque, or point) in the Storage, then an Exception is <br>
 * thrown.<br>
 * <br>
 * An ExternalForce must apply at least a force or a torque and therefore both <br>
 * identifiers cannot be empty. <br>
 * <br>
 * @author Ajay Seth
 */
public class ExternalForce extends Force {
  private transient long swigCPtr;

  public ExternalForce(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.ExternalForce_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ExternalForce obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_ExternalForce(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ExternalForce safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.ExternalForce_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new ExternalForce(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.ExternalForce_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.ExternalForce_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.ExternalForce_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ExternalForce(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.ExternalForce_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_applied_to_body(ExternalForce source) {
    opensimSimulationJNI.ExternalForce_copyProperty_applied_to_body(swigCPtr, this, ExternalForce.getCPtr(source), source);
  }

  public String get_applied_to_body(int i) {
    return opensimSimulationJNI.ExternalForce_get_applied_to_body__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_applied_to_body(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_applied_to_body__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_applied_to_body(int i, String value) {
    opensimSimulationJNI.ExternalForce_set_applied_to_body__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_applied_to_body(String value) {
    return opensimSimulationJNI.ExternalForce_append_applied_to_body(swigCPtr, this, value);
  }

  public void constructProperty_applied_to_body(String initValue) {
    opensimSimulationJNI.ExternalForce_constructProperty_applied_to_body(swigCPtr, this, initValue);
  }

  public String get_applied_to_body() {
    return opensimSimulationJNI.ExternalForce_get_applied_to_body__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_applied_to_body() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_applied_to_body__SWIG_1(swigCPtr, this), false);
  }

  public void set_applied_to_body(String value) {
    opensimSimulationJNI.ExternalForce_set_applied_to_body__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_force_expressed_in_body(ExternalForce source) {
    opensimSimulationJNI.ExternalForce_copyProperty_force_expressed_in_body(swigCPtr, this, ExternalForce.getCPtr(source), source);
  }

  public String get_force_expressed_in_body(int i) {
    return opensimSimulationJNI.ExternalForce_get_force_expressed_in_body__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_force_expressed_in_body(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_force_expressed_in_body__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_force_expressed_in_body(int i, String value) {
    opensimSimulationJNI.ExternalForce_set_force_expressed_in_body__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_force_expressed_in_body(String value) {
    return opensimSimulationJNI.ExternalForce_append_force_expressed_in_body(swigCPtr, this, value);
  }

  public void constructProperty_force_expressed_in_body(String initValue) {
    opensimSimulationJNI.ExternalForce_constructProperty_force_expressed_in_body(swigCPtr, this, initValue);
  }

  public String get_force_expressed_in_body() {
    return opensimSimulationJNI.ExternalForce_get_force_expressed_in_body__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_force_expressed_in_body() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_force_expressed_in_body__SWIG_1(swigCPtr, this), false);
  }

  public void set_force_expressed_in_body(String value) {
    opensimSimulationJNI.ExternalForce_set_force_expressed_in_body__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_point_expressed_in_body(ExternalForce source) {
    opensimSimulationJNI.ExternalForce_copyProperty_point_expressed_in_body(swigCPtr, this, ExternalForce.getCPtr(source), source);
  }

  public String get_point_expressed_in_body(int i) {
    return opensimSimulationJNI.ExternalForce_get_point_expressed_in_body__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_point_expressed_in_body(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_point_expressed_in_body__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_point_expressed_in_body(int i, String value) {
    opensimSimulationJNI.ExternalForce_set_point_expressed_in_body__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_point_expressed_in_body(String value) {
    return opensimSimulationJNI.ExternalForce_append_point_expressed_in_body(swigCPtr, this, value);
  }

  public void constructProperty_point_expressed_in_body(String initValue) {
    opensimSimulationJNI.ExternalForce_constructProperty_point_expressed_in_body(swigCPtr, this, initValue);
  }

  public String get_point_expressed_in_body() {
    return opensimSimulationJNI.ExternalForce_get_point_expressed_in_body__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_point_expressed_in_body() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_point_expressed_in_body__SWIG_1(swigCPtr, this), false);
  }

  public void set_point_expressed_in_body(String value) {
    opensimSimulationJNI.ExternalForce_set_point_expressed_in_body__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_force_identifier(ExternalForce source) {
    opensimSimulationJNI.ExternalForce_copyProperty_force_identifier(swigCPtr, this, ExternalForce.getCPtr(source), source);
  }

  public String get_force_identifier(int i) {
    return opensimSimulationJNI.ExternalForce_get_force_identifier__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_force_identifier(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_force_identifier__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_force_identifier(int i, String value) {
    opensimSimulationJNI.ExternalForce_set_force_identifier__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_force_identifier(String value) {
    return opensimSimulationJNI.ExternalForce_append_force_identifier(swigCPtr, this, value);
  }

  public void constructProperty_force_identifier() {
    opensimSimulationJNI.ExternalForce_constructProperty_force_identifier__SWIG_0(swigCPtr, this);
  }

  public void constructProperty_force_identifier(String initValue) {
    opensimSimulationJNI.ExternalForce_constructProperty_force_identifier__SWIG_1(swigCPtr, this, initValue);
  }

  public String get_force_identifier() {
    return opensimSimulationJNI.ExternalForce_get_force_identifier__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_force_identifier() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_force_identifier__SWIG_1(swigCPtr, this), false);
  }

  public void set_force_identifier(String value) {
    opensimSimulationJNI.ExternalForce_set_force_identifier__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_point_identifier(ExternalForce source) {
    opensimSimulationJNI.ExternalForce_copyProperty_point_identifier(swigCPtr, this, ExternalForce.getCPtr(source), source);
  }

  public String get_point_identifier(int i) {
    return opensimSimulationJNI.ExternalForce_get_point_identifier__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_point_identifier(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_point_identifier__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_point_identifier(int i, String value) {
    opensimSimulationJNI.ExternalForce_set_point_identifier__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_point_identifier(String value) {
    return opensimSimulationJNI.ExternalForce_append_point_identifier(swigCPtr, this, value);
  }

  public void constructProperty_point_identifier() {
    opensimSimulationJNI.ExternalForce_constructProperty_point_identifier__SWIG_0(swigCPtr, this);
  }

  public void constructProperty_point_identifier(String initValue) {
    opensimSimulationJNI.ExternalForce_constructProperty_point_identifier__SWIG_1(swigCPtr, this, initValue);
  }

  public String get_point_identifier() {
    return opensimSimulationJNI.ExternalForce_get_point_identifier__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_point_identifier() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_point_identifier__SWIG_1(swigCPtr, this), false);
  }

  public void set_point_identifier(String value) {
    opensimSimulationJNI.ExternalForce_set_point_identifier__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_torque_identifier(ExternalForce source) {
    opensimSimulationJNI.ExternalForce_copyProperty_torque_identifier(swigCPtr, this, ExternalForce.getCPtr(source), source);
  }

  public String get_torque_identifier(int i) {
    return opensimSimulationJNI.ExternalForce_get_torque_identifier__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_torque_identifier(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_torque_identifier__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_torque_identifier(int i, String value) {
    opensimSimulationJNI.ExternalForce_set_torque_identifier__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_torque_identifier(String value) {
    return opensimSimulationJNI.ExternalForce_append_torque_identifier(swigCPtr, this, value);
  }

  public void constructProperty_torque_identifier() {
    opensimSimulationJNI.ExternalForce_constructProperty_torque_identifier__SWIG_0(swigCPtr, this);
  }

  public void constructProperty_torque_identifier(String initValue) {
    opensimSimulationJNI.ExternalForce_constructProperty_torque_identifier__SWIG_1(swigCPtr, this, initValue);
  }

  public String get_torque_identifier() {
    return opensimSimulationJNI.ExternalForce_get_torque_identifier__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_torque_identifier() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_torque_identifier__SWIG_1(swigCPtr, this), false);
  }

  public void set_torque_identifier(String value) {
    opensimSimulationJNI.ExternalForce_set_torque_identifier__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_data_source_name(ExternalForce source) {
    opensimSimulationJNI.ExternalForce_copyProperty_data_source_name(swigCPtr, this, ExternalForce.getCPtr(source), source);
  }

  public String get_data_source_name(int i) {
    return opensimSimulationJNI.ExternalForce_get_data_source_name__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_data_source_name(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_data_source_name__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_data_source_name(int i, String value) {
    opensimSimulationJNI.ExternalForce_set_data_source_name__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_data_source_name(String value) {
    return opensimSimulationJNI.ExternalForce_append_data_source_name(swigCPtr, this, value);
  }

  public void constructProperty_data_source_name() {
    opensimSimulationJNI.ExternalForce_constructProperty_data_source_name__SWIG_0(swigCPtr, this);
  }

  public void constructProperty_data_source_name(String initValue) {
    opensimSimulationJNI.ExternalForce_constructProperty_data_source_name__SWIG_1(swigCPtr, this, initValue);
  }

  public String get_data_source_name() {
    return opensimSimulationJNI.ExternalForce_get_data_source_name__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_data_source_name() {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.ExternalForce_upd_data_source_name__SWIG_1(swigCPtr, this), false);
  }

  public void set_data_source_name(String value) {
    opensimSimulationJNI.ExternalForce_set_data_source_name__SWIG_1(swigCPtr, this, value);
  }

  /**
   * Default Construct of an ExternalForce. <br>
   * By default ExternalForce has data source identified by name.<br>
   * By setup() time, Tool or modeler must setDataSource() on this Force for<br>
   * it to be able to apply any force. Otherwise, an exception is thrown.
   */
  public ExternalForce() {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_0(), true);
  }

  /**
   * Convenience Constructor of an ExternalForce. <br>
   * <br>
   * @param dataSource        <br>
   *      a storage containing the pertinent force data through time<br>
   * @param forceIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param pointIdentifier<br>
   *      string used to access the point of application of the force in<br>
   *      dataSource<br>
   * @param torqueIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param appliedToBodyName<br>
   *      string used to specify the body to which the force is applied<br>
   * @param forceExpressedInBodyName<br>
   *      string used to define in which body the force is expressed<br>
   * @param pointExpressedInBodyName<br>
   *      string used to define the body in which the point is expressed
   */
  public ExternalForce(Storage dataSource, String forceIdentifier, String pointIdentifier, String torqueIdentifier, String appliedToBodyName, String forceExpressedInBodyName, String pointExpressedInBodyName) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_1(Storage.getCPtr(dataSource), dataSource, forceIdentifier, pointIdentifier, torqueIdentifier, appliedToBodyName, forceExpressedInBodyName, pointExpressedInBodyName), true);
  }

  /**
   * Convenience Constructor of an ExternalForce. <br>
   * <br>
   * @param dataSource        <br>
   *      a storage containing the pertinent force data through time<br>
   * @param forceIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param pointIdentifier<br>
   *      string used to access the point of application of the force in<br>
   *      dataSource<br>
   * @param torqueIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param appliedToBodyName<br>
   *      string used to specify the body to which the force is applied<br>
   * @param forceExpressedInBodyName<br>
   *      string used to define in which body the force is expressed<br>
   * 
   */
  public ExternalForce(Storage dataSource, String forceIdentifier, String pointIdentifier, String torqueIdentifier, String appliedToBodyName, String forceExpressedInBodyName) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_2(Storage.getCPtr(dataSource), dataSource, forceIdentifier, pointIdentifier, torqueIdentifier, appliedToBodyName, forceExpressedInBodyName), true);
  }

  /**
   * Convenience Constructor of an ExternalForce. <br>
   * <br>
   * @param dataSource        <br>
   *      a storage containing the pertinent force data through time<br>
   * @param forceIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param pointIdentifier<br>
   *      string used to access the point of application of the force in<br>
   *      dataSource<br>
   * @param torqueIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param appliedToBodyName<br>
   *      string used to specify the body to which the force is applied<br>
   * <br>
   * 
   */
  public ExternalForce(Storage dataSource, String forceIdentifier, String pointIdentifier, String torqueIdentifier, String appliedToBodyName) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_3(Storage.getCPtr(dataSource), dataSource, forceIdentifier, pointIdentifier, torqueIdentifier, appliedToBodyName), true);
  }

  /**
   * Convenience Constructor of an ExternalForce. <br>
   * <br>
   * @param dataSource        <br>
   *      a storage containing the pertinent force data through time<br>
   * @param forceIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param pointIdentifier<br>
   *      string used to access the point of application of the force in<br>
   *      dataSource<br>
   * @param torqueIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * <br>
   * <br>
   * 
   */
  public ExternalForce(Storage dataSource, String forceIdentifier, String pointIdentifier, String torqueIdentifier) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_4(Storage.getCPtr(dataSource), dataSource, forceIdentifier, pointIdentifier, torqueIdentifier), true);
  }

  /**
   * Convenience Constructor of an ExternalForce. <br>
   * <br>
   * @param dataSource        <br>
   *      a storage containing the pertinent force data through time<br>
   * @param forceIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * @param pointIdentifier<br>
   *      string used to access the point of application of the force in<br>
   *      dataSource<br>
   * <br>
   * <br>
   * <br>
   * 
   */
  public ExternalForce(Storage dataSource, String forceIdentifier, String pointIdentifier) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_5(Storage.getCPtr(dataSource), dataSource, forceIdentifier, pointIdentifier), true);
  }

  /**
   * Convenience Constructor of an ExternalForce. <br>
   * <br>
   * @param dataSource        <br>
   *      a storage containing the pertinent force data through time<br>
   * @param forceIdentifier<br>
   *      string used to access the force data in the dataSource<br>
   * <br>
   * <br>
   * <br>
   * <br>
   * 
   */
  public ExternalForce(Storage dataSource, String forceIdentifier) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_6(Storage.getCPtr(dataSource), dataSource, forceIdentifier), true);
  }

  /**
   * Convenience Constructor of an ExternalForce. <br>
   * <br>
   * @param dataSource        <br>
   *      a storage containing the pertinent force data through time<br>
   * <br>
   * <br>
   * <br>
   * <br>
   * <br>
   * 
   */
  public ExternalForce(Storage dataSource) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_7(Storage.getCPtr(dataSource), dataSource), true);
  }

  public ExternalForce(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    this(opensimSimulationJNI.new_ExternalForce__SWIG_8(SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode)), true);
  }

  /**
   *  Associate the data source from which the force, point and/or torque data<br>
   *  is to be extracted.
   */
  public void setDataSource(Storage dataSource) {
    opensimSimulationJNI.ExternalForce_setDataSource(swigCPtr, this, Storage.getCPtr(dataSource), dataSource);
  }

  /**
   *  Get the name of the data source for the force data. *
   */
  public String getDataSourceName() {
    return opensimSimulationJNI.ExternalForce_getDataSourceName(swigCPtr, this);
  }

  /**
   *  Specify or obtain the body to which the force will be applied
   */
  public void setAppliedToBodyName(String applyToName) {
    opensimSimulationJNI.ExternalForce_setAppliedToBodyName(swigCPtr, this, applyToName);
  }

  public String getAppliedToBodyName() {
    return opensimSimulationJNI.ExternalForce_getAppliedToBodyName(swigCPtr, this);
  }

  /**
   *  Specify or obtain the body in which the point of application is expressed
   */
  public void setPointExpressedInBodyName(String pointInBodyName) {
    opensimSimulationJNI.ExternalForce_setPointExpressedInBodyName(swigCPtr, this, pointInBodyName);
  }

  public String getPointExpressedInBodyName() {
    return opensimSimulationJNI.ExternalForce_getPointExpressedInBodyName(swigCPtr, this);
  }

  /**
   *  Specify or obtain the body in which the force is expressed
   */
  public void setForceExpressedInBodyName(String forceInBodyName) {
    opensimSimulationJNI.ExternalForce_setForceExpressedInBodyName(swigCPtr, this, forceInBodyName);
  }

  public String getForceExpressedInBodyName() {
    return opensimSimulationJNI.ExternalForce_getForceExpressedInBodyName(swigCPtr, this);
  }

  /**
   * Identifiers
   */
  public void setForceIdentifier(String aForceIdentifier) {
    opensimSimulationJNI.ExternalForce_setForceIdentifier(swigCPtr, this, aForceIdentifier);
  }

  public void setPointIdentifier(String aPointIdentifier) {
    opensimSimulationJNI.ExternalForce_setPointIdentifier(swigCPtr, this, aPointIdentifier);
  }

  public void setTorqueIdentifier(String aTorqueIdentifier) {
    opensimSimulationJNI.ExternalForce_setTorqueIdentifier(swigCPtr, this, aTorqueIdentifier);
  }

  public String getForceIdentifier() {
    return opensimSimulationJNI.ExternalForce_getForceIdentifier(swigCPtr, this);
  }

  public String getPointIdentifier() {
    return opensimSimulationJNI.ExternalForce_getPointIdentifier(swigCPtr, this);
  }

  public String getTorqueIdentifier() {
    return opensimSimulationJNI.ExternalForce_getTorqueIdentifier(swigCPtr, this);
  }

  /**
   * Convenience methods to access external forces at a given time
   */
  public Vec3 getForceAtTime(double aTime) {
    return new Vec3(opensimSimulationJNI.ExternalForce_getForceAtTime(swigCPtr, this, aTime), true);
  }

  public Vec3 getPointAtTime(double aTime) {
    return new Vec3(opensimSimulationJNI.ExternalForce_getPointAtTime(swigCPtr, this, aTime), true);
  }

  public Vec3 getTorqueAtTime(double aTime) {
    return new Vec3(opensimSimulationJNI.ExternalForce_getTorqueAtTime(swigCPtr, this, aTime), true);
  }

  /**
   * Methods used for reporting.<br>
   * First identify the labels for individual components
   */
  public ArrayStr getRecordLabels() {
    return new ArrayStr(opensimSimulationJNI.ExternalForce_getRecordLabels(swigCPtr, this), true);
  }

  /**
   * Given SimTK::State object extract all the values necessary to report <br>
   * forces, application location frame, etc. used in conjunction with <br>
   * getRecordLabels and should return same size Array.
   */
  public ArrayDouble getRecordValues(State state) {
    return new ArrayDouble(opensimSimulationJNI.ExternalForce_getRecordValues(swigCPtr, this, State.getCPtr(state), state), true);
  }

  /**
   * Methods to query the force properties to find out if it's a body vs. <br>
   * point force and/or if it applies a torque. 
   */
  public boolean appliesForce() {
    return opensimSimulationJNI.ExternalForce_appliesForce(swigCPtr, this);
  }

  public boolean specifiesPoint() {
    return opensimSimulationJNI.ExternalForce_specifiesPoint(swigCPtr, this);
  }

  public boolean appliesTorque() {
    return opensimSimulationJNI.ExternalForce_appliesTorque(swigCPtr, this);
  }

}
