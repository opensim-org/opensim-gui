/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;
import javax.swing.JOptionPane;import java.awt.GraphicsEnvironment;
public class opensimActuatorsAnalysesToolsJNI {

  static {
      try{
          // All OpenSim classes required for GUI operation.
          System.loadLibrary("osimJavaJNI");
      }
      catch(UnsatisfiedLinkError e){
          String OS = System.getProperty("os.name").toLowerCase();
          String tip = "";
          if (OS.indexOf("win") >= 0) {
              tip = "\nMake sure OpenSim's bin directory is on your PATH.";
          } else if (OS.indexOf("mac") >= 0) {
              // Nothing for now; our use of RPATH means we were probably able
              // to locate the OpenSim dynamic libraries.
          } else /* linux */ {
              // Nothing for now; our use of RPATH means we were probably able
              // to locate the OpenSim dynamic libraries.
          }
          String msg = new String(
                  "Failed to load one or more dynamic libraries for OpenSim.\n"
                  + e + tip);

          String javaHome = System.getProperties().getProperty("java.home");
          boolean inMatlab = javaHome.toLowerCase().indexOf("matlab") >= 0;
          if (inMatlab) {
              msg +=  "\nSee https://simtk-confluence.stanford.edu/display/OpenSim40/Scripting+with+Matlab";
          }
          
          System.out.println(msg);
          String title = "Error: Failed to load OpenSim libraries";
          if (!GraphicsEnvironment.isHeadless()) {
              new JOptionPane(msg, JOptionPane.ERROR_MESSAGE)
                    .createDialog(null, title).setVisible(true);
          }
      }
  }

  public final static native long CoordinateActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void CoordinateActuator_assign(long jarg1, CoordinateActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String CoordinateActuator_getClassName();
  public final static native long CoordinateActuator_clone(long jarg1, CoordinateActuator jarg1_);
  public final static native String CoordinateActuator_getConcreteClassName(long jarg1, CoordinateActuator jarg1_);
  public final static native void CoordinateActuator_copyProperty_coordinate(long jarg1, CoordinateActuator jarg1_, long jarg2, CoordinateActuator jarg2_);
  public final static native String CoordinateActuator_get_coordinate__SWIG_0(long jarg1, CoordinateActuator jarg1_, int jarg2);
  public final static native long CoordinateActuator_upd_coordinate__SWIG_0(long jarg1, CoordinateActuator jarg1_, int jarg2);
  public final static native void CoordinateActuator_set_coordinate__SWIG_0(long jarg1, CoordinateActuator jarg1_, int jarg2, String jarg3);
  public final static native int CoordinateActuator_append_coordinate(long jarg1, CoordinateActuator jarg1_, String jarg2);
  public final static native void CoordinateActuator_constructProperty_coordinate__SWIG_0(long jarg1, CoordinateActuator jarg1_);
  public final static native void CoordinateActuator_constructProperty_coordinate__SWIG_1(long jarg1, CoordinateActuator jarg1_, String jarg2);
  public final static native String CoordinateActuator_get_coordinate__SWIG_1(long jarg1, CoordinateActuator jarg1_);
  public final static native long CoordinateActuator_upd_coordinate__SWIG_1(long jarg1, CoordinateActuator jarg1_);
  public final static native void CoordinateActuator_set_coordinate__SWIG_1(long jarg1, CoordinateActuator jarg1_, String jarg2);
  public final static native void CoordinateActuator_copyProperty_optimal_force(long jarg1, CoordinateActuator jarg1_, long jarg2, CoordinateActuator jarg2_);
  public final static native double CoordinateActuator_get_optimal_force__SWIG_0(long jarg1, CoordinateActuator jarg1_, int jarg2);
  public final static native long CoordinateActuator_upd_optimal_force__SWIG_0(long jarg1, CoordinateActuator jarg1_, int jarg2);
  public final static native void CoordinateActuator_set_optimal_force__SWIG_0(long jarg1, CoordinateActuator jarg1_, int jarg2, double jarg3);
  public final static native int CoordinateActuator_append_optimal_force(long jarg1, CoordinateActuator jarg1_, double jarg2);
  public final static native void CoordinateActuator_constructProperty_optimal_force(long jarg1, CoordinateActuator jarg1_, double jarg2);
  public final static native double CoordinateActuator_get_optimal_force__SWIG_1(long jarg1, CoordinateActuator jarg1_);
  public final static native long CoordinateActuator_upd_optimal_force__SWIG_1(long jarg1, CoordinateActuator jarg1_);
  public final static native void CoordinateActuator_set_optimal_force__SWIG_1(long jarg1, CoordinateActuator jarg1_, double jarg2);
  public final static native long new_CoordinateActuator__SWIG_0(String jarg1);
  public final static native long new_CoordinateActuator__SWIG_1();
  public final static native void CoordinateActuator_setOptimalForce(long jarg1, CoordinateActuator jarg1_, double jarg2);
  public final static native double CoordinateActuator_getOptimalForce(long jarg1, CoordinateActuator jarg1_);
  public final static native long CoordinateActuator_CreateForceSetOfCoordinateActuatorsForModel__SWIG_0(long jarg1, State jarg1_, long jarg2, Model jarg2_, double jarg3, boolean jarg4);
  public final static native long CoordinateActuator_CreateForceSetOfCoordinateActuatorsForModel__SWIG_1(long jarg1, State jarg1_, long jarg2, Model jarg2_, double jarg3);
  public final static native long CoordinateActuator_CreateForceSetOfCoordinateActuatorsForModel__SWIG_2(long jarg1, State jarg1_, long jarg2, Model jarg2_);
  public final static native boolean CoordinateActuator_isCoordinateValid(long jarg1, CoordinateActuator jarg1_);
  public final static native double CoordinateActuator_getSpeed(long jarg1, CoordinateActuator jarg1_, long jarg2, State jarg2_);
  public final static native void CoordinateActuator_setCoordinate(long jarg1, CoordinateActuator jarg1_, long jarg2, Coordinate jarg2_);
  public final static native long CoordinateActuator_getCoordinate(long jarg1, CoordinateActuator jarg1_);
  public final static native void delete_CoordinateActuator(long jarg1);
  public final static native long ActivationCoordinateActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ActivationCoordinateActuator_assign(long jarg1, ActivationCoordinateActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String ActivationCoordinateActuator_getClassName();
  public final static native long ActivationCoordinateActuator_clone(long jarg1, ActivationCoordinateActuator jarg1_);
  public final static native String ActivationCoordinateActuator_getConcreteClassName(long jarg1, ActivationCoordinateActuator jarg1_);
  public final static native void ActivationCoordinateActuator_copyProperty_activation_time_constant(long jarg1, ActivationCoordinateActuator jarg1_, long jarg2, ActivationCoordinateActuator jarg2_);
  public final static native double ActivationCoordinateActuator_get_activation_time_constant__SWIG_0(long jarg1, ActivationCoordinateActuator jarg1_, int jarg2);
  public final static native long ActivationCoordinateActuator_upd_activation_time_constant__SWIG_0(long jarg1, ActivationCoordinateActuator jarg1_, int jarg2);
  public final static native void ActivationCoordinateActuator_set_activation_time_constant__SWIG_0(long jarg1, ActivationCoordinateActuator jarg1_, int jarg2, double jarg3);
  public final static native int ActivationCoordinateActuator_append_activation_time_constant(long jarg1, ActivationCoordinateActuator jarg1_, double jarg2);
  public final static native void ActivationCoordinateActuator_constructProperty_activation_time_constant(long jarg1, ActivationCoordinateActuator jarg1_, double jarg2);
  public final static native double ActivationCoordinateActuator_get_activation_time_constant__SWIG_1(long jarg1, ActivationCoordinateActuator jarg1_);
  public final static native long ActivationCoordinateActuator_upd_activation_time_constant__SWIG_1(long jarg1, ActivationCoordinateActuator jarg1_);
  public final static native void ActivationCoordinateActuator_set_activation_time_constant__SWIG_1(long jarg1, ActivationCoordinateActuator jarg1_, double jarg2);
  public final static native void ActivationCoordinateActuator_copyProperty_default_activation(long jarg1, ActivationCoordinateActuator jarg1_, long jarg2, ActivationCoordinateActuator jarg2_);
  public final static native double ActivationCoordinateActuator_get_default_activation__SWIG_0(long jarg1, ActivationCoordinateActuator jarg1_, int jarg2);
  public final static native long ActivationCoordinateActuator_upd_default_activation__SWIG_0(long jarg1, ActivationCoordinateActuator jarg1_, int jarg2);
  public final static native void ActivationCoordinateActuator_set_default_activation__SWIG_0(long jarg1, ActivationCoordinateActuator jarg1_, int jarg2, double jarg3);
  public final static native int ActivationCoordinateActuator_append_default_activation(long jarg1, ActivationCoordinateActuator jarg1_, double jarg2);
  public final static native void ActivationCoordinateActuator_constructProperty_default_activation(long jarg1, ActivationCoordinateActuator jarg1_, double jarg2);
  public final static native double ActivationCoordinateActuator_get_default_activation__SWIG_1(long jarg1, ActivationCoordinateActuator jarg1_);
  public final static native long ActivationCoordinateActuator_upd_default_activation__SWIG_1(long jarg1, ActivationCoordinateActuator jarg1_);
  public final static native void ActivationCoordinateActuator_set_default_activation__SWIG_1(long jarg1, ActivationCoordinateActuator jarg1_, double jarg2);
  public final static native void ActivationCoordinateActuator__has_output_statebounds_activation_set(long jarg1, ActivationCoordinateActuator jarg1_, boolean jarg2);
  public final static native boolean ActivationCoordinateActuator__has_output_statebounds_activation_get(long jarg1, ActivationCoordinateActuator jarg1_);
  public final static native long new_ActivationCoordinateActuator__SWIG_0();
  public final static native long new_ActivationCoordinateActuator__SWIG_1(String jarg1);
  public final static native long ActivationCoordinateActuator_getBoundsActivation(long jarg1, ActivationCoordinateActuator jarg1_, long jarg2, State jarg2_);
  public final static native void delete_ActivationCoordinateActuator(long jarg1);
  public final static native long PointActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void PointActuator_assign(long jarg1, PointActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String PointActuator_getClassName();
  public final static native long PointActuator_clone(long jarg1, PointActuator jarg1_);
  public final static native String PointActuator_getConcreteClassName(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_copyProperty_body(long jarg1, PointActuator jarg1_, long jarg2, PointActuator jarg2_);
  public final static native String PointActuator_get_body__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native long PointActuator_upd_body__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native void PointActuator_set_body__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2, String jarg3);
  public final static native int PointActuator_append_body(long jarg1, PointActuator jarg1_, String jarg2);
  public final static native void PointActuator_constructProperty_body__SWIG_0(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_constructProperty_body__SWIG_1(long jarg1, PointActuator jarg1_, String jarg2);
  public final static native String PointActuator_get_body__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native long PointActuator_upd_body__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_set_body__SWIG_1(long jarg1, PointActuator jarg1_, String jarg2);
  public final static native void PointActuator_copyProperty_point(long jarg1, PointActuator jarg1_, long jarg2, PointActuator jarg2_);
  public final static native long PointActuator_get_point__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native long PointActuator_upd_point__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native void PointActuator_set_point__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native int PointActuator_append_point(long jarg1, PointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointActuator_constructProperty_point(long jarg1, PointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long PointActuator_get_point__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native long PointActuator_upd_point__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_set_point__SWIG_1(long jarg1, PointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointActuator_copyProperty_point_is_global(long jarg1, PointActuator jarg1_, long jarg2, PointActuator jarg2_);
  public final static native boolean PointActuator_get_point_is_global__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native long PointActuator_upd_point_is_global__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native void PointActuator_set_point_is_global__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2, boolean jarg3);
  public final static native int PointActuator_append_point_is_global(long jarg1, PointActuator jarg1_, boolean jarg2);
  public final static native void PointActuator_constructProperty_point_is_global(long jarg1, PointActuator jarg1_, boolean jarg2);
  public final static native boolean PointActuator_get_point_is_global__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native long PointActuator_upd_point_is_global__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_set_point_is_global__SWIG_1(long jarg1, PointActuator jarg1_, boolean jarg2);
  public final static native void PointActuator_copyProperty_direction(long jarg1, PointActuator jarg1_, long jarg2, PointActuator jarg2_);
  public final static native long PointActuator_get_direction__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native long PointActuator_upd_direction__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native void PointActuator_set_direction__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native int PointActuator_append_direction(long jarg1, PointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointActuator_constructProperty_direction(long jarg1, PointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long PointActuator_get_direction__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native long PointActuator_upd_direction__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_set_direction__SWIG_1(long jarg1, PointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointActuator_copyProperty_force_is_global(long jarg1, PointActuator jarg1_, long jarg2, PointActuator jarg2_);
  public final static native boolean PointActuator_get_force_is_global__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native long PointActuator_upd_force_is_global__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native void PointActuator_set_force_is_global__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2, boolean jarg3);
  public final static native int PointActuator_append_force_is_global(long jarg1, PointActuator jarg1_, boolean jarg2);
  public final static native void PointActuator_constructProperty_force_is_global(long jarg1, PointActuator jarg1_, boolean jarg2);
  public final static native boolean PointActuator_get_force_is_global__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native long PointActuator_upd_force_is_global__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_set_force_is_global__SWIG_1(long jarg1, PointActuator jarg1_, boolean jarg2);
  public final static native void PointActuator_copyProperty_optimal_force(long jarg1, PointActuator jarg1_, long jarg2, PointActuator jarg2_);
  public final static native double PointActuator_get_optimal_force__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native long PointActuator_upd_optimal_force__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2);
  public final static native void PointActuator_set_optimal_force__SWIG_0(long jarg1, PointActuator jarg1_, int jarg2, double jarg3);
  public final static native int PointActuator_append_optimal_force(long jarg1, PointActuator jarg1_, double jarg2);
  public final static native void PointActuator_constructProperty_optimal_force(long jarg1, PointActuator jarg1_, double jarg2);
  public final static native double PointActuator_get_optimal_force__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native long PointActuator_upd_optimal_force__SWIG_1(long jarg1, PointActuator jarg1_);
  public final static native void PointActuator_set_optimal_force__SWIG_1(long jarg1, PointActuator jarg1_, double jarg2);
  public final static native long new_PointActuator__SWIG_0(String jarg1);
  public final static native long new_PointActuator__SWIG_1();
  public final static native void PointActuator_setOptimalForce(long jarg1, PointActuator jarg1_, double jarg2);
  public final static native double PointActuator_getOptimalForce(long jarg1, PointActuator jarg1_);
  public final static native void delete_PointActuator(long jarg1);
  public final static native long TorqueActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void TorqueActuator_assign(long jarg1, TorqueActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String TorqueActuator_getClassName();
  public final static native long TorqueActuator_clone(long jarg1, TorqueActuator jarg1_);
  public final static native String TorqueActuator_getConcreteClassName(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_copyProperty_bodyA(long jarg1, TorqueActuator jarg1_, long jarg2, TorqueActuator jarg2_);
  public final static native String TorqueActuator_get_bodyA__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native long TorqueActuator_upd_bodyA__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native void TorqueActuator_set_bodyA__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2, String jarg3);
  public final static native int TorqueActuator_append_bodyA(long jarg1, TorqueActuator jarg1_, String jarg2);
  public final static native void TorqueActuator_constructProperty_bodyA__SWIG_0(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_constructProperty_bodyA__SWIG_1(long jarg1, TorqueActuator jarg1_, String jarg2);
  public final static native String TorqueActuator_get_bodyA__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native long TorqueActuator_upd_bodyA__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_set_bodyA__SWIG_1(long jarg1, TorqueActuator jarg1_, String jarg2);
  public final static native void TorqueActuator_copyProperty_bodyB(long jarg1, TorqueActuator jarg1_, long jarg2, TorqueActuator jarg2_);
  public final static native String TorqueActuator_get_bodyB__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native long TorqueActuator_upd_bodyB__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native void TorqueActuator_set_bodyB__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2, String jarg3);
  public final static native int TorqueActuator_append_bodyB(long jarg1, TorqueActuator jarg1_, String jarg2);
  public final static native void TorqueActuator_constructProperty_bodyB__SWIG_0(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_constructProperty_bodyB__SWIG_1(long jarg1, TorqueActuator jarg1_, String jarg2);
  public final static native String TorqueActuator_get_bodyB__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native long TorqueActuator_upd_bodyB__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_set_bodyB__SWIG_1(long jarg1, TorqueActuator jarg1_, String jarg2);
  public final static native void TorqueActuator_copyProperty_torque_is_global(long jarg1, TorqueActuator jarg1_, long jarg2, TorqueActuator jarg2_);
  public final static native boolean TorqueActuator_get_torque_is_global__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native long TorqueActuator_upd_torque_is_global__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native void TorqueActuator_set_torque_is_global__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2, boolean jarg3);
  public final static native int TorqueActuator_append_torque_is_global(long jarg1, TorqueActuator jarg1_, boolean jarg2);
  public final static native void TorqueActuator_constructProperty_torque_is_global(long jarg1, TorqueActuator jarg1_, boolean jarg2);
  public final static native boolean TorqueActuator_get_torque_is_global__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native long TorqueActuator_upd_torque_is_global__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_set_torque_is_global__SWIG_1(long jarg1, TorqueActuator jarg1_, boolean jarg2);
  public final static native void TorqueActuator_copyProperty_axis(long jarg1, TorqueActuator jarg1_, long jarg2, TorqueActuator jarg2_);
  public final static native long TorqueActuator_get_axis__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native long TorqueActuator_upd_axis__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native void TorqueActuator_set_axis__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native int TorqueActuator_append_axis(long jarg1, TorqueActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void TorqueActuator_constructProperty_axis(long jarg1, TorqueActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long TorqueActuator_get_axis__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native long TorqueActuator_upd_axis__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_set_axis__SWIG_1(long jarg1, TorqueActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void TorqueActuator_copyProperty_optimal_force(long jarg1, TorqueActuator jarg1_, long jarg2, TorqueActuator jarg2_);
  public final static native double TorqueActuator_get_optimal_force__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native long TorqueActuator_upd_optimal_force__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2);
  public final static native void TorqueActuator_set_optimal_force__SWIG_0(long jarg1, TorqueActuator jarg1_, int jarg2, double jarg3);
  public final static native int TorqueActuator_append_optimal_force(long jarg1, TorqueActuator jarg1_, double jarg2);
  public final static native void TorqueActuator_constructProperty_optimal_force(long jarg1, TorqueActuator jarg1_, double jarg2);
  public final static native double TorqueActuator_get_optimal_force__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native long TorqueActuator_upd_optimal_force__SWIG_1(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_set_optimal_force__SWIG_1(long jarg1, TorqueActuator jarg1_, double jarg2);
  public final static native long new_TorqueActuator__SWIG_0();
  public final static native long new_TorqueActuator__SWIG_1(long jarg1, PhysicalFrame jarg1_, long jarg2, PhysicalFrame jarg2_, long jarg3, Vec3 jarg3_, boolean jarg4);
  public final static native long new_TorqueActuator__SWIG_2(long jarg1, PhysicalFrame jarg1_, long jarg2, PhysicalFrame jarg2_, long jarg3, Vec3 jarg3_);
  public final static native void TorqueActuator_setAxis(long jarg1, TorqueActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long TorqueActuator_getAxis(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_setTorqueIsGlobal(long jarg1, TorqueActuator jarg1_, boolean jarg2);
  public final static native boolean TorqueActuator_getTorqueIsGlobal(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_setOptimalForce(long jarg1, TorqueActuator jarg1_, double jarg2);
  public final static native double TorqueActuator_getOptimalForce(long jarg1, TorqueActuator jarg1_);
  public final static native void TorqueActuator_setBodyA(long jarg1, TorqueActuator jarg1_, long jarg2, PhysicalFrame jarg2_);
  public final static native void TorqueActuator_setBodyB(long jarg1, TorqueActuator jarg1_, long jarg2, PhysicalFrame jarg2_);
  public final static native long TorqueActuator_getBodyA(long jarg1, TorqueActuator jarg1_);
  public final static native long TorqueActuator_getBodyB(long jarg1, TorqueActuator jarg1_);
  public final static native void delete_TorqueActuator(long jarg1);
  public final static native long BodyActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void BodyActuator_assign(long jarg1, BodyActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String BodyActuator_getClassName();
  public final static native long BodyActuator_clone(long jarg1, BodyActuator jarg1_);
  public final static native String BodyActuator_getConcreteClassName(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_copyProperty_point(long jarg1, BodyActuator jarg1_, long jarg2, BodyActuator jarg2_);
  public final static native long BodyActuator_get_point__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2);
  public final static native long BodyActuator_upd_point__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2);
  public final static native void BodyActuator_set_point__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native int BodyActuator_append_point(long jarg1, BodyActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void BodyActuator_constructProperty_point(long jarg1, BodyActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long BodyActuator_get_point__SWIG_1(long jarg1, BodyActuator jarg1_);
  public final static native long BodyActuator_upd_point__SWIG_1(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_set_point__SWIG_1(long jarg1, BodyActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void BodyActuator_copyProperty_point_is_global(long jarg1, BodyActuator jarg1_, long jarg2, BodyActuator jarg2_);
  public final static native boolean BodyActuator_get_point_is_global__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2);
  public final static native long BodyActuator_upd_point_is_global__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2);
  public final static native void BodyActuator_set_point_is_global__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2, boolean jarg3);
  public final static native int BodyActuator_append_point_is_global(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native void BodyActuator_constructProperty_point_is_global(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native boolean BodyActuator_get_point_is_global__SWIG_1(long jarg1, BodyActuator jarg1_);
  public final static native long BodyActuator_upd_point_is_global__SWIG_1(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_set_point_is_global__SWIG_1(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native void BodyActuator_copyProperty_spatial_force_is_global(long jarg1, BodyActuator jarg1_, long jarg2, BodyActuator jarg2_);
  public final static native boolean BodyActuator_get_spatial_force_is_global__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2);
  public final static native long BodyActuator_upd_spatial_force_is_global__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2);
  public final static native void BodyActuator_set_spatial_force_is_global__SWIG_0(long jarg1, BodyActuator jarg1_, int jarg2, boolean jarg3);
  public final static native int BodyActuator_append_spatial_force_is_global(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native void BodyActuator_constructProperty_spatial_force_is_global(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native boolean BodyActuator_get_spatial_force_is_global__SWIG_1(long jarg1, BodyActuator jarg1_);
  public final static native long BodyActuator_upd_spatial_force_is_global__SWIG_1(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_set_spatial_force_is_global__SWIG_1(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native void BodyActuator_PropertyIndex_socket_body_set(long jarg1, BodyActuator jarg1_, long jarg2);
  public final static native long BodyActuator_PropertyIndex_socket_body_get(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_connectSocket_body(long jarg1, BodyActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native long new_BodyActuator__SWIG_0();
  public final static native long new_BodyActuator__SWIG_1(long jarg1, Body jarg1_, long jarg2, Vec3 jarg2_, boolean jarg3, boolean jarg4);
  public final static native long new_BodyActuator__SWIG_2(long jarg1, Body jarg1_, long jarg2, Vec3 jarg2_, boolean jarg3);
  public final static native long new_BodyActuator__SWIG_3(long jarg1, Body jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long new_BodyActuator__SWIG_4(long jarg1, Body jarg1_);
  public final static native void BodyActuator_setPoint(long jarg1, BodyActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long BodyActuator_getPoint(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_setPointForceIsGlobal(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native boolean BodyActuator_getPointIsGlobal(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_setSpatialForceIsGlobal(long jarg1, BodyActuator jarg1_, boolean jarg2);
  public final static native boolean BodyActuator_getSpatialForceIsGlobal(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_setBody(long jarg1, BodyActuator jarg1_, long jarg2, Body jarg2_);
  public final static native long BodyActuator_getBody(long jarg1, BodyActuator jarg1_);
  public final static native void BodyActuator_setBodyName(long jarg1, BodyActuator jarg1_, String jarg2);
  public final static native String BodyActuator_getBodyName(long jarg1, BodyActuator jarg1_);
  public final static native void delete_BodyActuator(long jarg1);
  public final static native long PointToPointActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void PointToPointActuator_assign(long jarg1, PointToPointActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String PointToPointActuator_getClassName();
  public final static native long PointToPointActuator_clone(long jarg1, PointToPointActuator jarg1_);
  public final static native String PointToPointActuator_getConcreteClassName(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_copyProperty_bodyA(long jarg1, PointToPointActuator jarg1_, long jarg2, PointToPointActuator jarg2_);
  public final static native String PointToPointActuator_get_bodyA__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native long PointToPointActuator_upd_bodyA__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native void PointToPointActuator_set_bodyA__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2, String jarg3);
  public final static native int PointToPointActuator_append_bodyA(long jarg1, PointToPointActuator jarg1_, String jarg2);
  public final static native void PointToPointActuator_constructProperty_bodyA__SWIG_0(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_constructProperty_bodyA__SWIG_1(long jarg1, PointToPointActuator jarg1_, String jarg2);
  public final static native String PointToPointActuator_get_bodyA__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native long PointToPointActuator_upd_bodyA__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_set_bodyA__SWIG_1(long jarg1, PointToPointActuator jarg1_, String jarg2);
  public final static native void PointToPointActuator_copyProperty_bodyB(long jarg1, PointToPointActuator jarg1_, long jarg2, PointToPointActuator jarg2_);
  public final static native String PointToPointActuator_get_bodyB__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native long PointToPointActuator_upd_bodyB__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native void PointToPointActuator_set_bodyB__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2, String jarg3);
  public final static native int PointToPointActuator_append_bodyB(long jarg1, PointToPointActuator jarg1_, String jarg2);
  public final static native void PointToPointActuator_constructProperty_bodyB__SWIG_0(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_constructProperty_bodyB__SWIG_1(long jarg1, PointToPointActuator jarg1_, String jarg2);
  public final static native String PointToPointActuator_get_bodyB__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native long PointToPointActuator_upd_bodyB__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_set_bodyB__SWIG_1(long jarg1, PointToPointActuator jarg1_, String jarg2);
  public final static native void PointToPointActuator_copyProperty_points_are_global(long jarg1, PointToPointActuator jarg1_, long jarg2, PointToPointActuator jarg2_);
  public final static native boolean PointToPointActuator_get_points_are_global__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native long PointToPointActuator_upd_points_are_global__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native void PointToPointActuator_set_points_are_global__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2, boolean jarg3);
  public final static native int PointToPointActuator_append_points_are_global(long jarg1, PointToPointActuator jarg1_, boolean jarg2);
  public final static native void PointToPointActuator_constructProperty_points_are_global(long jarg1, PointToPointActuator jarg1_, boolean jarg2);
  public final static native boolean PointToPointActuator_get_points_are_global__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native long PointToPointActuator_upd_points_are_global__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_set_points_are_global__SWIG_1(long jarg1, PointToPointActuator jarg1_, boolean jarg2);
  public final static native void PointToPointActuator_copyProperty_pointA(long jarg1, PointToPointActuator jarg1_, long jarg2, PointToPointActuator jarg2_);
  public final static native long PointToPointActuator_get_pointA__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native long PointToPointActuator_upd_pointA__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native void PointToPointActuator_set_pointA__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native int PointToPointActuator_append_pointA(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointToPointActuator_constructProperty_pointA(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long PointToPointActuator_get_pointA__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native long PointToPointActuator_upd_pointA__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_set_pointA__SWIG_1(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointToPointActuator_copyProperty_pointB(long jarg1, PointToPointActuator jarg1_, long jarg2, PointToPointActuator jarg2_);
  public final static native long PointToPointActuator_get_pointB__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native long PointToPointActuator_upd_pointB__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native void PointToPointActuator_set_pointB__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native int PointToPointActuator_append_pointB(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointToPointActuator_constructProperty_pointB(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long PointToPointActuator_get_pointB__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native long PointToPointActuator_upd_pointB__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_set_pointB__SWIG_1(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointToPointActuator_copyProperty_optimal_force(long jarg1, PointToPointActuator jarg1_, long jarg2, PointToPointActuator jarg2_);
  public final static native double PointToPointActuator_get_optimal_force__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native long PointToPointActuator_upd_optimal_force__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2);
  public final static native void PointToPointActuator_set_optimal_force__SWIG_0(long jarg1, PointToPointActuator jarg1_, int jarg2, double jarg3);
  public final static native int PointToPointActuator_append_optimal_force(long jarg1, PointToPointActuator jarg1_, double jarg2);
  public final static native void PointToPointActuator_constructProperty_optimal_force(long jarg1, PointToPointActuator jarg1_, double jarg2);
  public final static native double PointToPointActuator_get_optimal_force__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native long PointToPointActuator_upd_optimal_force__SWIG_1(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_set_optimal_force__SWIG_1(long jarg1, PointToPointActuator jarg1_, double jarg2);
  public final static native long new_PointToPointActuator__SWIG_0();
  public final static native long new_PointToPointActuator__SWIG_1(String jarg1, String jarg2);
  public final static native void PointToPointActuator_setPointA(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long PointToPointActuator_getPointA(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_setPointB(long jarg1, PointToPointActuator jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long PointToPointActuator_getPointB(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_setPointsAreGlobal(long jarg1, PointToPointActuator jarg1_, boolean jarg2);
  public final static native boolean PointToPointActuator_getPointsAreGlobal(long jarg1, PointToPointActuator jarg1_);
  public final static native void PointToPointActuator_setOptimalForce(long jarg1, PointToPointActuator jarg1_, double jarg2);
  public final static native double PointToPointActuator_getOptimalForce(long jarg1, PointToPointActuator jarg1_);
  public final static native void delete_PointToPointActuator(long jarg1);
  public final static native long ClutchedPathSpring_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ClutchedPathSpring_assign(long jarg1, ClutchedPathSpring jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String ClutchedPathSpring_getClassName();
  public final static native long ClutchedPathSpring_clone(long jarg1, ClutchedPathSpring jarg1_);
  public final static native String ClutchedPathSpring_getConcreteClassName(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_copyProperty_stiffness(long jarg1, ClutchedPathSpring jarg1_, long jarg2, ClutchedPathSpring jarg2_);
  public final static native double ClutchedPathSpring_get_stiffness__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native long ClutchedPathSpring_upd_stiffness__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native void ClutchedPathSpring_set_stiffness__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2, double jarg3);
  public final static native int ClutchedPathSpring_append_stiffness(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native void ClutchedPathSpring_constructProperty_stiffness(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native double ClutchedPathSpring_get_stiffness__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native long ClutchedPathSpring_upd_stiffness__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_set_stiffness__SWIG_1(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native void ClutchedPathSpring_copyProperty_dissipation(long jarg1, ClutchedPathSpring jarg1_, long jarg2, ClutchedPathSpring jarg2_);
  public final static native double ClutchedPathSpring_get_dissipation__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native long ClutchedPathSpring_upd_dissipation__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native void ClutchedPathSpring_set_dissipation__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2, double jarg3);
  public final static native int ClutchedPathSpring_append_dissipation(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native void ClutchedPathSpring_constructProperty_dissipation(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native double ClutchedPathSpring_get_dissipation__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native long ClutchedPathSpring_upd_dissipation__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_set_dissipation__SWIG_1(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native void ClutchedPathSpring_copyProperty_relaxation_time_constant(long jarg1, ClutchedPathSpring jarg1_, long jarg2, ClutchedPathSpring jarg2_);
  public final static native double ClutchedPathSpring_get_relaxation_time_constant__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native long ClutchedPathSpring_upd_relaxation_time_constant__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native void ClutchedPathSpring_set_relaxation_time_constant__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2, double jarg3);
  public final static native int ClutchedPathSpring_append_relaxation_time_constant(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native void ClutchedPathSpring_constructProperty_relaxation_time_constant(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native double ClutchedPathSpring_get_relaxation_time_constant__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native long ClutchedPathSpring_upd_relaxation_time_constant__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_set_relaxation_time_constant__SWIG_1(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native void ClutchedPathSpring_copyProperty_initial_stretch(long jarg1, ClutchedPathSpring jarg1_, long jarg2, ClutchedPathSpring jarg2_);
  public final static native double ClutchedPathSpring_get_initial_stretch__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native long ClutchedPathSpring_upd_initial_stretch__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2);
  public final static native void ClutchedPathSpring_set_initial_stretch__SWIG_0(long jarg1, ClutchedPathSpring jarg1_, int jarg2, double jarg3);
  public final static native int ClutchedPathSpring_append_initial_stretch(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native void ClutchedPathSpring_constructProperty_initial_stretch(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native double ClutchedPathSpring_get_initial_stretch__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native long ClutchedPathSpring_upd_initial_stretch__SWIG_1(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_set_initial_stretch__SWIG_1(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native long new_ClutchedPathSpring__SWIG_0();
  public final static native long new_ClutchedPathSpring__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_ClutchedPathSpring__SWIG_2(String jarg1, double jarg2, double jarg3, double jarg4);
  public final static native double ClutchedPathSpring_getStiffness(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_setStiffness(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native double ClutchedPathSpring_getDissipation(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_setDissipation(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native double ClutchedPathSpring_getInitialStretch(long jarg1, ClutchedPathSpring jarg1_);
  public final static native void ClutchedPathSpring_setInitialStretch(long jarg1, ClutchedPathSpring jarg1_, double jarg2);
  public final static native double ClutchedPathSpring_getStretch(long jarg1, ClutchedPathSpring jarg1_, long jarg2, State jarg2_);
  public final static native double ClutchedPathSpring_getTension(long jarg1, ClutchedPathSpring jarg1_, long jarg2, State jarg2_);
  public final static native void delete_ClutchedPathSpring(long jarg1);
  public final static native long SpringGeneralizedForce_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void SpringGeneralizedForce_assign(long jarg1, SpringGeneralizedForce jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String SpringGeneralizedForce_getClassName();
  public final static native long SpringGeneralizedForce_clone(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native String SpringGeneralizedForce_getConcreteClassName(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_copyProperty_coordinate(long jarg1, SpringGeneralizedForce jarg1_, long jarg2, SpringGeneralizedForce jarg2_);
  public final static native String SpringGeneralizedForce_get_coordinate__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native long SpringGeneralizedForce_upd_coordinate__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native void SpringGeneralizedForce_set_coordinate__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2, String jarg3);
  public final static native int SpringGeneralizedForce_append_coordinate(long jarg1, SpringGeneralizedForce jarg1_, String jarg2);
  public final static native void SpringGeneralizedForce_constructProperty_coordinate__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_constructProperty_coordinate__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_, String jarg2);
  public final static native String SpringGeneralizedForce_get_coordinate__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native long SpringGeneralizedForce_upd_coordinate__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_set_coordinate__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_, String jarg2);
  public final static native void SpringGeneralizedForce_copyProperty_stiffness(long jarg1, SpringGeneralizedForce jarg1_, long jarg2, SpringGeneralizedForce jarg2_);
  public final static native double SpringGeneralizedForce_get_stiffness__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native long SpringGeneralizedForce_upd_stiffness__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native void SpringGeneralizedForce_set_stiffness__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2, double jarg3);
  public final static native int SpringGeneralizedForce_append_stiffness(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native void SpringGeneralizedForce_constructProperty_stiffness(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native double SpringGeneralizedForce_get_stiffness__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native long SpringGeneralizedForce_upd_stiffness__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_set_stiffness__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native void SpringGeneralizedForce_copyProperty_rest_length(long jarg1, SpringGeneralizedForce jarg1_, long jarg2, SpringGeneralizedForce jarg2_);
  public final static native double SpringGeneralizedForce_get_rest_length__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native long SpringGeneralizedForce_upd_rest_length__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native void SpringGeneralizedForce_set_rest_length__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2, double jarg3);
  public final static native int SpringGeneralizedForce_append_rest_length(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native void SpringGeneralizedForce_constructProperty_rest_length(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native double SpringGeneralizedForce_get_rest_length__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native long SpringGeneralizedForce_upd_rest_length__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_set_rest_length__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native void SpringGeneralizedForce_copyProperty_viscosity(long jarg1, SpringGeneralizedForce jarg1_, long jarg2, SpringGeneralizedForce jarg2_);
  public final static native double SpringGeneralizedForce_get_viscosity__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native long SpringGeneralizedForce_upd_viscosity__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2);
  public final static native void SpringGeneralizedForce_set_viscosity__SWIG_0(long jarg1, SpringGeneralizedForce jarg1_, int jarg2, double jarg3);
  public final static native int SpringGeneralizedForce_append_viscosity(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native void SpringGeneralizedForce_constructProperty_viscosity(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native double SpringGeneralizedForce_get_viscosity__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native long SpringGeneralizedForce_upd_viscosity__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_set_viscosity__SWIG_1(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native long new_SpringGeneralizedForce__SWIG_0(String jarg1);
  public final static native long new_SpringGeneralizedForce__SWIG_1();
  public final static native void SpringGeneralizedForce_setStiffness(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native double SpringGeneralizedForce_getStiffness(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_setRestLength(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native double SpringGeneralizedForce_getRestLength(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native void SpringGeneralizedForce_setViscosity(long jarg1, SpringGeneralizedForce jarg1_, double jarg2);
  public final static native double SpringGeneralizedForce_getViscosity(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native long SpringGeneralizedForce_getRecordLabels(long jarg1, SpringGeneralizedForce jarg1_);
  public final static native long SpringGeneralizedForce_getRecordValues(long jarg1, SpringGeneralizedForce jarg1_, long jarg2, State jarg2_);
  public final static native void delete_SpringGeneralizedForce(long jarg1);
  public final static native long RigidTendonMuscle_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void RigidTendonMuscle_assign(long jarg1, RigidTendonMuscle jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String RigidTendonMuscle_getClassName();
  public final static native long RigidTendonMuscle_clone(long jarg1, RigidTendonMuscle jarg1_);
  public final static native String RigidTendonMuscle_getConcreteClassName(long jarg1, RigidTendonMuscle jarg1_);
  public final static native void RigidTendonMuscle_copyProperty_active_force_length_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, RigidTendonMuscle jarg2_);
  public final static native long RigidTendonMuscle_get_active_force_length_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2);
  public final static native long RigidTendonMuscle_upd_active_force_length_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2);
  public final static native void RigidTendonMuscle_set_active_force_length_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2, long jarg3, Function jarg3_);
  public final static native int RigidTendonMuscle_append_active_force_length_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native void RigidTendonMuscle_constructProperty_active_force_length_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native long RigidTendonMuscle_get_active_force_length_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_);
  public final static native long RigidTendonMuscle_upd_active_force_length_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_);
  public final static native void RigidTendonMuscle_set_active_force_length_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native void RigidTendonMuscle_copyProperty_passive_force_length_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, RigidTendonMuscle jarg2_);
  public final static native long RigidTendonMuscle_get_passive_force_length_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2);
  public final static native long RigidTendonMuscle_upd_passive_force_length_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2);
  public final static native void RigidTendonMuscle_set_passive_force_length_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2, long jarg3, Function jarg3_);
  public final static native int RigidTendonMuscle_append_passive_force_length_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native void RigidTendonMuscle_constructProperty_passive_force_length_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native long RigidTendonMuscle_get_passive_force_length_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_);
  public final static native long RigidTendonMuscle_upd_passive_force_length_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_);
  public final static native void RigidTendonMuscle_set_passive_force_length_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native void RigidTendonMuscle_copyProperty_force_velocity_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, RigidTendonMuscle jarg2_);
  public final static native long RigidTendonMuscle_get_force_velocity_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2);
  public final static native long RigidTendonMuscle_upd_force_velocity_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2);
  public final static native void RigidTendonMuscle_set_force_velocity_curve__SWIG_0(long jarg1, RigidTendonMuscle jarg1_, int jarg2, long jarg3, Function jarg3_);
  public final static native int RigidTendonMuscle_append_force_velocity_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native void RigidTendonMuscle_constructProperty_force_velocity_curve(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native long RigidTendonMuscle_get_force_velocity_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_);
  public final static native long RigidTendonMuscle_upd_force_velocity_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_);
  public final static native void RigidTendonMuscle_set_force_velocity_curve__SWIG_1(long jarg1, RigidTendonMuscle jarg1_, long jarg2, Function jarg2_);
  public final static native long new_RigidTendonMuscle__SWIG_0();
  public final static native long new_RigidTendonMuscle__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void RigidTendonMuscle_setActivation(long jarg1, RigidTendonMuscle jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void delete_RigidTendonMuscle(long jarg1);
  public final static native long Millard2012AccelerationMuscle_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Millard2012AccelerationMuscle_assign(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String Millard2012AccelerationMuscle_getClassName();
  public final static native long Millard2012AccelerationMuscle_clone(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native String Millard2012AccelerationMuscle_getConcreteClassName(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_default_activation(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_default_activation__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_default_activation__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_default_activation__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_default_activation(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_default_activation(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_default_activation__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_default_activation__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_default_activation__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_default_fiber_length(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_default_fiber_length__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_default_fiber_length__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_default_fiber_length__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_default_fiber_length(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_default_fiber_length(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_default_fiber_length__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_default_fiber_length__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_default_fiber_length__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_default_fiber_velocity(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_default_fiber_velocity__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_default_fiber_velocity__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_default_fiber_velocity__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_default_fiber_velocity(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_default_fiber_velocity(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_default_fiber_velocity__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_default_fiber_velocity__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_default_fiber_velocity__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_MuscleFirstOrderActivationDynamicModel(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_MuscleFirstOrderActivationDynamicModel__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_MuscleFirstOrderActivationDynamicModel__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_MuscleFirstOrderActivationDynamicModel__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, long jarg3, MuscleFirstOrderActivationDynamicModel jarg3_);
  public final static native int Millard2012AccelerationMuscle_append_MuscleFirstOrderActivationDynamicModel(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, MuscleFirstOrderActivationDynamicModel jarg2_);
  public final static native void Millard2012AccelerationMuscle_constructProperty_MuscleFirstOrderActivationDynamicModel(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, MuscleFirstOrderActivationDynamicModel jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_MuscleFirstOrderActivationDynamicModel__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_MuscleFirstOrderActivationDynamicModel__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_MuscleFirstOrderActivationDynamicModel__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, MuscleFirstOrderActivationDynamicModel jarg2_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_ActiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_ActiveForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_ActiveForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_ActiveForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, long jarg3, ActiveForceLengthCurve jarg3_);
  public final static native int Millard2012AccelerationMuscle_append_ActiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ActiveForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_constructProperty_ActiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ActiveForceLengthCurve jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_ActiveForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_ActiveForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_ActiveForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ActiveForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_ForceVelocityCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_ForceVelocityCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_ForceVelocityCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_ForceVelocityCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, long jarg3, ForceVelocityCurve jarg3_);
  public final static native int Millard2012AccelerationMuscle_append_ForceVelocityCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ForceVelocityCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_constructProperty_ForceVelocityCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ForceVelocityCurve jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_ForceVelocityCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_ForceVelocityCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_ForceVelocityCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ForceVelocityCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_FiberForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_FiberForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_FiberForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_FiberForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, long jarg3, FiberForceLengthCurve jarg3_);
  public final static native int Millard2012AccelerationMuscle_append_FiberForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_constructProperty_FiberForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberForceLengthCurve jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_FiberForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_FiberForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_FiberForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_TendonForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_TendonForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_TendonForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_TendonForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, long jarg3, TendonForceLengthCurve jarg3_);
  public final static native int Millard2012AccelerationMuscle_append_TendonForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, TendonForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_constructProperty_TendonForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, TendonForceLengthCurve jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_TendonForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_TendonForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_TendonForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, TendonForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_FiberCompressiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_FiberCompressiveForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_FiberCompressiveForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_FiberCompressiveForceLengthCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, long jarg3, FiberCompressiveForceLengthCurve jarg3_);
  public final static native int Millard2012AccelerationMuscle_append_FiberCompressiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_constructProperty_FiberCompressiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceLengthCurve jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_FiberCompressiveForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_FiberCompressiveForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_FiberCompressiveForceLengthCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_FiberCompressiveForceCosPennationCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_FiberCompressiveForceCosPennationCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_FiberCompressiveForceCosPennationCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_FiberCompressiveForceCosPennationCurve__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, long jarg3, FiberCompressiveForceCosPennationCurve jarg3_);
  public final static native int Millard2012AccelerationMuscle_append_FiberCompressiveForceCosPennationCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceCosPennationCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_constructProperty_FiberCompressiveForceCosPennationCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceCosPennationCurve jarg2_);
  public final static native long Millard2012AccelerationMuscle_get_FiberCompressiveForceCosPennationCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_FiberCompressiveForceCosPennationCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_FiberCompressiveForceCosPennationCurve__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceCosPennationCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_copyProperty_fiber_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_fiber_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_fiber_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_fiber_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_fiber_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_fiber_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_fiber_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_fiber_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_fiber_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_fiber_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_fiber_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_fiber_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_fiber_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_fiber_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_fiber_compressive_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_fiber_compressive_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_compressive_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_fiber_compressive_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_fiber_compressive_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_fiber_compressive_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_fiber_compressive_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_compressive_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_fiber_compressive_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_fiber_compressive_force_cos_pennation_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_fiber_compressive_force_cos_pennation_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_compressive_force_cos_pennation_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_fiber_compressive_force_cos_pennation_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_fiber_compressive_force_cos_pennation_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_fiber_compressive_force_cos_pennation_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_fiber_compressive_force_cos_pennation_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_fiber_compressive_force_cos_pennation_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_fiber_compressive_force_cos_pennation_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_tendon_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_tendon_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_tendon_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_tendon_force_length_damping__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_tendon_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_tendon_force_length_damping(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_tendon_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_tendon_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_tendon_force_length_damping__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_copyProperty_mass(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, Millard2012AccelerationMuscle jarg2_);
  public final static native double Millard2012AccelerationMuscle_get_mass__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native long Millard2012AccelerationMuscle_upd_mass__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2);
  public final static native void Millard2012AccelerationMuscle_set_mass__SWIG_0(long jarg1, Millard2012AccelerationMuscle jarg1_, int jarg2, double jarg3);
  public final static native int Millard2012AccelerationMuscle_append_mass(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_constructProperty_mass(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_get_mass__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_upd_mass__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native void Millard2012AccelerationMuscle_set_mass__SWIG_1(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native long new_Millard2012AccelerationMuscle__SWIG_0();
  public final static native long new_Millard2012AccelerationMuscle__SWIG_1(String jarg1, double jarg2, double jarg3, double jarg4, double jarg5);
  public final static native double Millard2012AccelerationMuscle_getFiberCompressiveForceLengthMultiplier(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native double Millard2012AccelerationMuscle_getFiberCompressiveForceCosPennationMultiplier(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native double Millard2012AccelerationMuscle_getTendonForceMultiplier(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native double Millard2012AccelerationMuscle_getMass(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getActivationModel(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getPennationModel(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getActiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getForceVelocityCurve(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getFiberForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getTendonForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getFiberCompressiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native long Millard2012AccelerationMuscle_getFiberCompressiveForceCosPennationCurve(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native double Millard2012AccelerationMuscle_getFiberStiffnessAlongTendon(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native void Millard2012AccelerationMuscle_setActivationModel(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, MuscleFirstOrderActivationDynamicModel jarg2_);
  public final static native void Millard2012AccelerationMuscle_setActiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ActiveForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_setForceVelocityCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, ForceVelocityCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_setFiberForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_setTendonForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, TendonForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_setFiberCompressiveForceLengthCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceLengthCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_setFiberCompressiveForceCosPennationCurve(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, FiberCompressiveForceCosPennationCurve jarg2_);
  public final static native void Millard2012AccelerationMuscle_setMass(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native double Millard2012AccelerationMuscle_getDefaultActivation(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native double Millard2012AccelerationMuscle_getDefaultFiberLength(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native double Millard2012AccelerationMuscle_getDefaultFiberVelocity(long jarg1, Millard2012AccelerationMuscle jarg1_);
  public final static native double Millard2012AccelerationMuscle_getActivationRate(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native double Millard2012AccelerationMuscle_getFiberVelocity(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native double Millard2012AccelerationMuscle_getFiberAcceleration(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native void Millard2012AccelerationMuscle_setDefaultActivation(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_setDefaultFiberLength(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_setDefaultFiberVelocity(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2);
  public final static native void Millard2012AccelerationMuscle_setActivation(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void Millard2012AccelerationMuscle_setFiberLength(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void Millard2012AccelerationMuscle_setFiberVelocity(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native double Millard2012AccelerationMuscle_computeActuation(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native void Millard2012AccelerationMuscle_computeInitialFiberEquilibrium(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_);
  public final static native double Millard2012AccelerationMuscle_calcInextensibleTendonActiveFiberForce(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native double Millard2012AccelerationMuscle_calcActiveFiberForceAlongTendon(long jarg1, Millard2012AccelerationMuscle jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void Millard2012AccelerationMuscle_extendPostScale(long jarg1, Millard2012AccelerationMuscle jarg1_, long jarg2, State jarg2_, long jarg3, ScaleSet jarg3_);
  public final static native void delete_Millard2012AccelerationMuscle(long jarg1);
  public final static native long McKibbenActuator_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void McKibbenActuator_assign(long jarg1, McKibbenActuator jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String McKibbenActuator_getClassName();
  public final static native long McKibbenActuator_clone(long jarg1, McKibbenActuator jarg1_);
  public final static native String McKibbenActuator_getConcreteClassName(long jarg1, McKibbenActuator jarg1_);
  public final static native void McKibbenActuator_copyProperty_thread_length(long jarg1, McKibbenActuator jarg1_, long jarg2, McKibbenActuator jarg2_);
  public final static native double McKibbenActuator_get_thread_length__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2);
  public final static native long McKibbenActuator_upd_thread_length__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2);
  public final static native void McKibbenActuator_set_thread_length__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2, double jarg3);
  public final static native int McKibbenActuator_append_thread_length(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native void McKibbenActuator_constructProperty_thread_length(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native double McKibbenActuator_get_thread_length__SWIG_1(long jarg1, McKibbenActuator jarg1_);
  public final static native long McKibbenActuator_upd_thread_length__SWIG_1(long jarg1, McKibbenActuator jarg1_);
  public final static native void McKibbenActuator_set_thread_length__SWIG_1(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native void McKibbenActuator_copyProperty_number_of_turns(long jarg1, McKibbenActuator jarg1_, long jarg2, McKibbenActuator jarg2_);
  public final static native double McKibbenActuator_get_number_of_turns__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2);
  public final static native long McKibbenActuator_upd_number_of_turns__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2);
  public final static native void McKibbenActuator_set_number_of_turns__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2, double jarg3);
  public final static native int McKibbenActuator_append_number_of_turns(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native void McKibbenActuator_constructProperty_number_of_turns(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native double McKibbenActuator_get_number_of_turns__SWIG_1(long jarg1, McKibbenActuator jarg1_);
  public final static native long McKibbenActuator_upd_number_of_turns__SWIG_1(long jarg1, McKibbenActuator jarg1_);
  public final static native void McKibbenActuator_set_number_of_turns__SWIG_1(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native void McKibbenActuator_copyProperty_cord_length(long jarg1, McKibbenActuator jarg1_, long jarg2, McKibbenActuator jarg2_);
  public final static native double McKibbenActuator_get_cord_length__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2);
  public final static native long McKibbenActuator_upd_cord_length__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2);
  public final static native void McKibbenActuator_set_cord_length__SWIG_0(long jarg1, McKibbenActuator jarg1_, int jarg2, double jarg3);
  public final static native int McKibbenActuator_append_cord_length(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native void McKibbenActuator_constructProperty_cord_length(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native double McKibbenActuator_get_cord_length__SWIG_1(long jarg1, McKibbenActuator jarg1_);
  public final static native long McKibbenActuator_upd_cord_length__SWIG_1(long jarg1, McKibbenActuator jarg1_);
  public final static native void McKibbenActuator_set_cord_length__SWIG_1(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native long new_McKibbenActuator__SWIG_0();
  public final static native long new_McKibbenActuator__SWIG_1(String jarg1, double jarg2, double jarg3);
  public final static native void McKibbenActuator_setNumberOfTurns(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native double McKibbenActuator_getNumberOfTurns(long jarg1, McKibbenActuator jarg1_);
  public final static native void McKibbenActuator_setThreadLength(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native double McKibbenActuator_getThreadLength(long jarg1, McKibbenActuator jarg1_);
  public final static native void McKibbenActuator_setCordLength(long jarg1, McKibbenActuator jarg1_, double jarg2);
  public final static native double McKibbenActuator_getCordLength(long jarg1, McKibbenActuator jarg1_);
  public final static native double McKibbenActuator_computeActuation(long jarg1, McKibbenActuator jarg1_, long jarg2, State jarg2_);
  public final static native void delete_McKibbenActuator(long jarg1);
  public final static native long Kinematics_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Kinematics_assign(long jarg1, Kinematics jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String Kinematics_getClassName();
  public final static native long Kinematics_clone(long jarg1, Kinematics jarg1_);
  public final static native String Kinematics_getConcreteClassName(long jarg1, Kinematics jarg1_);
  public final static native long new_Kinematics__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_Kinematics__SWIG_1();
  public final static native long new_Kinematics__SWIG_2(String jarg1);
  public final static native void delete_Kinematics(long jarg1);
  public final static native void Kinematics_setStorageCapacityIncrements(long jarg1, Kinematics jarg1_, int jarg2);
  public final static native long Kinematics_getAccelerationStorage(long jarg1, Kinematics jarg1_);
  public final static native long Kinematics_getVelocityStorage(long jarg1, Kinematics jarg1_);
  public final static native long Kinematics_getPositionStorage(long jarg1, Kinematics jarg1_);
  public final static native void Kinematics_setModel(long jarg1, Kinematics jarg1_, long jarg2, Model jarg2_);
  public final static native void Kinematics_setRecordAccelerations(long jarg1, Kinematics jarg1_, boolean jarg2);
  public final static native int Kinematics_begin(long jarg1, Kinematics jarg1_, long jarg2, State jarg2_);
  public final static native int Kinematics_step(long jarg1, Kinematics jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int Kinematics_end(long jarg1, Kinematics jarg1_, long jarg2, State jarg2_);
  public final static native int Kinematics_printResults__SWIG_0(long jarg1, Kinematics jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int Kinematics_printResults__SWIG_1(long jarg1, Kinematics jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int Kinematics_printResults__SWIG_2(long jarg1, Kinematics jarg1_, String jarg2, String jarg3);
  public final static native int Kinematics_printResults__SWIG_3(long jarg1, Kinematics jarg1_, String jarg2);
  public final static native long Actuation_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Actuation_assign(long jarg1, Actuation jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String Actuation_getClassName();
  public final static native long Actuation_clone(long jarg1, Actuation jarg1_);
  public final static native String Actuation_getConcreteClassName(long jarg1, Actuation jarg1_);
  public final static native long new_Actuation__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_Actuation__SWIG_1();
  public final static native long new_Actuation__SWIG_2(String jarg1);
  public final static native long new_Actuation__SWIG_3(long jarg1, Actuation jarg1_);
  public final static native void delete_Actuation(long jarg1);
  public final static native void Actuation_setStorageCapacityIncrements(long jarg1, Actuation jarg1_, int jarg2);
  public final static native long Actuation_getForceStorage(long jarg1, Actuation jarg1_);
  public final static native long Actuation_getSpeedStorage(long jarg1, Actuation jarg1_);
  public final static native long Actuation_getPowerStorage(long jarg1, Actuation jarg1_);
  public final static native void Actuation_setModel(long jarg1, Actuation jarg1_, long jarg2, Model jarg2_);
  public final static native int Actuation_begin(long jarg1, Actuation jarg1_, long jarg2, State jarg2_);
  public final static native int Actuation_step(long jarg1, Actuation jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int Actuation_end(long jarg1, Actuation jarg1_, long jarg2, State jarg2_);
  public final static native int Actuation_printResults__SWIG_0(long jarg1, Actuation jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int Actuation_printResults__SWIG_1(long jarg1, Actuation jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int Actuation_printResults__SWIG_2(long jarg1, Actuation jarg1_, String jarg2, String jarg3);
  public final static native int Actuation_printResults__SWIG_3(long jarg1, Actuation jarg1_, String jarg2);
  public final static native long MuscleAnalysis_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MuscleAnalysis_assign(long jarg1, MuscleAnalysis jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String MuscleAnalysis_getClassName();
  public final static native long MuscleAnalysis_clone(long jarg1, MuscleAnalysis jarg1_);
  public final static native String MuscleAnalysis_getConcreteClassName(long jarg1, MuscleAnalysis jarg1_);
  public final static native long new_MuscleAnalysis__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_MuscleAnalysis__SWIG_1();
  public final static native long new_MuscleAnalysis__SWIG_2(String jarg1);
  public final static native long new_MuscleAnalysis__SWIG_3(long jarg1, MuscleAnalysis jarg1_);
  public final static native void delete_MuscleAnalysis(long jarg1);
  public final static native void MuscleAnalysis_setModel(long jarg1, MuscleAnalysis jarg1_, long jarg2, Model jarg2_);
  public final static native void MuscleAnalysis_setStorageCapacityIncrements(long jarg1, MuscleAnalysis jarg1_, int jarg2);
  public final static native long MuscleAnalysis_getPennationAngleStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getMuscleTendonLengthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getFiberLengthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getNormalizedFiberLengthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getTendonLengthStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getFiberVelocityStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getNormalizedFiberVelocityStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getPennationAngularVelocityStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getFiberForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getActiveFiberForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getPassiveFiberForceStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getActiveFiberForceAlongTendonStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getPassiveFiberForceAlongTendonStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getFiberActivePowerStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getFiberPassivePowerStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getTendonPowerStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native long MuscleAnalysis_getMusclePowerStorage(long jarg1, MuscleAnalysis jarg1_);
  public final static native void MuscleAnalysis_setMuscles(long jarg1, MuscleAnalysis jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void MuscleAnalysis_setCoordinates(long jarg1, MuscleAnalysis jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void MuscleAnalysis_setComputeMoments(long jarg1, MuscleAnalysis jarg1_, boolean jarg2);
  public final static native boolean MuscleAnalysis_getComputeMoments(long jarg1, MuscleAnalysis jarg1_);
  public final static native int MuscleAnalysis_begin(long jarg1, MuscleAnalysis jarg1_, long jarg2, State jarg2_);
  public final static native int MuscleAnalysis_step(long jarg1, MuscleAnalysis jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int MuscleAnalysis_end(long jarg1, MuscleAnalysis jarg1_, long jarg2, State jarg2_);
  public final static native int MuscleAnalysis_printResults__SWIG_0(long jarg1, MuscleAnalysis jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int MuscleAnalysis_printResults__SWIG_1(long jarg1, MuscleAnalysis jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int MuscleAnalysis_printResults__SWIG_2(long jarg1, MuscleAnalysis jarg1_, String jarg2, String jarg3);
  public final static native int MuscleAnalysis_printResults__SWIG_3(long jarg1, MuscleAnalysis jarg1_, String jarg2);
  public final static native void MuscleAnalysis_allocateStorageObjects(long jarg1, MuscleAnalysis jarg1_);
  public final static native long InverseDynamics_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void InverseDynamics_assign(long jarg1, InverseDynamics jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String InverseDynamics_getClassName();
  public final static native long InverseDynamics_clone(long jarg1, InverseDynamics jarg1_);
  public final static native String InverseDynamics_getConcreteClassName(long jarg1, InverseDynamics jarg1_);
  public final static native long new_InverseDynamics__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_InverseDynamics__SWIG_1();
  public final static native long new_InverseDynamics__SWIG_2(long jarg1, InverseDynamics jarg1_);
  public final static native void delete_InverseDynamics(long jarg1);
  public final static native void InverseDynamics_setStorageCapacityIncrements(long jarg1, InverseDynamics jarg1_, int jarg2);
  public final static native long InverseDynamics_getStorage(long jarg1, InverseDynamics jarg1_);
  public final static native boolean InverseDynamics_getUseModelForceSet(long jarg1, InverseDynamics jarg1_);
  public final static native void InverseDynamics_setUseModelForceSet(long jarg1, InverseDynamics jarg1_, boolean jarg2);
  public final static native void InverseDynamics_setModel(long jarg1, InverseDynamics jarg1_, long jarg2, Model jarg2_);
  public final static native int InverseDynamics_printResults__SWIG_0(long jarg1, InverseDynamics jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int InverseDynamics_printResults__SWIG_1(long jarg1, InverseDynamics jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int InverseDynamics_printResults__SWIG_2(long jarg1, InverseDynamics jarg1_, String jarg2, String jarg3);
  public final static native int InverseDynamics_printResults__SWIG_3(long jarg1, InverseDynamics jarg1_, String jarg2);
  public final static native long StaticOptimization_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void StaticOptimization_assign(long jarg1, StaticOptimization jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String StaticOptimization_getClassName();
  public final static native long StaticOptimization_clone(long jarg1, StaticOptimization jarg1_);
  public final static native String StaticOptimization_getConcreteClassName(long jarg1, StaticOptimization jarg1_);
  public final static native long new_StaticOptimization__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_StaticOptimization__SWIG_1();
  public final static native long new_StaticOptimization__SWIG_2(long jarg1, StaticOptimization jarg1_);
  public final static native void delete_StaticOptimization(long jarg1);
  public final static native void StaticOptimization_setStorageCapacityIncrements(long jarg1, StaticOptimization jarg1_, int jarg2);
  public final static native long StaticOptimization_getActivationStorage(long jarg1, StaticOptimization jarg1_);
  public final static native long StaticOptimization_getForceStorage(long jarg1, StaticOptimization jarg1_);
  public final static native boolean StaticOptimization_getUseModelForceSet(long jarg1, StaticOptimization jarg1_);
  public final static native void StaticOptimization_setUseModelForceSet(long jarg1, StaticOptimization jarg1_, boolean jarg2);
  public final static native void StaticOptimization_setModel(long jarg1, StaticOptimization jarg1_, long jarg2, Model jarg2_);
  public final static native void StaticOptimization_setActivationExponent(long jarg1, StaticOptimization jarg1_, double jarg2);
  public final static native double StaticOptimization_getActivationExponent(long jarg1, StaticOptimization jarg1_);
  public final static native void StaticOptimization_setUseMusclePhysiology(long jarg1, StaticOptimization jarg1_, boolean jarg2);
  public final static native boolean StaticOptimization_getUseMusclePhysiology(long jarg1, StaticOptimization jarg1_);
  public final static native void StaticOptimization_setConvergenceCriterion(long jarg1, StaticOptimization jarg1_, double jarg2);
  public final static native double StaticOptimization_getConvergenceCriterion(long jarg1, StaticOptimization jarg1_);
  public final static native void StaticOptimization_setMaxIterations(long jarg1, StaticOptimization jarg1_, int jarg2);
  public final static native int StaticOptimization_getMaxIterations(long jarg1, StaticOptimization jarg1_);
  public final static native int StaticOptimization_begin(long jarg1, StaticOptimization jarg1_, long jarg2, State jarg2_);
  public final static native int StaticOptimization_step(long jarg1, StaticOptimization jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int StaticOptimization_end(long jarg1, StaticOptimization jarg1_, long jarg2, State jarg2_);
  public final static native int StaticOptimization_printResults__SWIG_0(long jarg1, StaticOptimization jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int StaticOptimization_printResults__SWIG_1(long jarg1, StaticOptimization jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int StaticOptimization_printResults__SWIG_2(long jarg1, StaticOptimization jarg1_, String jarg2, String jarg3);
  public final static native int StaticOptimization_printResults__SWIG_3(long jarg1, StaticOptimization jarg1_, String jarg2);
  public final static native long ForceReporter_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ForceReporter_assign(long jarg1, ForceReporter jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String ForceReporter_getClassName();
  public final static native long ForceReporter_clone(long jarg1, ForceReporter jarg1_);
  public final static native String ForceReporter_getConcreteClassName(long jarg1, ForceReporter jarg1_);
  public final static native long new_ForceReporter__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_ForceReporter__SWIG_1();
  public final static native long new_ForceReporter__SWIG_2(String jarg1);
  public final static native long new_ForceReporter__SWIG_3(long jarg1, ForceReporter jarg1_);
  public final static native void delete_ForceReporter(long jarg1);
  public final static native long ForceReporter_getForceStorage(long jarg1, ForceReporter jarg1_);
  public final static native long ForceReporter_updForceStorage(long jarg1, ForceReporter jarg1_);
  public final static native long ForceReporter_getForcesTable(long jarg1, ForceReporter jarg1_);
  public final static native void ForceReporter_setModel(long jarg1, ForceReporter jarg1_, long jarg2, Model jarg2_);
  public final static native void ForceReporter_includeConstraintForces(long jarg1, ForceReporter jarg1_, boolean jarg2);
  public final static native int ForceReporter_begin(long jarg1, ForceReporter jarg1_, long jarg2, State jarg2_);
  public final static native int ForceReporter_step(long jarg1, ForceReporter jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int ForceReporter_end(long jarg1, ForceReporter jarg1_, long jarg2, State jarg2_);
  public final static native int ForceReporter_printResults__SWIG_0(long jarg1, ForceReporter jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int ForceReporter_printResults__SWIG_1(long jarg1, ForceReporter jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int ForceReporter_printResults__SWIG_2(long jarg1, ForceReporter jarg1_, String jarg2, String jarg3);
  public final static native int ForceReporter_printResults__SWIG_3(long jarg1, ForceReporter jarg1_, String jarg2);
  public final static native int PointKinematicsNAME_LENGTH_get();
  public final static native int PointKinematicsBUFFER_LENGTH_get();
  public final static native long PointKinematics_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void PointKinematics_assign(long jarg1, PointKinematics jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String PointKinematics_getClassName();
  public final static native long PointKinematics_clone(long jarg1, PointKinematics jarg1_);
  public final static native String PointKinematics_getConcreteClassName(long jarg1, PointKinematics jarg1_);
  public final static native int PointKinematics_NAME_LENGTH_get();
  public final static native int PointKinematics_BUFFER_LENGTH_get();
  public final static native long new_PointKinematics__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_PointKinematics__SWIG_1();
  public final static native long new_PointKinematics__SWIG_2(String jarg1);
  public final static native long new_PointKinematics__SWIG_3(long jarg1, PointKinematics jarg1_);
  public final static native void delete_PointKinematics(long jarg1);
  public final static native void PointKinematics_setBodyPoint(long jarg1, PointKinematics jarg1_, String jarg2, long jarg3, Vec3 jarg3_);
  public final static native void PointKinematics_setBody(long jarg1, PointKinematics jarg1_, long jarg2, PhysicalFrame jarg2_);
  public final static native void PointKinematics_setRelativeToBody(long jarg1, PointKinematics jarg1_, long jarg2, PhysicalFrame jarg2_);
  public final static native long PointKinematics_getBody(long jarg1, PointKinematics jarg1_);
  public final static native long PointKinematics_getRelativeToBody(long jarg1, PointKinematics jarg1_);
  public final static native void PointKinematics_setPoint(long jarg1, PointKinematics jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointKinematics_getPoint(long jarg1, PointKinematics jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void PointKinematics_setPointName(long jarg1, PointKinematics jarg1_, String jarg2);
  public final static native String PointKinematics_getPointName(long jarg1, PointKinematics jarg1_);
  public final static native void PointKinematics_setModel(long jarg1, PointKinematics jarg1_, long jarg2, Model jarg2_);
  public final static native void PointKinematics_setStorageCapacityIncrements(long jarg1, PointKinematics jarg1_, int jarg2);
  public final static native long PointKinematics_getAccelerationStorage(long jarg1, PointKinematics jarg1_);
  public final static native long PointKinematics_getVelocityStorage(long jarg1, PointKinematics jarg1_);
  public final static native long PointKinematics_getPositionStorage(long jarg1, PointKinematics jarg1_);
  public final static native int PointKinematics_begin(long jarg1, PointKinematics jarg1_, long jarg2, State jarg2_);
  public final static native int PointKinematics_step(long jarg1, PointKinematics jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int PointKinematics_end(long jarg1, PointKinematics jarg1_, long jarg2, State jarg2_);
  public final static native int PointKinematics_printResults__SWIG_0(long jarg1, PointKinematics jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int PointKinematics_printResults__SWIG_1(long jarg1, PointKinematics jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int PointKinematics_printResults__SWIG_2(long jarg1, PointKinematics jarg1_, String jarg2, String jarg3);
  public final static native int PointKinematics_printResults__SWIG_3(long jarg1, PointKinematics jarg1_, String jarg2);
  public final static native long BodyKinematics_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void BodyKinematics_assign(long jarg1, BodyKinematics jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String BodyKinematics_getClassName();
  public final static native long BodyKinematics_clone(long jarg1, BodyKinematics jarg1_);
  public final static native String BodyKinematics_getConcreteClassName(long jarg1, BodyKinematics jarg1_);
  public final static native long new_BodyKinematics__SWIG_0(long jarg1, Model jarg1_, boolean jarg2);
  public final static native long new_BodyKinematics__SWIG_1(long jarg1, Model jarg1_);
  public final static native long new_BodyKinematics__SWIG_2();
  public final static native long new_BodyKinematics__SWIG_3(String jarg1);
  public final static native long new_BodyKinematics__SWIG_4(long jarg1, BodyKinematics jarg1_);
  public final static native void delete_BodyKinematics(long jarg1);
  public final static native void BodyKinematics_setStorageCapacityIncrements(long jarg1, BodyKinematics jarg1_, int jarg2);
  public final static native long BodyKinematics_getAccelerationStorage(long jarg1, BodyKinematics jarg1_);
  public final static native long BodyKinematics_getVelocityStorage(long jarg1, BodyKinematics jarg1_);
  public final static native long BodyKinematics_getPositionStorage(long jarg1, BodyKinematics jarg1_);
  public final static native void BodyKinematics_setExpressResultsInLocalFrame(long jarg1, BodyKinematics jarg1_, boolean jarg2);
  public final static native boolean BodyKinematics_getExpressResultsInLocalFrame(long jarg1, BodyKinematics jarg1_);
  public final static native void BodyKinematics_setRecordCenterOfMass(long jarg1, BodyKinematics jarg1_, boolean jarg2);
  public final static native void BodyKinematics_setBodiesToRecord(long jarg1, BodyKinematics jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native void BodyKinematics_setModel(long jarg1, BodyKinematics jarg1_, long jarg2, Model jarg2_);
  public final static native int BodyKinematics_begin(long jarg1, BodyKinematics jarg1_, long jarg2, State jarg2_);
  public final static native int BodyKinematics_step(long jarg1, BodyKinematics jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int BodyKinematics_end(long jarg1, BodyKinematics jarg1_, long jarg2, State jarg2_);
  public final static native int BodyKinematics_printResults__SWIG_0(long jarg1, BodyKinematics jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int BodyKinematics_printResults__SWIG_1(long jarg1, BodyKinematics jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int BodyKinematics_printResults__SWIG_2(long jarg1, BodyKinematics jarg1_, String jarg2, String jarg3);
  public final static native int BodyKinematics_printResults__SWIG_3(long jarg1, BodyKinematics jarg1_, String jarg2);
  public final static native long JointReaction_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void JointReaction_assign(long jarg1, JointReaction jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String JointReaction_getClassName();
  public final static native long JointReaction_clone(long jarg1, JointReaction jarg1_);
  public final static native String JointReaction_getConcreteClassName(long jarg1, JointReaction jarg1_);
  public final static native long new_JointReaction__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_JointReaction__SWIG_1();
  public final static native long new_JointReaction__SWIG_2(String jarg1);
  public final static native long new_JointReaction__SWIG_3(long jarg1, JointReaction jarg1_);
  public final static native void delete_JointReaction(long jarg1);
  public final static native void JointReaction_setModel(long jarg1, JointReaction jarg1_, long jarg2, Model jarg2_);
  public final static native String JointReaction_getForcesFileName(long jarg1, JointReaction jarg1_);
  public final static native void JointReaction_setForcesFileName(long jarg1, JointReaction jarg1_, String jarg2);
  public final static native long JointReaction_getJointNames(long jarg1, JointReaction jarg1_);
  public final static native void JointReaction_setJointNames(long jarg1, JointReaction jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long JointReaction_getOnBody(long jarg1, JointReaction jarg1_);
  public final static native void JointReaction_setOnBody(long jarg1, JointReaction jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long JointReaction_getInFrame(long jarg1, JointReaction jarg1_);
  public final static native void JointReaction_setInFrame(long jarg1, JointReaction jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native int JointReaction_begin(long jarg1, JointReaction jarg1_, long jarg2, State jarg2_);
  public final static native int JointReaction_step(long jarg1, JointReaction jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int JointReaction_end(long jarg1, JointReaction jarg1_, long jarg2, State jarg2_);
  public final static native int JointReaction_printResults__SWIG_0(long jarg1, JointReaction jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int JointReaction_printResults__SWIG_1(long jarg1, JointReaction jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int JointReaction_printResults__SWIG_2(long jarg1, JointReaction jarg1_, String jarg2, String jarg3);
  public final static native int JointReaction_printResults__SWIG_3(long jarg1, JointReaction jarg1_, String jarg2);
  public final static native long StatesReporter_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void StatesReporter_assign(long jarg1, StatesReporter jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String StatesReporter_getClassName();
  public final static native long StatesReporter_clone(long jarg1, StatesReporter jarg1_);
  public final static native String StatesReporter_getConcreteClassName(long jarg1, StatesReporter jarg1_);
  public final static native long new_StatesReporter__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_StatesReporter__SWIG_1();
  public final static native long new_StatesReporter__SWIG_2(String jarg1);
  public final static native long new_StatesReporter__SWIG_3(long jarg1, StatesReporter jarg1_);
  public final static native void delete_StatesReporter(long jarg1);
  public final static native long StatesReporter_getStatesStorage(long jarg1, StatesReporter jarg1_);
  public final static native long StatesReporter_updStatesStorage(long jarg1, StatesReporter jarg1_);
  public final static native int StatesReporter_begin(long jarg1, StatesReporter jarg1_, long jarg2, State jarg2_);
  public final static native int StatesReporter_step(long jarg1, StatesReporter jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int StatesReporter_end(long jarg1, StatesReporter jarg1_, long jarg2, State jarg2_);
  public final static native int StatesReporter_printResults__SWIG_0(long jarg1, StatesReporter jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int StatesReporter_printResults__SWIG_1(long jarg1, StatesReporter jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int StatesReporter_printResults__SWIG_2(long jarg1, StatesReporter jarg1_, String jarg2, String jarg3);
  public final static native int StatesReporter_printResults__SWIG_3(long jarg1, StatesReporter jarg1_, String jarg2);
  public final static native long InducedAccelerations_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void InducedAccelerations_assign(long jarg1, InducedAccelerations jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String InducedAccelerations_getClassName();
  public final static native long InducedAccelerations_clone(long jarg1, InducedAccelerations jarg1_);
  public final static native String InducedAccelerations_getConcreteClassName(long jarg1, InducedAccelerations jarg1_);
  public final static native long new_InducedAccelerations__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_InducedAccelerations__SWIG_1();
  public final static native long new_InducedAccelerations__SWIG_2(String jarg1);
  public final static native long new_InducedAccelerations__SWIG_3(long jarg1, InducedAccelerations jarg1_);
  public final static native void delete_InducedAccelerations(long jarg1);
  public final static native void InducedAccelerations_setModel(long jarg1, InducedAccelerations jarg1_, long jarg2, Model jarg2_);
  public final static native void InducedAccelerations_initialize(long jarg1, InducedAccelerations jarg1_, long jarg2, State jarg2_);
  public final static native int InducedAccelerations_begin(long jarg1, InducedAccelerations jarg1_, long jarg2, State jarg2_);
  public final static native int InducedAccelerations_step(long jarg1, InducedAccelerations jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int InducedAccelerations_end(long jarg1, InducedAccelerations jarg1_, long jarg2, State jarg2_);
  public final static native int InducedAccelerations_printResults__SWIG_0(long jarg1, InducedAccelerations jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int InducedAccelerations_printResults__SWIG_1(long jarg1, InducedAccelerations jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int InducedAccelerations_printResults__SWIG_2(long jarg1, InducedAccelerations jarg1_, String jarg2, String jarg3);
  public final static native int InducedAccelerations_printResults__SWIG_3(long jarg1, InducedAccelerations jarg1_, String jarg2);
  public final static native void InducedAccelerations_addContactConstraintFromExternalForce(long jarg1, InducedAccelerations jarg1_, long jarg2, ExternalForce jarg2_);
  public final static native long InducedAccelerations_applyContactConstraintAccordingToExternalForces(long jarg1, InducedAccelerations jarg1_, long jarg2, State jarg2_);
  public final static native long ProbeReporter_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ProbeReporter_assign(long jarg1, ProbeReporter jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String ProbeReporter_getClassName();
  public final static native long ProbeReporter_clone(long jarg1, ProbeReporter jarg1_);
  public final static native String ProbeReporter_getConcreteClassName(long jarg1, ProbeReporter jarg1_);
  public final static native long new_ProbeReporter__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_ProbeReporter__SWIG_1();
  public final static native long new_ProbeReporter__SWIG_2(String jarg1);
  public final static native long new_ProbeReporter__SWIG_3(long jarg1, ProbeReporter jarg1_);
  public final static native void delete_ProbeReporter(long jarg1);
  public final static native long ProbeReporter_getProbeStorage(long jarg1, ProbeReporter jarg1_);
  public final static native long ProbeReporter_updProbeStorage(long jarg1, ProbeReporter jarg1_);
  public final static native void ProbeReporter_setModel(long jarg1, ProbeReporter jarg1_, long jarg2, Model jarg2_);
  public final static native int ProbeReporter_begin(long jarg1, ProbeReporter jarg1_, long jarg2, State jarg2_);
  public final static native int ProbeReporter_step(long jarg1, ProbeReporter jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native int ProbeReporter_end(long jarg1, ProbeReporter jarg1_, long jarg2, State jarg2_);
  public final static native void ProbeReporter_disableIntegrationOnlyProbes(long jarg1, ProbeReporter jarg1_);
  public final static native int ProbeReporter_printResults__SWIG_0(long jarg1, ProbeReporter jarg1_, String jarg2, String jarg3, double jarg4, String jarg5);
  public final static native int ProbeReporter_printResults__SWIG_1(long jarg1, ProbeReporter jarg1_, String jarg2, String jarg3, double jarg4);
  public final static native int ProbeReporter_printResults__SWIG_2(long jarg1, ProbeReporter jarg1_, String jarg2, String jarg3);
  public final static native int ProbeReporter_printResults__SWIG_3(long jarg1, ProbeReporter jarg1_, String jarg2);
  public final static native long OutputReporter_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void OutputReporter_assign(long jarg1, OutputReporter jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String OutputReporter_getClassName();
  public final static native long OutputReporter_clone(long jarg1, OutputReporter jarg1_);
  public final static native String OutputReporter_getConcreteClassName(long jarg1, OutputReporter jarg1_);
  public final static native void OutputReporter_copyProperty_output_paths(long jarg1, OutputReporter jarg1_, long jarg2, OutputReporter jarg2_);
  public final static native String OutputReporter_get_output_paths(long jarg1, OutputReporter jarg1_, int jarg2);
  public final static native long OutputReporter_upd_output_paths(long jarg1, OutputReporter jarg1_, int jarg2);
  public final static native void OutputReporter_set_output_paths(long jarg1, OutputReporter jarg1_, int jarg2, String jarg3);
  public final static native int OutputReporter_append_output_paths(long jarg1, OutputReporter jarg1_, String jarg2);
  public final static native void OutputReporter_constructProperty_output_paths(long jarg1, OutputReporter jarg1_);
  public final static native long new_OutputReporter__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_OutputReporter__SWIG_1();
  public final static native long new_OutputReporter__SWIG_2(String jarg1);
  public final static native void delete_OutputReporter(long jarg1);
  public final static native long IKTask_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void IKTask_assign(long jarg1, IKTask jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String IKTask_getClassName();
  public final static native long IKTask_clone(long jarg1, IKTask jarg1_);
  public final static native String IKTask_getConcreteClassName(long jarg1, IKTask jarg1_);
  public final static native boolean IKTask_getApply(long jarg1, IKTask jarg1_);
  public final static native void IKTask_setApply(long jarg1, IKTask jarg1_, boolean jarg2);
  public final static native double IKTask_getWeight(long jarg1, IKTask jarg1_);
  public final static native void IKTask_setWeight(long jarg1, IKTask jarg1_, double jarg2);
  public final static native void delete_IKTask(long jarg1);
  public final static native long SetIKTasks_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void SetIKTasks_assign(long jarg1, SetIKTasks jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String SetIKTasks_getClassName();
  public final static native long SetIKTasks_clone(long jarg1, SetIKTasks jarg1_);
  public final static native String SetIKTasks_getConcreteClassName(long jarg1, SetIKTasks jarg1_);
  public final static native void delete_SetIKTasks(long jarg1);
  public final static native long new_SetIKTasks__SWIG_0();
  public final static native long new_SetIKTasks__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_SetIKTasks__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_SetIKTasks__SWIG_3(long jarg1, SetIKTasks jarg1_);
  public final static native void SetIKTasks_setupGroups(long jarg1, SetIKTasks jarg1_);
  public final static native void SetIKTasks_setMemoryOwner(long jarg1, SetIKTasks jarg1_, boolean jarg2);
  public final static native boolean SetIKTasks_setSize(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native int SetIKTasks_getSize(long jarg1, SetIKTasks jarg1_);
  public final static native int SetIKTasks_getIndex__SWIG_0(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_, int jarg3);
  public final static native int SetIKTasks_getIndex__SWIG_1(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native int SetIKTasks_getIndex__SWIG_2(long jarg1, SetIKTasks jarg1_, String jarg2, int jarg3);
  public final static native int SetIKTasks_getIndex__SWIG_3(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_getGroupNamesContaining(long jarg1, SetIKTasks jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetIKTasks_adoptAndAppend(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native boolean SetIKTasks_cloneAndAppend(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native boolean SetIKTasks_insert(long jarg1, SetIKTasks jarg1_, int jarg2, long jarg3, IKTask jarg3_);
  public final static native boolean SetIKTasks_remove__SWIG_0(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native boolean SetIKTasks_remove__SWIG_1(long jarg1, SetIKTasks jarg1_, long jarg2, IKTask jarg2_);
  public final static native void SetIKTasks_clearAndDestroy(long jarg1, SetIKTasks jarg1_);
  public final static native boolean SetIKTasks_set__SWIG_0(long jarg1, SetIKTasks jarg1_, int jarg2, long jarg3, IKTask jarg3_, boolean jarg4);
  public final static native boolean SetIKTasks_set__SWIG_1(long jarg1, SetIKTasks jarg1_, int jarg2, long jarg3, IKTask jarg3_);
  public final static native long SetIKTasks_get__SWIG_0(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native long SetIKTasks_get__SWIG_1(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native boolean SetIKTasks_contains(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_getNames(long jarg1, SetIKTasks jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native int SetIKTasks_getNumGroups(long jarg1, SetIKTasks jarg1_);
  public final static native void SetIKTasks_addGroup(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_removeGroup(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native void SetIKTasks_renameGroup(long jarg1, SetIKTasks jarg1_, String jarg2, String jarg3);
  public final static native void SetIKTasks_addObjectToGroup(long jarg1, SetIKTasks jarg1_, String jarg2, String jarg3);
  public final static native void SetIKTasks_getGroupNames(long jarg1, SetIKTasks jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetIKTasks_getGroup__SWIG_0(long jarg1, SetIKTasks jarg1_, String jarg2);
  public final static native long SetIKTasks_getGroup__SWIG_1(long jarg1, SetIKTasks jarg1_, int jarg2);
  public final static native long IKMarkerTask_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void IKMarkerTask_assign(long jarg1, IKMarkerTask jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String IKMarkerTask_getClassName();
  public final static native long IKMarkerTask_clone(long jarg1, IKMarkerTask jarg1_);
  public final static native String IKMarkerTask_getConcreteClassName(long jarg1, IKMarkerTask jarg1_);
  public final static native long new_IKMarkerTask();
  public final static native void delete_IKMarkerTask(long jarg1);
  public final static native long IKCoordinateTask_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void IKCoordinateTask_assign(long jarg1, IKCoordinateTask jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String IKCoordinateTask_getClassName();
  public final static native long IKCoordinateTask_clone(long jarg1, IKCoordinateTask jarg1_);
  public final static native String IKCoordinateTask_getConcreteClassName(long jarg1, IKCoordinateTask jarg1_);
  public final static native long new_IKCoordinateTask__SWIG_0();
  public final static native long new_IKCoordinateTask__SWIG_1(long jarg1, IKCoordinateTask jarg1_);
  public final static native void IKCoordinateTask_setValueType(long jarg1, IKCoordinateTask jarg1_, int jarg2);
  public final static native int IKCoordinateTask_getValueType(long jarg1, IKCoordinateTask jarg1_);
  public final static native double IKCoordinateTask_getValue(long jarg1, IKCoordinateTask jarg1_);
  public final static native void IKCoordinateTask_setValue(long jarg1, IKCoordinateTask jarg1_, double jarg2);
  public final static native String IKCoordinateTask_ValueTypeToString(int jarg1);
  public final static native int IKCoordinateTask_StringToValueType(String jarg1);
  public final static native void delete_IKCoordinateTask(long jarg1);
  public final static native long IKTaskSet_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void IKTaskSet_assign(long jarg1, IKTaskSet jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String IKTaskSet_getClassName();
  public final static native long IKTaskSet_clone(long jarg1, IKTaskSet jarg1_);
  public final static native String IKTaskSet_getConcreteClassName(long jarg1, IKTaskSet jarg1_);
  public final static native long new_IKTaskSet__SWIG_0();
  public final static native long new_IKTaskSet__SWIG_1(long jarg1, IKTaskSet jarg1_);
  public final static native long new_IKTaskSet__SWIG_2(String jarg1);
  public final static native void IKTaskSet_createMarkerWeightSet(long jarg1, IKTaskSet jarg1_, long jarg2, SetMarkerWeights jarg2_);
  public final static native void delete_IKTaskSet(long jarg1);
  public final static native long MarkerPair_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MarkerPair_assign(long jarg1, MarkerPair jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String MarkerPair_getClassName();
  public final static native long MarkerPair_clone(long jarg1, MarkerPair jarg1_);
  public final static native String MarkerPair_getConcreteClassName(long jarg1, MarkerPair jarg1_);
  public final static native long new_MarkerPair__SWIG_0();
  public final static native long new_MarkerPair__SWIG_1(long jarg1, MarkerPair jarg1_);
  public final static native long new_MarkerPair__SWIG_2(String jarg1, String jarg2);
  public final static native void delete_MarkerPair(long jarg1);
  public final static native void MarkerPair_copyData(long jarg1, MarkerPair jarg1_, long jarg2, MarkerPair jarg2_);
  public final static native void MarkerPair_getMarkerNames(long jarg1, MarkerPair jarg1_, long jarg2, long jarg3);
  public final static native String MarkerPair_getMarkerName(long jarg1, MarkerPair jarg1_, int jarg2);
  public final static native void MarkerPair_setMarkerName(long jarg1, MarkerPair jarg1_, int jarg2, String jarg3);
  public final static native long SetMarkerPairs_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void SetMarkerPairs_assign(long jarg1, SetMarkerPairs jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String SetMarkerPairs_getClassName();
  public final static native long SetMarkerPairs_clone(long jarg1, SetMarkerPairs jarg1_);
  public final static native String SetMarkerPairs_getConcreteClassName(long jarg1, SetMarkerPairs jarg1_);
  public final static native void delete_SetMarkerPairs(long jarg1);
  public final static native long new_SetMarkerPairs__SWIG_0();
  public final static native long new_SetMarkerPairs__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_SetMarkerPairs__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_SetMarkerPairs__SWIG_3(long jarg1, SetMarkerPairs jarg1_);
  public final static native void SetMarkerPairs_setupGroups(long jarg1, SetMarkerPairs jarg1_);
  public final static native void SetMarkerPairs_setMemoryOwner(long jarg1, SetMarkerPairs jarg1_, boolean jarg2);
  public final static native boolean SetMarkerPairs_setSize(long jarg1, SetMarkerPairs jarg1_, int jarg2);
  public final static native int SetMarkerPairs_getSize(long jarg1, SetMarkerPairs jarg1_);
  public final static native int SetMarkerPairs_getIndex__SWIG_0(long jarg1, SetMarkerPairs jarg1_, long jarg2, MarkerPair jarg2_, int jarg3);
  public final static native int SetMarkerPairs_getIndex__SWIG_1(long jarg1, SetMarkerPairs jarg1_, long jarg2, MarkerPair jarg2_);
  public final static native int SetMarkerPairs_getIndex__SWIG_2(long jarg1, SetMarkerPairs jarg1_, String jarg2, int jarg3);
  public final static native int SetMarkerPairs_getIndex__SWIG_3(long jarg1, SetMarkerPairs jarg1_, String jarg2);
  public final static native void SetMarkerPairs_getGroupNamesContaining(long jarg1, SetMarkerPairs jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetMarkerPairs_adoptAndAppend(long jarg1, SetMarkerPairs jarg1_, long jarg2, MarkerPair jarg2_);
  public final static native boolean SetMarkerPairs_cloneAndAppend(long jarg1, SetMarkerPairs jarg1_, long jarg2, MarkerPair jarg2_);
  public final static native boolean SetMarkerPairs_insert(long jarg1, SetMarkerPairs jarg1_, int jarg2, long jarg3, MarkerPair jarg3_);
  public final static native boolean SetMarkerPairs_remove__SWIG_0(long jarg1, SetMarkerPairs jarg1_, int jarg2);
  public final static native boolean SetMarkerPairs_remove__SWIG_1(long jarg1, SetMarkerPairs jarg1_, long jarg2, MarkerPair jarg2_);
  public final static native void SetMarkerPairs_clearAndDestroy(long jarg1, SetMarkerPairs jarg1_);
  public final static native boolean SetMarkerPairs_set__SWIG_0(long jarg1, SetMarkerPairs jarg1_, int jarg2, long jarg3, MarkerPair jarg3_, boolean jarg4);
  public final static native boolean SetMarkerPairs_set__SWIG_1(long jarg1, SetMarkerPairs jarg1_, int jarg2, long jarg3, MarkerPair jarg3_);
  public final static native long SetMarkerPairs_get__SWIG_0(long jarg1, SetMarkerPairs jarg1_, int jarg2);
  public final static native long SetMarkerPairs_get__SWIG_1(long jarg1, SetMarkerPairs jarg1_, String jarg2);
  public final static native boolean SetMarkerPairs_contains(long jarg1, SetMarkerPairs jarg1_, String jarg2);
  public final static native void SetMarkerPairs_getNames(long jarg1, SetMarkerPairs jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native int SetMarkerPairs_getNumGroups(long jarg1, SetMarkerPairs jarg1_);
  public final static native void SetMarkerPairs_addGroup(long jarg1, SetMarkerPairs jarg1_, String jarg2);
  public final static native void SetMarkerPairs_removeGroup(long jarg1, SetMarkerPairs jarg1_, String jarg2);
  public final static native void SetMarkerPairs_renameGroup(long jarg1, SetMarkerPairs jarg1_, String jarg2, String jarg3);
  public final static native void SetMarkerPairs_addObjectToGroup(long jarg1, SetMarkerPairs jarg1_, String jarg2, String jarg3);
  public final static native void SetMarkerPairs_getGroupNames(long jarg1, SetMarkerPairs jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMarkerPairs_getGroup__SWIG_0(long jarg1, SetMarkerPairs jarg1_, String jarg2);
  public final static native long SetMarkerPairs_getGroup__SWIG_1(long jarg1, SetMarkerPairs jarg1_, int jarg2);
  public final static native long MarkerPairSet_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MarkerPairSet_assign(long jarg1, MarkerPairSet jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String MarkerPairSet_getClassName();
  public final static native long MarkerPairSet_clone(long jarg1, MarkerPairSet jarg1_);
  public final static native String MarkerPairSet_getConcreteClassName(long jarg1, MarkerPairSet jarg1_);
  public final static native long new_MarkerPairSet__SWIG_0();
  public final static native long new_MarkerPairSet__SWIG_1(long jarg1, MarkerPairSet jarg1_);
  public final static native void delete_MarkerPairSet(long jarg1);
  public final static native long Measurement_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Measurement_assign(long jarg1, Measurement jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String Measurement_getClassName();
  public final static native long Measurement_clone(long jarg1, Measurement jarg1_);
  public final static native String Measurement_getConcreteClassName(long jarg1, Measurement jarg1_);
  public final static native long new_Measurement__SWIG_0();
  public final static native long new_Measurement__SWIG_1(long jarg1, Measurement jarg1_);
  public final static native void delete_Measurement(long jarg1);
  public final static native void Measurement_copyData(long jarg1, Measurement jarg1_, long jarg2, Measurement jarg2_);
  public final static native long Measurement_getBodyScaleSet(long jarg1, Measurement jarg1_);
  public final static native long Measurement_getMarkerPairSet(long jarg1, Measurement jarg1_);
  public final static native int Measurement_getNumMarkerPairs(long jarg1, Measurement jarg1_);
  public final static native long Measurement_getMarkerPair(long jarg1, Measurement jarg1_, int jarg2);
  public final static native boolean Measurement_getApply(long jarg1, Measurement jarg1_);
  public final static native void Measurement_setApply(long jarg1, Measurement jarg1_, boolean jarg2);
  public final static native void Measurement_applyScaleFactor(long jarg1, Measurement jarg1_, double jarg2, long jarg3, ScaleSet jarg3_);
  public final static native void Measurement_registerTypes();
  public final static native long SetMeasurements_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void SetMeasurements_assign(long jarg1, SetMeasurements jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String SetMeasurements_getClassName();
  public final static native long SetMeasurements_clone(long jarg1, SetMeasurements jarg1_);
  public final static native String SetMeasurements_getConcreteClassName(long jarg1, SetMeasurements jarg1_);
  public final static native void delete_SetMeasurements(long jarg1);
  public final static native long new_SetMeasurements__SWIG_0();
  public final static native long new_SetMeasurements__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_SetMeasurements__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_SetMeasurements__SWIG_3(long jarg1, SetMeasurements jarg1_);
  public final static native void SetMeasurements_setupGroups(long jarg1, SetMeasurements jarg1_);
  public final static native void SetMeasurements_setMemoryOwner(long jarg1, SetMeasurements jarg1_, boolean jarg2);
  public final static native boolean SetMeasurements_setSize(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native int SetMeasurements_getSize(long jarg1, SetMeasurements jarg1_);
  public final static native int SetMeasurements_getIndex__SWIG_0(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_, int jarg3);
  public final static native int SetMeasurements_getIndex__SWIG_1(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native int SetMeasurements_getIndex__SWIG_2(long jarg1, SetMeasurements jarg1_, String jarg2, int jarg3);
  public final static native int SetMeasurements_getIndex__SWIG_3(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_getGroupNamesContaining(long jarg1, SetMeasurements jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetMeasurements_adoptAndAppend(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native boolean SetMeasurements_cloneAndAppend(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native boolean SetMeasurements_insert(long jarg1, SetMeasurements jarg1_, int jarg2, long jarg3, Measurement jarg3_);
  public final static native boolean SetMeasurements_remove__SWIG_0(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native boolean SetMeasurements_remove__SWIG_1(long jarg1, SetMeasurements jarg1_, long jarg2, Measurement jarg2_);
  public final static native void SetMeasurements_clearAndDestroy(long jarg1, SetMeasurements jarg1_);
  public final static native boolean SetMeasurements_set__SWIG_0(long jarg1, SetMeasurements jarg1_, int jarg2, long jarg3, Measurement jarg3_, boolean jarg4);
  public final static native boolean SetMeasurements_set__SWIG_1(long jarg1, SetMeasurements jarg1_, int jarg2, long jarg3, Measurement jarg3_);
  public final static native long SetMeasurements_get__SWIG_0(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native long SetMeasurements_get__SWIG_1(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native boolean SetMeasurements_contains(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_getNames(long jarg1, SetMeasurements jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native int SetMeasurements_getNumGroups(long jarg1, SetMeasurements jarg1_);
  public final static native void SetMeasurements_addGroup(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_removeGroup(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native void SetMeasurements_renameGroup(long jarg1, SetMeasurements jarg1_, String jarg2, String jarg3);
  public final static native void SetMeasurements_addObjectToGroup(long jarg1, SetMeasurements jarg1_, String jarg2, String jarg3);
  public final static native void SetMeasurements_getGroupNames(long jarg1, SetMeasurements jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetMeasurements_getGroup__SWIG_0(long jarg1, SetMeasurements jarg1_, String jarg2);
  public final static native long SetMeasurements_getGroup__SWIG_1(long jarg1, SetMeasurements jarg1_, int jarg2);
  public final static native long MeasurementSet_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MeasurementSet_assign(long jarg1, MeasurementSet jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String MeasurementSet_getClassName();
  public final static native long MeasurementSet_clone(long jarg1, MeasurementSet jarg1_);
  public final static native String MeasurementSet_getConcreteClassName(long jarg1, MeasurementSet jarg1_);
  public final static native long new_MeasurementSet__SWIG_0();
  public final static native long new_MeasurementSet__SWIG_1(long jarg1, MeasurementSet jarg1_);
  public final static native void delete_MeasurementSet(long jarg1);
  public final static native long GenericModelMaker_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void GenericModelMaker_assign(long jarg1, GenericModelMaker jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String GenericModelMaker_getClassName();
  public final static native long GenericModelMaker_clone(long jarg1, GenericModelMaker jarg1_);
  public final static native String GenericModelMaker_getConcreteClassName(long jarg1, GenericModelMaker jarg1_);
  public final static native long new_GenericModelMaker__SWIG_0();
  public final static native long new_GenericModelMaker__SWIG_1(long jarg1, GenericModelMaker jarg1_);
  public final static native void delete_GenericModelMaker(long jarg1);
  public final static native void GenericModelMaker_copyData(long jarg1, GenericModelMaker jarg1_, long jarg2, GenericModelMaker jarg2_);
  public final static native long GenericModelMaker_processModel__SWIG_0(long jarg1, GenericModelMaker jarg1_, String jarg2);
  public final static native long GenericModelMaker_processModel__SWIG_1(long jarg1, GenericModelMaker jarg1_);
  public final static native void GenericModelMaker_registerTypes();
  public final static native String GenericModelMaker_getModelFileName(long jarg1, GenericModelMaker jarg1_);
  public final static native void GenericModelMaker_setModelFileName(long jarg1, GenericModelMaker jarg1_, String jarg2);
  public final static native String GenericModelMaker_getMarkerSetFileName(long jarg1, GenericModelMaker jarg1_);
  public final static native void GenericModelMaker_setMarkerSetFileName(long jarg1, GenericModelMaker jarg1_, String jarg2);
  public final static native long ModelScaler_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ModelScaler_assign(long jarg1, ModelScaler jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String ModelScaler_getClassName();
  public final static native long ModelScaler_clone(long jarg1, ModelScaler jarg1_);
  public final static native String ModelScaler_getConcreteClassName(long jarg1, ModelScaler jarg1_);
  public final static native long new_ModelScaler__SWIG_0();
  public final static native long new_ModelScaler__SWIG_1(long jarg1, ModelScaler jarg1_);
  public final static native void delete_ModelScaler(long jarg1);
  public final static native void ModelScaler_copyData(long jarg1, ModelScaler jarg1_, long jarg2, ModelScaler jarg2_);
  public final static native boolean ModelScaler_processModel__SWIG_0(long jarg1, ModelScaler jarg1_, long jarg2, Model jarg2_, String jarg3, double jarg4);
  public final static native boolean ModelScaler_processModel__SWIG_1(long jarg1, ModelScaler jarg1_, long jarg2, Model jarg2_, String jarg3);
  public final static native boolean ModelScaler_processModel__SWIG_2(long jarg1, ModelScaler jarg1_, long jarg2, Model jarg2_);
  public final static native void ModelScaler_registerTypes();
  public final static native void ModelScaler_private_addMeasurement(long jarg1, ModelScaler jarg1_, long jarg2, Measurement jarg2_);
  public final static native void ModelScaler_private_addScale(long jarg1, ModelScaler jarg1_, long jarg2, Scale jarg2_);
  public final static native boolean ModelScaler_getApply(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setApply(long jarg1, ModelScaler jarg1_, boolean jarg2);
  public final static native long ModelScaler_getMeasurementSet(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setMeasurementSet(long jarg1, ModelScaler jarg1_, long jarg2, MeasurementSet jarg2_);
  public final static native long ModelScaler_getScaleSet(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setScaleSetFile(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native long ModelScaler_getTimeRange(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setTimeRange(long jarg1, ModelScaler jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native boolean ModelScaler_getPreserveMassDist(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setPreserveMassDist(long jarg1, ModelScaler jarg1_, boolean jarg2);
  public final static native long ModelScaler_getScalingOrder(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setScalingOrder(long jarg1, ModelScaler jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native String ModelScaler_getMarkerFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setMarkerFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native String ModelScaler_getOutputModelFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setOutputModelFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native String ModelScaler_getOutputScaleFileName(long jarg1, ModelScaler jarg1_);
  public final static native void ModelScaler_setOutputScaleFileName(long jarg1, ModelScaler jarg1_, String jarg2);
  public final static native void ModelScaler_setPrintResultFiles(long jarg1, ModelScaler jarg1_, boolean jarg2);
  public final static native double ModelScaler_computeMeasurementScaleFactor(long jarg1, ModelScaler jarg1_, long jarg2, State jarg2_, long jarg3, Model jarg3_, long jarg4, MarkerData jarg4_, long jarg5, Measurement jarg5_);
  public final static native long MarkerPlacer_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void MarkerPlacer_assign(long jarg1, MarkerPlacer jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String MarkerPlacer_getClassName();
  public final static native long MarkerPlacer_clone(long jarg1, MarkerPlacer jarg1_);
  public final static native String MarkerPlacer_getConcreteClassName(long jarg1, MarkerPlacer jarg1_);
  public final static native long new_MarkerPlacer__SWIG_0();
  public final static native long new_MarkerPlacer__SWIG_1(long jarg1, MarkerPlacer jarg1_);
  public final static native void delete_MarkerPlacer(long jarg1);
  public final static native void MarkerPlacer_copyData(long jarg1, MarkerPlacer jarg1_, long jarg2, MarkerPlacer jarg2_);
  public final static native boolean MarkerPlacer_processModel__SWIG_0(long jarg1, MarkerPlacer jarg1_, long jarg2, Model jarg2_, String jarg3);
  public final static native boolean MarkerPlacer_processModel__SWIG_1(long jarg1, MarkerPlacer jarg1_, long jarg2, Model jarg2_);
  public final static native boolean MarkerPlacer_getApply(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setApply(long jarg1, MarkerPlacer jarg1_, boolean jarg2);
  public final static native String MarkerPlacer_getStaticPoseFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setStaticPoseFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native long MarkerPlacer_getTimeRange(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setTimeRange(long jarg1, MarkerPlacer jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native long MarkerPlacer_getIKTaskSet(long jarg1, MarkerPlacer jarg1_);
  public final static native String MarkerPlacer_getCoordinateFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setCoordinateFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native String MarkerPlacer_getMarkerFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setMarkerFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native double MarkerPlacer_getMaxMarkerMovement(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setMaxMarkerMovement(long jarg1, MarkerPlacer jarg1_, double jarg2);
  public final static native String MarkerPlacer_getOutputModelFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputModelFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native String MarkerPlacer_getOutputMarkerFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputMarkerFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native String MarkerPlacer_getOutputMotionFileName(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setOutputMotionFileName(long jarg1, MarkerPlacer jarg1_, String jarg2);
  public final static native void MarkerPlacer_setPrintResultFiles(long jarg1, MarkerPlacer jarg1_, boolean jarg2);
  public final static native boolean MarkerPlacer_getMoveModelMarkers(long jarg1, MarkerPlacer jarg1_);
  public final static native void MarkerPlacer_setMoveModelMarkers(long jarg1, MarkerPlacer jarg1_, boolean jarg2);
  public final static native long MarkerPlacer_getOutputStorage(long jarg1, MarkerPlacer jarg1_);
  public final static native long ScaleTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ScaleTool_assign(long jarg1, ScaleTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String ScaleTool_getClassName();
  public final static native long ScaleTool_clone(long jarg1, ScaleTool jarg1_);
  public final static native String ScaleTool_getConcreteClassName(long jarg1, ScaleTool jarg1_);
  public final static native long new_ScaleTool__SWIG_0();
  public final static native long new_ScaleTool__SWIG_1(String jarg1) throws java.io.IOException;
  public final static native long new_ScaleTool__SWIG_2(long jarg1, ScaleTool jarg1_);
  public final static native void delete_ScaleTool(long jarg1);
  public final static native void ScaleTool_copyData(long jarg1, ScaleTool jarg1_, long jarg2, ScaleTool jarg2_);
  public final static native long ScaleTool_createModel(long jarg1, ScaleTool jarg1_);
  public final static native long ScaleTool_getGenericModelMaker(long jarg1, ScaleTool jarg1_);
  public final static native long ScaleTool_getModelScaler(long jarg1, ScaleTool jarg1_);
  public final static native long ScaleTool_getMarkerPlacer(long jarg1, ScaleTool jarg1_);
  public final static native boolean ScaleTool_run(long jarg1, ScaleTool jarg1_);
  public final static native boolean ScaleTool_isDefaultGenericModelMaker(long jarg1, ScaleTool jarg1_);
  public final static native boolean ScaleTool_isDefaultModelScaler(long jarg1, ScaleTool jarg1_);
  public final static native boolean ScaleTool_isDefaultMarkerPlacer(long jarg1, ScaleTool jarg1_);
  public final static native void ScaleTool_registerTypes();
  public final static native double ScaleTool_getSubjectMass(long jarg1, ScaleTool jarg1_);
  public final static native double ScaleTool_getSubjectAge(long jarg1, ScaleTool jarg1_);
  public final static native double ScaleTool_getSubjectHeight(long jarg1, ScaleTool jarg1_);
  public final static native void ScaleTool_setSubjectMass(long jarg1, ScaleTool jarg1_, double jarg2);
  public final static native void ScaleTool_setSubjectAge(long jarg1, ScaleTool jarg1_, double jarg2);
  public final static native void ScaleTool_setSubjectHeight(long jarg1, ScaleTool jarg1_, double jarg2);
  public final static native String ScaleTool_getPathToSubject(long jarg1, ScaleTool jarg1_);
  public final static native void ScaleTool_setPathToSubject(long jarg1, ScaleTool jarg1_, String jarg2);
  public final static native void ScaleTool_setPrintResultFiles(long jarg1, ScaleTool jarg1_, boolean jarg2);
  public final static native long Tool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void Tool_assign(long jarg1, Tool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String Tool_getClassName();
  public final static native long Tool_clone(long jarg1, Tool jarg1_);
  public final static native String Tool_getConcreteClassName(long jarg1, Tool jarg1_);
  public final static native void Tool_copyProperty_results_directory(long jarg1, Tool jarg1_, long jarg2, Tool jarg2_);
  public final static native String Tool_get_results_directory__SWIG_0(long jarg1, Tool jarg1_, int jarg2);
  public final static native long Tool_upd_results_directory__SWIG_0(long jarg1, Tool jarg1_, int jarg2);
  public final static native void Tool_set_results_directory__SWIG_0(long jarg1, Tool jarg1_, int jarg2, String jarg3);
  public final static native int Tool_append_results_directory(long jarg1, Tool jarg1_, String jarg2);
  public final static native void Tool_constructProperty_results_directory(long jarg1, Tool jarg1_, String jarg2);
  public final static native String Tool_get_results_directory__SWIG_1(long jarg1, Tool jarg1_);
  public final static native long Tool_upd_results_directory__SWIG_1(long jarg1, Tool jarg1_);
  public final static native void Tool_set_results_directory__SWIG_1(long jarg1, Tool jarg1_, String jarg2);
  public final static native void delete_Tool(long jarg1);
  public final static native boolean Tool_run(long jarg1, Tool jarg1_) throws java.io.IOException;
  public final static native String Tool_getResultsDir(long jarg1, Tool jarg1_);
  public final static native void Tool_setResultsDir(long jarg1, Tool jarg1_, String jarg2);
  public final static native long DynamicsTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void DynamicsTool_assign(long jarg1, DynamicsTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String DynamicsTool_getClassName();
  public final static native long DynamicsTool_clone(long jarg1, DynamicsTool jarg1_);
  public final static native String DynamicsTool_getConcreteClassName(long jarg1, DynamicsTool jarg1_);
  public final static native void delete_DynamicsTool(long jarg1);
  public final static native void DynamicsTool_disableModelForces(long jarg1, DynamicsTool jarg1_, long jarg2, Model jarg2_, long jarg3, State jarg3_, long jarg4, ArrayStr jarg4_);
  public final static native long DynamicsTool_getExternalLoads(long jarg1, DynamicsTool jarg1_);
  public final static native long DynamicsTool_updExternalLoads(long jarg1, DynamicsTool jarg1_);
  public final static native String DynamicsTool_getExternalLoadsFileName(long jarg1, DynamicsTool jarg1_);
  public final static native void DynamicsTool_setExternalLoadsFileName(long jarg1, DynamicsTool jarg1_, String jarg2);
  public final static native void DynamicsTool_setModelFileName(long jarg1, DynamicsTool jarg1_, String jarg2);
  public final static native String DynamicsTool_getModelFileName(long jarg1, DynamicsTool jarg1_);
  public final static native void DynamicsTool_setStartTime(long jarg1, DynamicsTool jarg1_, double jarg2);
  public final static native double DynamicsTool_getStartTime(long jarg1, DynamicsTool jarg1_);
  public final static native void DynamicsTool_setEndTime(long jarg1, DynamicsTool jarg1_, double jarg2);
  public final static native double DynamicsTool_getEndTime(long jarg1, DynamicsTool jarg1_);
  public final static native void DynamicsTool_setModel(long jarg1, DynamicsTool jarg1_, long jarg2, Model jarg2_);
  public final static native void DynamicsTool_setExcludedForces(long jarg1, DynamicsTool jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native boolean DynamicsTool_createExternalLoads(long jarg1, DynamicsTool jarg1_, String jarg2, long jarg3, Model jarg3_);
  public final static native boolean DynamicsTool_modelHasExternalLoads(long jarg1, DynamicsTool jarg1_);
  public final static native void DynamicsTool_removeExternalLoadsFromModel(long jarg1, DynamicsTool jarg1_);
  public final static native boolean DynamicsTool_run(long jarg1, DynamicsTool jarg1_) throws java.io.IOException;
  public final static native long InverseDynamicsTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void InverseDynamicsTool_assign(long jarg1, InverseDynamicsTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String InverseDynamicsTool_getClassName();
  public final static native long InverseDynamicsTool_clone(long jarg1, InverseDynamicsTool jarg1_);
  public final static native String InverseDynamicsTool_getConcreteClassName(long jarg1, InverseDynamicsTool jarg1_);
  public final static native void delete_InverseDynamicsTool(long jarg1);
  public final static native long new_InverseDynamicsTool__SWIG_0();
  public final static native long new_InverseDynamicsTool__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_InverseDynamicsTool__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_InverseDynamicsTool__SWIG_3(long jarg1, InverseDynamicsTool jarg1_);
  public final static native void InverseDynamicsTool_registerTypes();
  public final static native void InverseDynamicsTool_updateFromXMLNode__SWIG_0(long jarg1, InverseDynamicsTool jarg1_, long jarg2, int jarg3);
  public final static native void InverseDynamicsTool_updateFromXMLNode__SWIG_1(long jarg1, InverseDynamicsTool jarg1_, long jarg2);
  public final static native void InverseDynamicsTool_setCoordinateValues(long jarg1, InverseDynamicsTool jarg1_, long jarg2, Storage jarg2_);
  public final static native String InverseDynamicsTool_getOutputGenForceFileName(long jarg1, InverseDynamicsTool jarg1_);
  public final static native void InverseDynamicsTool_setOutputGenForceFileName(long jarg1, InverseDynamicsTool jarg1_, String jarg2);
  public final static native String InverseDynamicsTool_getCoordinatesFileName(long jarg1, InverseDynamicsTool jarg1_);
  public final static native void InverseDynamicsTool_setCoordinatesFileName(long jarg1, InverseDynamicsTool jarg1_, String jarg2);
  public final static native double InverseDynamicsTool_getLowpassCutoffFrequency(long jarg1, InverseDynamicsTool jarg1_);
  public final static native void InverseDynamicsTool_setLowpassCutoffFrequency(long jarg1, InverseDynamicsTool jarg1_, double jarg2);
  public final static native boolean InverseDynamicsTool_run(long jarg1, InverseDynamicsTool jarg1_) throws java.io.IOException;
  public final static native long ForwardTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void ForwardTool_assign(long jarg1, ForwardTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String ForwardTool_getClassName();
  public final static native long ForwardTool_clone(long jarg1, ForwardTool jarg1_);
  public final static native String ForwardTool_getConcreteClassName(long jarg1, ForwardTool jarg1_);
  public final static native void delete_ForwardTool(long jarg1);
  public final static native long new_ForwardTool__SWIG_0();
  public final static native long new_ForwardTool__SWIG_1(String jarg1, boolean jarg2, boolean jarg3) throws java.io.IOException;
  public final static native long new_ForwardTool__SWIG_2(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_ForwardTool__SWIG_3(String jarg1) throws java.io.IOException;
  public final static native long new_ForwardTool__SWIG_4(long jarg1, ForwardTool jarg1_);
  public final static native void ForwardTool_updateFromXMLNode__SWIG_0(long jarg1, ForwardTool jarg1_, long jarg2, int jarg3);
  public final static native void ForwardTool_updateFromXMLNode__SWIG_1(long jarg1, ForwardTool jarg1_, long jarg2);
  public final static native void ForwardTool_setManager(long jarg1, ForwardTool jarg1_, long jarg2, Manager jarg2_);
  public final static native long ForwardTool_getManager(long jarg1, ForwardTool jarg1_);
  public final static native String ForwardTool_getStatesFileName(long jarg1, ForwardTool jarg1_);
  public final static native void ForwardTool_setStatesFileName(long jarg1, ForwardTool jarg1_, String jarg2);
  public final static native boolean ForwardTool_getUseSpecifiedDt(long jarg1, ForwardTool jarg1_);
  public final static native void ForwardTool_setUseSpecifiedDt(long jarg1, ForwardTool jarg1_, boolean jarg2);
  public final static native void ForwardTool_setPrintResultFiles(long jarg1, ForwardTool jarg1_, boolean jarg2);
  public final static native boolean ForwardTool_run(long jarg1, ForwardTool jarg1_) throws java.io.IOException;
  public final static native void ForwardTool_printResults(long jarg1, ForwardTool jarg1_);
  public final static native double ForwardTool_Step(double jarg1, double jarg2, double jarg3);
  public final static native double ForwardTool_SigmaUp(double jarg1, double jarg2, double jarg3);
  public final static native double ForwardTool_SigmaDn(double jarg1, double jarg2, double jarg3);
  public final static native void ForwardTool_loadStatesStorage(long jarg1, ForwardTool jarg1_, long jarg2, long jarg3);
  public final static native String ForwardTool_getParsingLog(long jarg1, ForwardTool jarg1_);
  public final static native long TrackingTask_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void TrackingTask_assign(long jarg1, TrackingTask jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String TrackingTask_getClassName();
  public final static native long TrackingTask_clone(long jarg1, TrackingTask jarg1_);
  public final static native String TrackingTask_getConcreteClassName(long jarg1, TrackingTask jarg1_);
  public final static native void delete_TrackingTask(long jarg1);
  public final static native void TrackingTask_setModel(long jarg1, TrackingTask jarg1_, long jarg2, Model jarg2_);
  public final static native long TrackingTask_getModel(long jarg1, TrackingTask jarg1_);
  public final static native void TrackingTask_setOn(long jarg1, TrackingTask jarg1_, boolean jarg2);
  public final static native boolean TrackingTask_getOn(long jarg1, TrackingTask jarg1_);
  public final static native void TrackingTask_setWeight__SWIG_0(long jarg1, TrackingTask jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void TrackingTask_setWeight__SWIG_1(long jarg1, TrackingTask jarg1_, double jarg2, double jarg3);
  public final static native void TrackingTask_setWeight__SWIG_2(long jarg1, TrackingTask jarg1_, double jarg2);
  public final static native void TrackingTask_setWeights(long jarg1, TrackingTask jarg1_, long jarg2, ArrayDouble jarg2_);
  public final static native double TrackingTask_getWeight(long jarg1, TrackingTask jarg1_, int jarg2);
  public final static native long TrackingTask_getWeights(long jarg1, TrackingTask jarg1_);
  public final static native int TrackingTask_getNumTaskFunctions(long jarg1, TrackingTask jarg1_);
  public final static native void TrackingTask_setTaskFunctions__SWIG_0(long jarg1, TrackingTask jarg1_, long jarg2, Function jarg2_, long jarg3, Function jarg3_, long jarg4, Function jarg4_);
  public final static native void TrackingTask_setTaskFunctions__SWIG_1(long jarg1, TrackingTask jarg1_, long jarg2, Function jarg2_, long jarg3, Function jarg3_);
  public final static native void TrackingTask_setTaskFunctions__SWIG_2(long jarg1, TrackingTask jarg1_, long jarg2, Function jarg2_);
  public final static native long CMC_Task_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void CMC_Task_assign(long jarg1, CMC_Task jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String CMC_Task_getClassName();
  public final static native long CMC_Task_clone(long jarg1, CMC_Task jarg1_);
  public final static native String CMC_Task_getConcreteClassName(long jarg1, CMC_Task jarg1_);
  public final static native void delete_CMC_Task(long jarg1);
  public final static native void CMC_Task_setWRTBodyName(long jarg1, CMC_Task jarg1_, String jarg2);
  public final static native String CMC_Task_getWRTBodyName(long jarg1, CMC_Task jarg1_);
  public final static native void CMC_Task_setExpressBodyName(long jarg1, CMC_Task jarg1_, String jarg2);
  public final static native String CMC_Task_getExpressBodyName(long jarg1, CMC_Task jarg1_);
  public final static native void CMC_Task_setActive__SWIG_0(long jarg1, CMC_Task jarg1_, boolean jarg2, boolean jarg3, boolean jarg4);
  public final static native void CMC_Task_setActive__SWIG_1(long jarg1, CMC_Task jarg1_, boolean jarg2, boolean jarg3);
  public final static native void CMC_Task_setActive__SWIG_2(long jarg1, CMC_Task jarg1_, boolean jarg2);
  public final static native boolean CMC_Task_getActive(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setWeight__SWIG_0(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void CMC_Task_setWeight__SWIG_1(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3);
  public final static native void CMC_Task_setWeight__SWIG_2(long jarg1, CMC_Task jarg1_, double jarg2);
  public final static native double CMC_Task_getWeight(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setKP__SWIG_0(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void CMC_Task_setKP__SWIG_1(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3);
  public final static native void CMC_Task_setKP__SWIG_2(long jarg1, CMC_Task jarg1_, double jarg2);
  public final static native double CMC_Task_getKP(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setKV__SWIG_0(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void CMC_Task_setKV__SWIG_1(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3);
  public final static native void CMC_Task_setKV__SWIG_2(long jarg1, CMC_Task jarg1_, double jarg2);
  public final static native double CMC_Task_getKV(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setKA__SWIG_0(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void CMC_Task_setKA__SWIG_1(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3);
  public final static native void CMC_Task_setKA__SWIG_2(long jarg1, CMC_Task jarg1_, double jarg2);
  public final static native double CMC_Task_getKA(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setDirection_0(long jarg1, CMC_Task jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void CMC_Task_getDirection_0(long jarg1, CMC_Task jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void CMC_Task_setDirection_1(long jarg1, CMC_Task jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void CMC_Task_getDirection_1(long jarg1, CMC_Task jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void CMC_Task_setDirection_2(long jarg1, CMC_Task jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void CMC_Task_getDirection_2(long jarg1, CMC_Task jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long CMC_Task_getTaskFunction(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setTaskFunctionsForVelocity__SWIG_0(long jarg1, CMC_Task jarg1_, long jarg2, Function jarg2_, long jarg3, Function jarg3_, long jarg4, Function jarg4_);
  public final static native void CMC_Task_setTaskFunctionsForVelocity__SWIG_1(long jarg1, CMC_Task jarg1_, long jarg2, Function jarg2_, long jarg3, Function jarg3_);
  public final static native void CMC_Task_setTaskFunctionsForVelocity__SWIG_2(long jarg1, CMC_Task jarg1_, long jarg2, Function jarg2_);
  public final static native long CMC_Task_getTaskFunctionForVelocity(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setTaskFunctionsForAcceleration__SWIG_0(long jarg1, CMC_Task jarg1_, long jarg2, Function jarg2_, long jarg3, Function jarg3_, long jarg4, Function jarg4_);
  public final static native void CMC_Task_setTaskFunctionsForAcceleration__SWIG_1(long jarg1, CMC_Task jarg1_, long jarg2, Function jarg2_, long jarg3, Function jarg3_);
  public final static native void CMC_Task_setTaskFunctionsForAcceleration__SWIG_2(long jarg1, CMC_Task jarg1_, long jarg2, Function jarg2_);
  public final static native long CMC_Task_getTaskFunctionForAcceleration(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native double CMC_Task_getTaskPosition(long jarg1, CMC_Task jarg1_, int jarg2, double jarg3);
  public final static native double CMC_Task_getTaskVelocity(long jarg1, CMC_Task jarg1_, int jarg2, double jarg3);
  public final static native double CMC_Task_getTaskAcceleration(long jarg1, CMC_Task jarg1_, int jarg2, double jarg3);
  public final static native void CMC_Task_setPositionErrorLast__SWIG_0(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void CMC_Task_setPositionErrorLast__SWIG_1(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3);
  public final static native void CMC_Task_setPositionErrorLast__SWIG_2(long jarg1, CMC_Task jarg1_, double jarg2);
  public final static native double CMC_Task_getPositionErrorLast(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_setVelocityErrorLast__SWIG_0(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native void CMC_Task_setVelocityErrorLast__SWIG_1(long jarg1, CMC_Task jarg1_, double jarg2, double jarg3);
  public final static native void CMC_Task_setVelocityErrorLast__SWIG_2(long jarg1, CMC_Task jarg1_, double jarg2);
  public final static native double CMC_Task_getVelocityErrorLast(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native double CMC_Task_getPositionError(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native double CMC_Task_getVelocityError(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native double CMC_Task_getDesiredAcceleration(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native double CMC_Task_getAcceleration(long jarg1, CMC_Task jarg1_, int jarg2);
  public final static native void CMC_Task_computeErrors(long jarg1, CMC_Task jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_Task_computeDesiredAccelerations__SWIG_0(long jarg1, CMC_Task jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_Task_computeDesiredAccelerations__SWIG_1(long jarg1, CMC_Task jarg1_, long jarg2, State jarg2_, double jarg3, double jarg4);
  public final static native void CMC_Task_computeAccelerations(long jarg1, CMC_Task jarg1_, long jarg2, State jarg2_);
  public final static native void CMC_Task_computeJacobian(long jarg1, CMC_Task jarg1_);
  public final static native void CMC_Task_computeEffectiveMassMatrix(long jarg1, CMC_Task jarg1_);
  public final static native long CMC_Joint_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void CMC_Joint_assign(long jarg1, CMC_Joint jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String CMC_Joint_getClassName();
  public final static native long CMC_Joint_clone(long jarg1, CMC_Joint jarg1_);
  public final static native String CMC_Joint_getConcreteClassName(long jarg1, CMC_Joint jarg1_);
  public final static native long new_CMC_Joint__SWIG_0(String jarg1);
  public final static native long new_CMC_Joint__SWIG_1();
  public final static native long new_CMC_Joint__SWIG_2(long jarg1, CMC_Joint jarg1_);
  public final static native void delete_CMC_Joint(long jarg1);
  public final static native void CMC_Joint_setModel(long jarg1, CMC_Joint jarg1_, long jarg2, Model jarg2_);
  public final static native void CMC_Joint_setCoordinateName(long jarg1, CMC_Joint jarg1_, String jarg2);
  public final static native String CMC_Joint_getCoordinateName(long jarg1, CMC_Joint jarg1_);
  public final static native double CMC_Joint_getLimit(long jarg1, CMC_Joint jarg1_);
  public final static native void CMC_Joint_computeErrors(long jarg1, CMC_Joint jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_Joint_computeDesiredAccelerations__SWIG_0(long jarg1, CMC_Joint jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_Joint_computeDesiredAccelerations__SWIG_1(long jarg1, CMC_Joint jarg1_, long jarg2, State jarg2_, double jarg3, double jarg4);
  public final static native void CMC_Joint_computeAccelerations(long jarg1, CMC_Joint jarg1_, long jarg2, State jarg2_);
  public final static native void CMC_Joint_updateFromXMLNode__SWIG_0(long jarg1, CMC_Joint jarg1_, long jarg2, int jarg3);
  public final static native void CMC_Joint_updateFromXMLNode__SWIG_1(long jarg1, CMC_Joint jarg1_, long jarg2);
  public final static native long CMC_Point_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void CMC_Point_assign(long jarg1, CMC_Point jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String CMC_Point_getClassName();
  public final static native long CMC_Point_clone(long jarg1, CMC_Point jarg1_);
  public final static native String CMC_Point_getConcreteClassName(long jarg1, CMC_Point jarg1_);
  public final static native long new_CMC_Point__SWIG_0(long jarg1, Vec3 jarg1_);
  public final static native long new_CMC_Point__SWIG_1();
  public final static native long new_CMC_Point__SWIG_2(long jarg1, CMC_Point jarg1_);
  public final static native void delete_CMC_Point(long jarg1);
  public final static native void CMC_Point_setModel(long jarg1, CMC_Point jarg1_, long jarg2, Model jarg2_);
  public final static native void CMC_Point_setPoint(long jarg1, CMC_Point jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long CMC_Point_getPoint(long jarg1, CMC_Point jarg1_);
  public final static native void CMC_Point_computeErrors(long jarg1, CMC_Point jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_Point_computeDesiredAccelerations__SWIG_0(long jarg1, CMC_Point jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_Point_computeDesiredAccelerations__SWIG_1(long jarg1, CMC_Point jarg1_, long jarg2, State jarg2_, double jarg3, double jarg4);
  public final static native void CMC_Point_computeAccelerations(long jarg1, CMC_Point jarg1_, long jarg2, State jarg2_);
  public final static native void CMC_Point_updateFromXMLNode__SWIG_0(long jarg1, CMC_Point jarg1_, long jarg2, int jarg3);
  public final static native void CMC_Point_updateFromXMLNode__SWIG_1(long jarg1, CMC_Point jarg1_, long jarg2);
  public final static native long SetTrackingTasks_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void SetTrackingTasks_assign(long jarg1, SetTrackingTasks jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String SetTrackingTasks_getClassName();
  public final static native long SetTrackingTasks_clone(long jarg1, SetTrackingTasks jarg1_);
  public final static native String SetTrackingTasks_getConcreteClassName(long jarg1, SetTrackingTasks jarg1_);
  public final static native void delete_SetTrackingTasks(long jarg1);
  public final static native long new_SetTrackingTasks__SWIG_0();
  public final static native long new_SetTrackingTasks__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_SetTrackingTasks__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_SetTrackingTasks__SWIG_3(long jarg1, SetTrackingTasks jarg1_);
  public final static native void SetTrackingTasks_setupGroups(long jarg1, SetTrackingTasks jarg1_);
  public final static native void SetTrackingTasks_setMemoryOwner(long jarg1, SetTrackingTasks jarg1_, boolean jarg2);
  public final static native boolean SetTrackingTasks_setSize(long jarg1, SetTrackingTasks jarg1_, int jarg2);
  public final static native int SetTrackingTasks_getSize(long jarg1, SetTrackingTasks jarg1_);
  public final static native int SetTrackingTasks_getIndex__SWIG_0(long jarg1, SetTrackingTasks jarg1_, long jarg2, TrackingTask jarg2_, int jarg3);
  public final static native int SetTrackingTasks_getIndex__SWIG_1(long jarg1, SetTrackingTasks jarg1_, long jarg2, TrackingTask jarg2_);
  public final static native int SetTrackingTasks_getIndex__SWIG_2(long jarg1, SetTrackingTasks jarg1_, String jarg2, int jarg3);
  public final static native int SetTrackingTasks_getIndex__SWIG_3(long jarg1, SetTrackingTasks jarg1_, String jarg2);
  public final static native void SetTrackingTasks_getGroupNamesContaining(long jarg1, SetTrackingTasks jarg1_, String jarg2, long jarg3, ArrayStr jarg3_);
  public final static native boolean SetTrackingTasks_adoptAndAppend(long jarg1, SetTrackingTasks jarg1_, long jarg2, TrackingTask jarg2_);
  public final static native boolean SetTrackingTasks_cloneAndAppend(long jarg1, SetTrackingTasks jarg1_, long jarg2, TrackingTask jarg2_);
  public final static native boolean SetTrackingTasks_insert(long jarg1, SetTrackingTasks jarg1_, int jarg2, long jarg3, TrackingTask jarg3_);
  public final static native boolean SetTrackingTasks_remove__SWIG_0(long jarg1, SetTrackingTasks jarg1_, int jarg2);
  public final static native boolean SetTrackingTasks_remove__SWIG_1(long jarg1, SetTrackingTasks jarg1_, long jarg2, TrackingTask jarg2_);
  public final static native void SetTrackingTasks_clearAndDestroy(long jarg1, SetTrackingTasks jarg1_);
  public final static native boolean SetTrackingTasks_set__SWIG_0(long jarg1, SetTrackingTasks jarg1_, int jarg2, long jarg3, TrackingTask jarg3_, boolean jarg4);
  public final static native boolean SetTrackingTasks_set__SWIG_1(long jarg1, SetTrackingTasks jarg1_, int jarg2, long jarg3, TrackingTask jarg3_);
  public final static native long SetTrackingTasks_get__SWIG_0(long jarg1, SetTrackingTasks jarg1_, int jarg2);
  public final static native long SetTrackingTasks_get__SWIG_1(long jarg1, SetTrackingTasks jarg1_, String jarg2);
  public final static native boolean SetTrackingTasks_contains(long jarg1, SetTrackingTasks jarg1_, String jarg2);
  public final static native void SetTrackingTasks_getNames(long jarg1, SetTrackingTasks jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native int SetTrackingTasks_getNumGroups(long jarg1, SetTrackingTasks jarg1_);
  public final static native void SetTrackingTasks_addGroup(long jarg1, SetTrackingTasks jarg1_, String jarg2);
  public final static native void SetTrackingTasks_removeGroup(long jarg1, SetTrackingTasks jarg1_, String jarg2);
  public final static native void SetTrackingTasks_renameGroup(long jarg1, SetTrackingTasks jarg1_, String jarg2, String jarg3);
  public final static native void SetTrackingTasks_addObjectToGroup(long jarg1, SetTrackingTasks jarg1_, String jarg2, String jarg3);
  public final static native void SetTrackingTasks_getGroupNames(long jarg1, SetTrackingTasks jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native long SetTrackingTasks_getGroup__SWIG_0(long jarg1, SetTrackingTasks jarg1_, String jarg2);
  public final static native long SetTrackingTasks_getGroup__SWIG_1(long jarg1, SetTrackingTasks jarg1_, int jarg2);
  public final static native long CMC_TaskSet_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void CMC_TaskSet_assign(long jarg1, CMC_TaskSet jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String CMC_TaskSet_getClassName();
  public final static native long CMC_TaskSet_clone(long jarg1, CMC_TaskSet jarg1_);
  public final static native String CMC_TaskSet_getConcreteClassName(long jarg1, CMC_TaskSet jarg1_);
  public final static native long new_CMC_TaskSet__SWIG_0();
  public final static native long new_CMC_TaskSet__SWIG_1(String jarg1);
  public final static native void delete_CMC_TaskSet(long jarg1);
  public final static native long new_CMC_TaskSet__SWIG_2(long jarg1, CMC_TaskSet jarg1_);
  public final static native void CMC_TaskSet_setModel(long jarg1, CMC_TaskSet jarg1_, long jarg2, Model jarg2_);
  public final static native long CMC_TaskSet_getModel(long jarg1, CMC_TaskSet jarg1_);
  public final static native String CMC_TaskSet_getDataFileName(long jarg1, CMC_TaskSet jarg1_);
  public final static native void CMC_TaskSet_setFunctions(long jarg1, CMC_TaskSet jarg1_, long jarg2, FunctionSet jarg2_);
  public final static native void CMC_TaskSet_setFunctionsForVelocity(long jarg1, CMC_TaskSet jarg1_, long jarg2, FunctionSet jarg2_);
  public final static native void CMC_TaskSet_setFunctionsForAcceleration(long jarg1, CMC_TaskSet jarg1_, long jarg2, FunctionSet jarg2_);
  public final static native int CMC_TaskSet_getNumActiveTaskFunctions(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getTaskPositions(long jarg1, CMC_TaskSet jarg1_, double jarg2);
  public final static native long CMC_TaskSet_getTaskVelocities(long jarg1, CMC_TaskSet jarg1_, double jarg2);
  public final static native long CMC_TaskSet_getTaskAccelerations(long jarg1, CMC_TaskSet jarg1_, double jarg2);
  public final static native long CMC_TaskSet_getPositionGains(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getVelocityGains(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getAccelerationGains(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getPositionErrorsLast(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getPositionErrors(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getVelocityErrorsLast(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getVelocityErrors(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getWeights(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getDesiredAccelerations(long jarg1, CMC_TaskSet jarg1_);
  public final static native long CMC_TaskSet_getAccelerations(long jarg1, CMC_TaskSet jarg1_);
  public final static native void CMC_TaskSet_recordErrorsAsLastErrors(long jarg1, CMC_TaskSet jarg1_);
  public final static native void CMC_TaskSet_computeErrors(long jarg1, CMC_TaskSet jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_TaskSet_computeDesiredAccelerations__SWIG_0(long jarg1, CMC_TaskSet jarg1_, long jarg2, State jarg2_, double jarg3);
  public final static native void CMC_TaskSet_computeDesiredAccelerations__SWIG_1(long jarg1, CMC_TaskSet jarg1_, long jarg2, State jarg2_, double jarg3, double jarg4);
  public final static native void CMC_TaskSet_computeAccelerations(long jarg1, CMC_TaskSet jarg1_, long jarg2, State jarg2_);
  public final static native long CMCTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void CMCTool_assign(long jarg1, CMCTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String CMCTool_getClassName();
  public final static native long CMCTool_clone(long jarg1, CMCTool jarg1_);
  public final static native String CMCTool_getConcreteClassName(long jarg1, CMCTool jarg1_);
  public final static native void delete_CMCTool(long jarg1);
  public final static native long new_CMCTool__SWIG_0();
  public final static native long new_CMCTool__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_CMCTool__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_CMCTool__SWIG_3(long jarg1, CMCTool jarg1_);
  public final static native long CMCTool_getExcludedActuators(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setExcludedActuators(long jarg1, CMCTool jarg1_, long jarg2, ArrayStr jarg2_);
  public final static native String CMCTool_getDesiredPointsFileName(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setDesiredPointsFileName(long jarg1, CMCTool jarg1_, String jarg2);
  public final static native String CMCTool_getDesiredKinematicsFileName(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setDesiredKinematicsFileName(long jarg1, CMCTool jarg1_, String jarg2);
  public final static native String CMCTool_getConstraintsFileName(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setConstraintsFileName(long jarg1, CMCTool jarg1_, String jarg2);
  public final static native String CMCTool_getTaskSetFileName(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setTaskSetFileName(long jarg1, CMCTool jarg1_, String jarg2);
  public final static native String CMCTool_getRRAControlsFileName(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setRRAControlsFileName(long jarg1, CMCTool jarg1_, String jarg2);
  public final static native double CMCTool_getLowpassCutoffFrequency(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setLowpassCutoffFrequency(long jarg1, CMCTool jarg1_, double jarg2);
  public final static native double CMCTool_getTimeWindow(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setTimeWindow(long jarg1, CMCTool jarg1_, double jarg2);
  public final static native String CMCTool_getExternalLoadsFileName(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setExternalLoadsFileName(long jarg1, CMCTool jarg1_, String jarg2);
  public final static native boolean CMCTool_getUseFastTarget(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setUseFastTarget(long jarg1, CMCTool jarg1_, boolean jarg2);
  public final static native boolean CMCTool_run(long jarg1, CMCTool jarg1_) throws java.io.IOException;
  public final static native long CMCTool_getForceStorage(long jarg1, CMCTool jarg1_);
  public final static native void CMCTool_setOriginalForceSet(long jarg1, CMCTool jarg1_, long jarg2, ForceSet jarg2_);
  public final static native long RRATool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void RRATool_assign(long jarg1, RRATool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String RRATool_getClassName();
  public final static native long RRATool_clone(long jarg1, RRATool jarg1_);
  public final static native String RRATool_getConcreteClassName(long jarg1, RRATool jarg1_);
  public final static native void delete_RRATool(long jarg1);
  public final static native long new_RRATool__SWIG_0();
  public final static native long new_RRATool__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_RRATool__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_RRATool__SWIG_3(long jarg1, RRATool jarg1_);
  public final static native String RRATool_getDesiredPointsFileName(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setDesiredPointsFileName(long jarg1, RRATool jarg1_, String jarg2);
  public final static native String RRATool_getDesiredKinematicsFileName(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setDesiredKinematicsFileName(long jarg1, RRATool jarg1_, String jarg2);
  public final static native String RRATool_getConstraintsFileName(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setConstraintsFileName(long jarg1, RRATool jarg1_, String jarg2);
  public final static native String RRATool_getTaskSetFileName(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setTaskSetFileName(long jarg1, RRATool jarg1_, String jarg2);
  public final static native String RRATool_getOutputModelFileName(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setOutputModelFileName(long jarg1, RRATool jarg1_, String jarg2);
  public final static native boolean RRATool_getAdjustCOMToReduceResiduals(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setAdjustCOMToReduceResiduals(long jarg1, RRATool jarg1_, boolean jarg2);
  public final static native String RRATool_getAdjustedCOMBody(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setAdjustedCOMBody(long jarg1, RRATool jarg1_, String jarg2);
  public final static native double RRATool_getLowpassCutoffFrequency(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setLowpassCutoffFrequency(long jarg1, RRATool jarg1_, double jarg2);
  public final static native String RRATool_getExternalLoadsFileName(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setExternalLoadsFileName(long jarg1, RRATool jarg1_, String jarg2);
  public final static native boolean RRATool_run(long jarg1, RRATool jarg1_) throws java.io.IOException;
  public final static native long RRATool_getForceStorage(long jarg1, RRATool jarg1_);
  public final static native void RRATool_setOriginalForceSet(long jarg1, RRATool jarg1_, long jarg2, ForceSet jarg2_);
  public final static native void RRATool_updateFromXMLNode__SWIG_0(long jarg1, RRATool jarg1_, long jarg2, int jarg3);
  public final static native void RRATool_updateFromXMLNode__SWIG_1(long jarg1, RRATool jarg1_, long jarg2);
  public final static native long AnalyzeTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void AnalyzeTool_assign(long jarg1, AnalyzeTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String AnalyzeTool_getClassName();
  public final static native long AnalyzeTool_clone(long jarg1, AnalyzeTool jarg1_);
  public final static native String AnalyzeTool_getConcreteClassName(long jarg1, AnalyzeTool jarg1_);
  public final static native void delete_AnalyzeTool(long jarg1);
  public final static native long new_AnalyzeTool__SWIG_0();
  public final static native long new_AnalyzeTool__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_AnalyzeTool__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native long new_AnalyzeTool__SWIG_3(long jarg1, AnalyzeTool jarg1_);
  public final static native long new_AnalyzeTool__SWIG_4(long jarg1, Model jarg1_);
  public final static native void AnalyzeTool_setStatesStorage(long jarg1, AnalyzeTool jarg1_, long jarg2, Storage jarg2_);
  public final static native long AnalyzeTool_createStatesStorageFromCoordinatesAndSpeeds(long jarg1, Model jarg1_, long jarg2, Storage jarg2_, long jarg3, Storage jarg3_);
  public final static native long AnalyzeTool_getStatesStorage(long jarg1, AnalyzeTool jarg1_);
  public final static native String AnalyzeTool_getStatesFileName(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setStatesFileName(long jarg1, AnalyzeTool jarg1_, String jarg2);
  public final static native String AnalyzeTool_getCoordinatesFileName(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setCoordinatesFileName(long jarg1, AnalyzeTool jarg1_, String jarg2);
  public final static native String AnalyzeTool_getSpeedsFileName(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setSpeedsFileName(long jarg1, AnalyzeTool jarg1_, String jarg2);
  public final static native double AnalyzeTool_getLowpassCutoffFrequency(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setLowpassCutoffFrequency(long jarg1, AnalyzeTool jarg1_, double jarg2);
  public final static native boolean AnalyzeTool_getLoadModelAndInput(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setLoadModelAndInput(long jarg1, AnalyzeTool jarg1_, boolean jarg2);
  public final static native void AnalyzeTool_setStatesFromMotion(long jarg1, AnalyzeTool jarg1_, long jarg2, State jarg2_, long jarg3, Storage jarg3_, boolean jarg4) throws java.io.IOException;
  public final static native void AnalyzeTool_loadStatesFromFile(long jarg1, AnalyzeTool jarg1_, long jarg2, State jarg2_) throws java.io.IOException;
  public final static native void AnalyzeTool_verifyControlsStates(long jarg1, AnalyzeTool jarg1_);
  public final static native void AnalyzeTool_setPrintResultFiles(long jarg1, AnalyzeTool jarg1_, boolean jarg2);
  public final static native void AnalyzeTool_disableIntegrationOnlyProbes(long jarg1, AnalyzeTool jarg1_);
  public final static native boolean AnalyzeTool_run__SWIG_0(long jarg1, AnalyzeTool jarg1_) throws java.io.IOException;
  public final static native boolean AnalyzeTool_run__SWIG_1(long jarg1, AnalyzeTool jarg1_, boolean jarg2) throws java.io.IOException;
  public final static native long InverseKinematicsToolBase_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void InverseKinematicsToolBase_assign(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String InverseKinematicsToolBase_getClassName();
  public final static native long InverseKinematicsToolBase_clone(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native String InverseKinematicsToolBase_getConcreteClassName(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_copyProperty_model_file(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, InverseKinematicsToolBase jarg2_);
  public final static native String InverseKinematicsToolBase_get_model_file__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native long InverseKinematicsToolBase_upd_model_file__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native void InverseKinematicsToolBase_set_model_file__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2, String jarg3);
  public final static native int InverseKinematicsToolBase_append_model_file(long jarg1, InverseKinematicsToolBase jarg1_, String jarg2);
  public final static native void InverseKinematicsToolBase_constructProperty_model_file(long jarg1, InverseKinematicsToolBase jarg1_, String jarg2);
  public final static native String InverseKinematicsToolBase_get_model_file__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native long InverseKinematicsToolBase_upd_model_file__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_set_model_file__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_, String jarg2);
  public final static native void InverseKinematicsToolBase_copyProperty_constraint_weight(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, InverseKinematicsToolBase jarg2_);
  public final static native double InverseKinematicsToolBase_get_constraint_weight__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native long InverseKinematicsToolBase_upd_constraint_weight__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native void InverseKinematicsToolBase_set_constraint_weight__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2, double jarg3);
  public final static native int InverseKinematicsToolBase_append_constraint_weight(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native void InverseKinematicsToolBase_constructProperty_constraint_weight(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native double InverseKinematicsToolBase_get_constraint_weight__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native long InverseKinematicsToolBase_upd_constraint_weight__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_set_constraint_weight__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native void InverseKinematicsToolBase_copyProperty_accuracy(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, InverseKinematicsToolBase jarg2_);
  public final static native double InverseKinematicsToolBase_get_accuracy__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native long InverseKinematicsToolBase_upd_accuracy__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native void InverseKinematicsToolBase_set_accuracy__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2, double jarg3);
  public final static native int InverseKinematicsToolBase_append_accuracy(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native void InverseKinematicsToolBase_constructProperty_accuracy(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native double InverseKinematicsToolBase_get_accuracy__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native long InverseKinematicsToolBase_upd_accuracy__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_set_accuracy__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native void InverseKinematicsToolBase_copyProperty_time_range(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, InverseKinematicsToolBase jarg2_);
  public final static native double InverseKinematicsToolBase_get_time_range(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native long InverseKinematicsToolBase_upd_time_range(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native void InverseKinematicsToolBase_set_time_range(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2, double jarg3);
  public final static native int InverseKinematicsToolBase_append_time_range(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native void InverseKinematicsToolBase_copyProperty_report_errors(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, InverseKinematicsToolBase jarg2_);
  public final static native boolean InverseKinematicsToolBase_get_report_errors__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native long InverseKinematicsToolBase_upd_report_errors__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native void InverseKinematicsToolBase_set_report_errors__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2, boolean jarg3);
  public final static native int InverseKinematicsToolBase_append_report_errors(long jarg1, InverseKinematicsToolBase jarg1_, boolean jarg2);
  public final static native void InverseKinematicsToolBase_constructProperty_report_errors(long jarg1, InverseKinematicsToolBase jarg1_, boolean jarg2);
  public final static native boolean InverseKinematicsToolBase_get_report_errors__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native long InverseKinematicsToolBase_upd_report_errors__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_set_report_errors__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_, boolean jarg2);
  public final static native void InverseKinematicsToolBase_copyProperty_output_motion_file(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, InverseKinematicsToolBase jarg2_);
  public final static native String InverseKinematicsToolBase_get_output_motion_file__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native long InverseKinematicsToolBase_upd_output_motion_file__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2);
  public final static native void InverseKinematicsToolBase_set_output_motion_file__SWIG_0(long jarg1, InverseKinematicsToolBase jarg1_, int jarg2, String jarg3);
  public final static native int InverseKinematicsToolBase_append_output_motion_file(long jarg1, InverseKinematicsToolBase jarg1_, String jarg2);
  public final static native void InverseKinematicsToolBase_constructProperty_output_motion_file(long jarg1, InverseKinematicsToolBase jarg1_, String jarg2);
  public final static native String InverseKinematicsToolBase_get_output_motion_file__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native long InverseKinematicsToolBase_upd_output_motion_file__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_set_output_motion_file__SWIG_1(long jarg1, InverseKinematicsToolBase jarg1_, String jarg2);
  public final static native void delete_InverseKinematicsToolBase(long jarg1);
  public final static native void InverseKinematicsToolBase_setModel(long jarg1, InverseKinematicsToolBase jarg1_, long jarg2, Model jarg2_);
  public final static native void InverseKinematicsToolBase_setStartTime(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native double InverseKinematicsToolBase_getStartTime(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_setEndTime(long jarg1, InverseKinematicsToolBase jarg1_, double jarg2);
  public final static native double InverseKinematicsToolBase_getEndTime(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native void InverseKinematicsToolBase_setOutputMotionFileName(long jarg1, InverseKinematicsToolBase jarg1_, String jarg2);
  public final static native String InverseKinematicsToolBase_getOutputMotionFileName(long jarg1, InverseKinematicsToolBase jarg1_);
  public final static native long InverseKinematicsTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void InverseKinematicsTool_assign(long jarg1, InverseKinematicsTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String InverseKinematicsTool_getClassName();
  public final static native long InverseKinematicsTool_clone(long jarg1, InverseKinematicsTool jarg1_);
  public final static native String InverseKinematicsTool_getConcreteClassName(long jarg1, InverseKinematicsTool jarg1_);
  public final static native void InverseKinematicsTool_copyProperty_IKTaskSet(long jarg1, InverseKinematicsTool jarg1_, long jarg2, InverseKinematicsTool jarg2_);
  public final static native long InverseKinematicsTool_get_IKTaskSet__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native long InverseKinematicsTool_upd_IKTaskSet__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native void InverseKinematicsTool_set_IKTaskSet__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2, long jarg3, IKTaskSet jarg3_);
  public final static native int InverseKinematicsTool_append_IKTaskSet(long jarg1, InverseKinematicsTool jarg1_, long jarg2, IKTaskSet jarg2_);
  public final static native void InverseKinematicsTool_constructProperty_IKTaskSet(long jarg1, InverseKinematicsTool jarg1_, long jarg2, IKTaskSet jarg2_);
  public final static native long InverseKinematicsTool_get_IKTaskSet__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native long InverseKinematicsTool_upd_IKTaskSet__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native void InverseKinematicsTool_set_IKTaskSet__SWIG_1(long jarg1, InverseKinematicsTool jarg1_, long jarg2, IKTaskSet jarg2_);
  public final static native void InverseKinematicsTool_copyProperty_marker_file(long jarg1, InverseKinematicsTool jarg1_, long jarg2, InverseKinematicsTool jarg2_);
  public final static native String InverseKinematicsTool_get_marker_file__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native long InverseKinematicsTool_upd_marker_file__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native void InverseKinematicsTool_set_marker_file__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2, String jarg3);
  public final static native int InverseKinematicsTool_append_marker_file(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native void InverseKinematicsTool_constructProperty_marker_file(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native String InverseKinematicsTool_get_marker_file__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native long InverseKinematicsTool_upd_marker_file__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native void InverseKinematicsTool_set_marker_file__SWIG_1(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native void InverseKinematicsTool_copyProperty_coordinate_file(long jarg1, InverseKinematicsTool jarg1_, long jarg2, InverseKinematicsTool jarg2_);
  public final static native String InverseKinematicsTool_get_coordinate_file__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native long InverseKinematicsTool_upd_coordinate_file__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native void InverseKinematicsTool_set_coordinate_file__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2, String jarg3);
  public final static native int InverseKinematicsTool_append_coordinate_file(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native void InverseKinematicsTool_constructProperty_coordinate_file(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native String InverseKinematicsTool_get_coordinate_file__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native long InverseKinematicsTool_upd_coordinate_file__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native void InverseKinematicsTool_set_coordinate_file__SWIG_1(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native void InverseKinematicsTool_copyProperty_report_marker_locations(long jarg1, InverseKinematicsTool jarg1_, long jarg2, InverseKinematicsTool jarg2_);
  public final static native boolean InverseKinematicsTool_get_report_marker_locations__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native long InverseKinematicsTool_upd_report_marker_locations__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2);
  public final static native void InverseKinematicsTool_set_report_marker_locations__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, int jarg2, boolean jarg3);
  public final static native int InverseKinematicsTool_append_report_marker_locations(long jarg1, InverseKinematicsTool jarg1_, boolean jarg2);
  public final static native void InverseKinematicsTool_constructProperty_report_marker_locations(long jarg1, InverseKinematicsTool jarg1_, boolean jarg2);
  public final static native boolean InverseKinematicsTool_get_report_marker_locations__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native long InverseKinematicsTool_upd_report_marker_locations__SWIG_1(long jarg1, InverseKinematicsTool jarg1_);
  public final static native void InverseKinematicsTool_set_report_marker_locations__SWIG_1(long jarg1, InverseKinematicsTool jarg1_, boolean jarg2);
  public final static native void delete_InverseKinematicsTool(long jarg1);
  public final static native long new_InverseKinematicsTool__SWIG_0();
  public final static native long new_InverseKinematicsTool__SWIG_1(String jarg1, boolean jarg2) throws java.io.IOException;
  public final static native long new_InverseKinematicsTool__SWIG_2(String jarg1) throws java.io.IOException;
  public final static native void InverseKinematicsTool_updateFromXMLNode__SWIG_0(long jarg1, InverseKinematicsTool jarg1_, long jarg2, int jarg3);
  public final static native void InverseKinematicsTool_updateFromXMLNode__SWIG_1(long jarg1, InverseKinematicsTool jarg1_, long jarg2);
  public final static native void InverseKinematicsTool_setMarkerDataFileName(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native String InverseKinematicsTool_getMarkerDataFileName(long jarg1, InverseKinematicsTool jarg1_);
  public final static native void InverseKinematicsTool_setCoordinateFileName(long jarg1, InverseKinematicsTool jarg1_, String jarg2);
  public final static native String InverseKinematicsTool_getCoordinateFileName(long jarg1, InverseKinematicsTool jarg1_);
  public final static native long InverseKinematicsTool_getIKTaskSet(long jarg1, InverseKinematicsTool jarg1_);
  public final static native boolean InverseKinematicsTool_run(long jarg1, InverseKinematicsTool jarg1_) throws java.io.IOException;
  public final static native void InverseKinematicsTool_populateReferences(long jarg1, InverseKinematicsTool jarg1_, long jarg2, MarkersReference jarg2_, long jarg3, SimTKArrayCoordinateReference jarg3_);
  public final static native long OrientationWeightSet_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void OrientationWeightSet_assign(long jarg1, OrientationWeightSet jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String OrientationWeightSet_getClassName();
  public final static native long OrientationWeightSet_clone(long jarg1, OrientationWeightSet jarg1_);
  public final static native String OrientationWeightSet_getConcreteClassName(long jarg1, OrientationWeightSet jarg1_);
  public final static native long new_OrientationWeightSet();
  public final static native void delete_OrientationWeightSet(long jarg1);
  public final static native long IMUInverseKinematicsTool_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void IMUInverseKinematicsTool_assign(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String IMUInverseKinematicsTool_getClassName();
  public final static native long IMUInverseKinematicsTool_clone(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native String IMUInverseKinematicsTool_getConcreteClassName(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native void IMUInverseKinematicsTool_copyProperty_orientations_file(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, IMUInverseKinematicsTool jarg2_);
  public final static native String IMUInverseKinematicsTool_get_orientations_file__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2);
  public final static native long IMUInverseKinematicsTool_upd_orientations_file__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2);
  public final static native void IMUInverseKinematicsTool_set_orientations_file__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2, String jarg3);
  public final static native int IMUInverseKinematicsTool_append_orientations_file(long jarg1, IMUInverseKinematicsTool jarg1_, String jarg2);
  public final static native void IMUInverseKinematicsTool_constructProperty_orientations_file(long jarg1, IMUInverseKinematicsTool jarg1_, String jarg2);
  public final static native String IMUInverseKinematicsTool_get_orientations_file__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native long IMUInverseKinematicsTool_upd_orientations_file__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native void IMUInverseKinematicsTool_set_orientations_file__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_, String jarg2);
  public final static native void IMUInverseKinematicsTool_copyProperty_sensor_to_opensim_rotations(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, IMUInverseKinematicsTool jarg2_);
  public final static native long IMUInverseKinematicsTool_get_sensor_to_opensim_rotations__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2);
  public final static native long IMUInverseKinematicsTool_upd_sensor_to_opensim_rotations__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2);
  public final static native void IMUInverseKinematicsTool_set_sensor_to_opensim_rotations__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2, long jarg3, Vec3 jarg3_);
  public final static native int IMUInverseKinematicsTool_append_sensor_to_opensim_rotations(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void IMUInverseKinematicsTool_constructProperty_sensor_to_opensim_rotations(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, Vec3 jarg2_);
  public final static native long IMUInverseKinematicsTool_get_sensor_to_opensim_rotations__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native long IMUInverseKinematicsTool_upd_sensor_to_opensim_rotations__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native void IMUInverseKinematicsTool_set_sensor_to_opensim_rotations__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, Vec3 jarg2_);
  public final static native void IMUInverseKinematicsTool_copyProperty_orientation_weights(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, IMUInverseKinematicsTool jarg2_);
  public final static native long IMUInverseKinematicsTool_get_orientation_weights__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2);
  public final static native long IMUInverseKinematicsTool_upd_orientation_weights__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2);
  public final static native void IMUInverseKinematicsTool_set_orientation_weights__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, int jarg2, long jarg3, OrientationWeightSet jarg3_);
  public final static native int IMUInverseKinematicsTool_append_orientation_weights(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, OrientationWeightSet jarg2_);
  public final static native void IMUInverseKinematicsTool_constructProperty_orientation_weights(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, OrientationWeightSet jarg2_);
  public final static native long IMUInverseKinematicsTool_get_orientation_weights__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native long IMUInverseKinematicsTool_upd_orientation_weights__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_);
  public final static native void IMUInverseKinematicsTool_set_orientation_weights__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, OrientationWeightSet jarg2_);
  public final static native void delete_IMUInverseKinematicsTool(long jarg1);
  public final static native long new_IMUInverseKinematicsTool__SWIG_0();
  public final static native long new_IMUInverseKinematicsTool__SWIG_1(String jarg1);
  public final static native boolean IMUInverseKinematicsTool_run__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, boolean jarg2) throws java.io.IOException;
  public final static native boolean IMUInverseKinematicsTool_run__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_) throws java.io.IOException;
  public final static native long IMUInverseKinematicsTool_loadMarkersFile(String jarg1);
  public final static native void IMUInverseKinematicsTool_runInverseKinematicsWithOrientationsFromFile__SWIG_0(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, Model jarg2_, String jarg3, boolean jarg4);
  public final static native void IMUInverseKinematicsTool_runInverseKinematicsWithOrientationsFromFile__SWIG_1(long jarg1, IMUInverseKinematicsTool jarg1_, long jarg2, Model jarg2_, String jarg3);
  public final static native void mapCxxExceptionsToJava_set(boolean jarg1);
  public final static native boolean mapCxxExceptionsToJava_get();
  public final static native long OpenSimContext_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimContext_assign(long jarg1, OpenSimContext jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String OpenSimContext_getClassName();
  public final static native long OpenSimContext_clone(long jarg1, OpenSimContext jarg1_);
  public final static native String OpenSimContext_getConcreteClassName(long jarg1, OpenSimContext jarg1_);
  public final static native long new_OpenSimContext(long jarg1, State jarg1_, long jarg2, Model jarg2_);
  public final static native void OpenSimContext_setState(long jarg1, OpenSimContext jarg1_, long jarg2, State jarg2_);
  public final static native void OpenSimContext_setModel(long jarg1, OpenSimContext jarg1_, long jarg2, Model jarg2_);
  public final static native long OpenSimContext_getCurrentStateRef(long jarg1, OpenSimContext jarg1_);
  public final static native long OpenSimContext_getCurrentStateCopy(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_recreateSystemAfterSystemExistsKeepStage(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_recreateSystemAfterSystemExists(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_resetStateToDefault(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_transformPosition(long jarg1, OpenSimContext jarg1_, long jarg2, PhysicalFrame jarg2_, double[] jarg3, double[] jarg4);
  public final static native long OpenSimContext_getTransform(long jarg1, OpenSimContext jarg1_, long jarg2, PhysicalFrame jarg2_);
  public final static native void OpenSimContext_transform(long jarg1, OpenSimContext jarg1_, long jarg2, PhysicalFrame jarg2_, double[] jarg3, long jarg4, PhysicalFrame jarg4_, double[] jarg5);
  public final static native double OpenSimContext_getValue(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_);
  public final static native boolean OpenSimContext_getLocked(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_);
  public final static native void OpenSimContext_setValue__SWIG_0(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_, double jarg3, boolean jarg4);
  public final static native void OpenSimContext_setValue__SWIG_1(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_, double jarg3);
  public final static native void OpenSimContext_setClamped(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_, boolean jarg3);
  public final static native boolean OpenSimContext_getClamped(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_);
  public final static native void OpenSimContext_setLocked(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_, boolean jarg3);
  public final static native boolean OpenSimContext_isPrescribed(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_);
  public final static native boolean OpenSimContext_isConstrained(long jarg1, OpenSimContext jarg1_, long jarg2, Coordinate jarg2_);
  public final static native boolean OpenSimContext_isEnforced(long jarg1, OpenSimContext jarg1_, long jarg2, Constraint jarg2_);
  public final static native void OpenSimContext_setIsEnforced(long jarg1, OpenSimContext jarg1_, long jarg2, Constraint jarg2_, boolean jarg3);
  public final static native boolean OpenSimContext_appliesForce(long jarg1, OpenSimContext jarg1_, long jarg2, Force jarg2_);
  public final static native void OpenSimContext_setAppliesForce(long jarg1, OpenSimContext jarg1_, long jarg2, Force jarg2_, boolean jarg3);
  public final static native double OpenSimContext_getActivation(long jarg1, OpenSimContext jarg1_, long jarg2, Muscle jarg2_);
  public final static native double OpenSimContext_getMuscleLength(long jarg1, OpenSimContext jarg1_, long jarg2, Muscle jarg2_);
  public final static native long OpenSimContext_getCurrentPath(long jarg1, OpenSimContext jarg1_, long jarg2, Muscle jarg2_);
  public final static native void OpenSimContext_copyMuscle(long jarg1, OpenSimContext jarg1_, long jarg2, Muscle jarg2_, long jarg3, Muscle jarg3_);
  public final static native void OpenSimContext_replacePropertyFunction(long jarg1, OpenSimContext jarg1_, long jarg2, OpenSimObject jarg2_, long jarg3, Function jarg3_, long jarg4, Function jarg4_);
  public final static native void OpenSimContext_setXFunction(long jarg1, OpenSimContext jarg1_, long jarg2, MovingPathPoint jarg2_, long jarg3, Function jarg3_);
  public final static native void OpenSimContext_setYFunction(long jarg1, OpenSimContext jarg1_, long jarg2, MovingPathPoint jarg2_, long jarg3, Function jarg3_);
  public final static native void OpenSimContext_setZFunction(long jarg1, OpenSimContext jarg1_, long jarg2, MovingPathPoint jarg2_, long jarg3, Function jarg3_);
  public final static native void OpenSimContext_setXCoordinate(long jarg1, OpenSimContext jarg1_, long jarg2, MovingPathPoint jarg2_, long jarg3, Coordinate jarg3_);
  public final static native void OpenSimContext_setYCoordinate(long jarg1, OpenSimContext jarg1_, long jarg2, MovingPathPoint jarg2_, long jarg3, Coordinate jarg3_);
  public final static native void OpenSimContext_setZCoordinate(long jarg1, OpenSimContext jarg1_, long jarg2, MovingPathPoint jarg2_, long jarg3, Coordinate jarg3_);
  public final static native void OpenSimContext_setBody__SWIG_0(long jarg1, OpenSimContext jarg1_, long jarg2, AbstractPathPoint jarg2_, long jarg3, PhysicalFrame jarg3_);
  public final static native void OpenSimContext_setCoordinate(long jarg1, OpenSimContext jarg1_, long jarg2, ConditionalPathPoint jarg2_, long jarg3, Coordinate jarg3_);
  public final static native void OpenSimContext_setRangeMin(long jarg1, OpenSimContext jarg1_, long jarg2, ConditionalPathPoint jarg2_, double jarg3);
  public final static native void OpenSimContext_setRangeMax(long jarg1, OpenSimContext jarg1_, long jarg2, ConditionalPathPoint jarg2_, double jarg3);
  public final static native boolean OpenSimContext_replacePathPoint(long jarg1, OpenSimContext jarg1_, long jarg2, GeometryPath jarg2_, long jarg3, AbstractPathPoint jarg3_, long jarg4, AbstractPathPoint jarg4_);
  public final static native void OpenSimContext_setLocation__SWIG_0(long jarg1, OpenSimContext jarg1_, long jarg2, PathPoint jarg2_, int jarg3, double jarg4);
  public final static native void OpenSimContext_setLocation__SWIG_1(long jarg1, OpenSimContext jarg1_, long jarg2, PathPoint jarg2_, long jarg3, Vec3 jarg3_);
  public final static native void OpenSimContext_setEndPoint(long jarg1, OpenSimContext jarg1_, long jarg2, PathWrap jarg2_, int jarg3);
  public final static native void OpenSimContext_addPathPoint(long jarg1, OpenSimContext jarg1_, long jarg2, GeometryPath jarg2_, int jarg3, long jarg4, PhysicalFrame jarg4_);
  public final static native boolean OpenSimContext_deletePathPoint(long jarg1, OpenSimContext jarg1_, long jarg2, GeometryPath jarg2_, int jarg3);
  public final static native boolean OpenSimContext_isActivePathPoint(long jarg1, OpenSimContext jarg1_, long jarg2, AbstractPathPoint jarg2_);
  public final static native void OpenSimContext_setStartPoint(long jarg1, OpenSimContext jarg1_, long jarg2, PathWrap jarg2_, int jarg3);
  public final static native void OpenSimContext_addPathWrap(long jarg1, OpenSimContext jarg1_, long jarg2, GeometryPath jarg2_, long jarg3, WrapObject jarg3_);
  public final static native void OpenSimContext_moveUpPathWrap(long jarg1, OpenSimContext jarg1_, long jarg2, GeometryPath jarg2_, int jarg3);
  public final static native void OpenSimContext_moveDownPathWrap(long jarg1, OpenSimContext jarg1_, long jarg2, GeometryPath jarg2_, int jarg3);
  public final static native void OpenSimContext_deletePathWrap(long jarg1, OpenSimContext jarg1_, long jarg2, GeometryPath jarg2_, int jarg3);
  public final static native void OpenSimContext_setBody__SWIG_1(long jarg1, OpenSimContext jarg1_, long jarg2, Marker jarg2_, long jarg3, PhysicalFrame jarg3_, boolean jarg4);
  public final static native void OpenSimContext_updateMarkerSet(long jarg1, OpenSimContext jarg1_, long jarg2, Model jarg2_, long jarg3, MarkerSet jarg3_);
  public final static native void OpenSimContext_getCenterOfMassInGround(long jarg1, OpenSimContext jarg1_, double[] jarg2);
  public final static native int OpenSimContext_step(long jarg1, OpenSimContext jarg1_, long jarg2, Analysis jarg2_);
  public final static native boolean OpenSimContext_solveInverseKinematics(long jarg1, OpenSimContext jarg1_, long jarg2, InverseKinematicsTool jarg2_);
  public final static native void OpenSimContext_setStatesFromMotion(long jarg1, OpenSimContext jarg1_, long jarg2, AnalyzeTool jarg2_, long jarg3, Storage jarg3_, boolean jarg4);
  public final static native void OpenSimContext_loadStatesFromFile(long jarg1, OpenSimContext jarg1_, long jarg2, AnalyzeTool jarg2_);
  public final static native boolean OpenSimContext_processModelScale__SWIG_0(long jarg1, OpenSimContext jarg1_, long jarg2, ModelScaler jarg2_, long jarg3, Model jarg3_, String jarg4, double jarg5);
  public final static native boolean OpenSimContext_processModelScale__SWIG_1(long jarg1, OpenSimContext jarg1_, long jarg2, ModelScaler jarg2_, long jarg3, Model jarg3_, String jarg4);
  public final static native boolean OpenSimContext_processModelScale__SWIG_2(long jarg1, OpenSimContext jarg1_, long jarg2, ModelScaler jarg2_, long jarg3, Model jarg3_);
  public final static native boolean OpenSimContext_processModelMarkerPlacer__SWIG_0(long jarg1, OpenSimContext jarg1_, long jarg2, MarkerPlacer jarg2_, long jarg3, Model jarg3_, String jarg4);
  public final static native boolean OpenSimContext_processModelMarkerPlacer__SWIG_1(long jarg1, OpenSimContext jarg1_, long jarg2, MarkerPlacer jarg2_, long jarg3, Model jarg3_);
  public final static native double OpenSimContext_computeMeasurementScaleFactor(long jarg1, OpenSimContext jarg1_, long jarg2, ModelScaler jarg2_, long jarg3, Model jarg3_, long jarg4, MarkerData jarg4_, long jarg5, Measurement jarg5_);
  public final static native void OpenSimContext_replaceTransformAxisFunction(long jarg1, OpenSimContext jarg1_, long jarg2, TransformAxis jarg2_, long jarg3, Function jarg3_);
  public final static native boolean OpenSimContext_isNaN(double jarg1);
  public final static native double OpenSimContext_getTime(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_getTransformAsDouble16(long jarg1, Transform jarg1_, double[] jarg2);
  public final static native void OpenSimContext_setPropertiesFromState(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_recreateSystemKeepStage(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_realizePosition(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_realizeVelocity(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_cacheModelAndState(long jarg1, OpenSimContext jarg1_);
  public final static native void OpenSimContext_restoreStateFromCachedModel(long jarg1, OpenSimContext jarg1_) throws java.io.IOException;
  public final static native void OpenSimContext_setSocketConnecteePath(long jarg1, OpenSimContext jarg1_, long jarg2, AbstractSocket jarg2_, String jarg3) throws java.io.IOException;
  public final static native void delete_OpenSimContext(long jarg1);
  public final static native long OpenSimJavaObject_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void OpenSimJavaObject_assign(long jarg1, OpenSimJavaObject jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String OpenSimJavaObject_getClassName();
  public final static native long OpenSimJavaObject_clone(long jarg1, OpenSimJavaObject jarg1_);
  public final static native String OpenSimJavaObject_getConcreteClassName(long jarg1, OpenSimJavaObject jarg1_);
  public final static native long new_OpenSimJavaObject();
  public final static native void delete_OpenSimJavaObject(long jarg1);
  public final static native long AdhocModelComponent_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void AdhocModelComponent_assign(long jarg1, AdhocModelComponent jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String AdhocModelComponent_getClassName();
  public final static native long AdhocModelComponent_clone(long jarg1, AdhocModelComponent jarg1_);
  public final static native String AdhocModelComponent_getConcreteClassName(long jarg1, AdhocModelComponent jarg1_);
  public final static native long new_AdhocModelComponent();
  public final static native void delete_AdhocModelComponent(long jarg1);
  public final static native long AnalysisWrapper_safeDownCast(long jarg1, OpenSimObject jarg1_);
  public final static native void AnalysisWrapper_assign(long jarg1, AnalysisWrapper jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native void AnalysisWrapper_assignSwigExplicitAnalysisWrapper(long jarg1, AnalysisWrapper jarg1_, long jarg2, OpenSimObject jarg2_);
  public final static native String AnalysisWrapper_getClassName();
  public final static native long AnalysisWrapper_clone(long jarg1, AnalysisWrapper jarg1_);
  public final static native long AnalysisWrapper_cloneSwigExplicitAnalysisWrapper(long jarg1, AnalysisWrapper jarg1_);
  public final static native String AnalysisWrapper_getConcreteClassName(long jarg1, AnalysisWrapper jarg1_);
  public final static native String AnalysisWrapper_getConcreteClassNameSwigExplicitAnalysisWrapper(long jarg1, AnalysisWrapper jarg1_);
  public final static native long new_AnalysisWrapper__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_AnalysisWrapper__SWIG_1();
  public final static native void delete_AnalysisWrapper(long jarg1);
  public final static native void AnalysisWrapper_director_connect(AnalysisWrapper obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AnalysisWrapper_change_ownership(AnalysisWrapper obj, long cptr, boolean take_or_release);
  public final static native long new_InterruptCallback__SWIG_0(long jarg1, Model jarg1_);
  public final static native long new_InterruptCallback__SWIG_1();
  public final static native void InterruptCallback_interrupt(long jarg1, InterruptCallback jarg1_);
  public final static native int InterruptCallback_step(long jarg1, InterruptCallback jarg1_, long jarg2, State jarg2_, int jarg3);
  public final static native void delete_InterruptCallback(long jarg1);
  public final static native long CoordinateActuator_SWIGUpcast(long jarg1);
  public final static native long ActivationCoordinateActuator_SWIGUpcast(long jarg1);
  public final static native long PointActuator_SWIGUpcast(long jarg1);
  public final static native long TorqueActuator_SWIGUpcast(long jarg1);
  public final static native long BodyActuator_SWIGUpcast(long jarg1);
  public final static native long PointToPointActuator_SWIGUpcast(long jarg1);
  public final static native long ClutchedPathSpring_SWIGUpcast(long jarg1);
  public final static native long SpringGeneralizedForce_SWIGUpcast(long jarg1);
  public final static native long RigidTendonMuscle_SWIGUpcast(long jarg1);
  public final static native long Millard2012AccelerationMuscle_SWIGUpcast(long jarg1);
  public final static native long McKibbenActuator_SWIGUpcast(long jarg1);
  public final static native long Kinematics_SWIGUpcast(long jarg1);
  public final static native long Actuation_SWIGUpcast(long jarg1);
  public final static native long MuscleAnalysis_SWIGUpcast(long jarg1);
  public final static native long InverseDynamics_SWIGUpcast(long jarg1);
  public final static native long StaticOptimization_SWIGUpcast(long jarg1);
  public final static native long ForceReporter_SWIGUpcast(long jarg1);
  public final static native long PointKinematics_SWIGUpcast(long jarg1);
  public final static native long BodyKinematics_SWIGUpcast(long jarg1);
  public final static native long JointReaction_SWIGUpcast(long jarg1);
  public final static native long StatesReporter_SWIGUpcast(long jarg1);
  public final static native long InducedAccelerations_SWIGUpcast(long jarg1);
  public final static native long ProbeReporter_SWIGUpcast(long jarg1);
  public final static native long OutputReporter_SWIGUpcast(long jarg1);
  public final static native long IKTask_SWIGUpcast(long jarg1);
  public final static native long SetIKTasks_SWIGUpcast(long jarg1);
  public final static native long IKMarkerTask_SWIGUpcast(long jarg1);
  public final static native long IKCoordinateTask_SWIGUpcast(long jarg1);
  public final static native long IKTaskSet_SWIGUpcast(long jarg1);
  public final static native long MarkerPair_SWIGUpcast(long jarg1);
  public final static native long SetMarkerPairs_SWIGUpcast(long jarg1);
  public final static native long MarkerPairSet_SWIGUpcast(long jarg1);
  public final static native long Measurement_SWIGUpcast(long jarg1);
  public final static native long SetMeasurements_SWIGUpcast(long jarg1);
  public final static native long MeasurementSet_SWIGUpcast(long jarg1);
  public final static native long GenericModelMaker_SWIGUpcast(long jarg1);
  public final static native long ModelScaler_SWIGUpcast(long jarg1);
  public final static native long MarkerPlacer_SWIGUpcast(long jarg1);
  public final static native long ScaleTool_SWIGUpcast(long jarg1);
  public final static native long Tool_SWIGUpcast(long jarg1);
  public final static native long DynamicsTool_SWIGUpcast(long jarg1);
  public final static native long InverseDynamicsTool_SWIGUpcast(long jarg1);
  public final static native long ForwardTool_SWIGUpcast(long jarg1);
  public final static native long TrackingTask_SWIGUpcast(long jarg1);
  public final static native long CMC_Task_SWIGUpcast(long jarg1);
  public final static native long CMC_Joint_SWIGUpcast(long jarg1);
  public final static native long CMC_Point_SWIGUpcast(long jarg1);
  public final static native long SetTrackingTasks_SWIGUpcast(long jarg1);
  public final static native long CMC_TaskSet_SWIGUpcast(long jarg1);
  public final static native long CMCTool_SWIGUpcast(long jarg1);
  public final static native long RRATool_SWIGUpcast(long jarg1);
  public final static native long AnalyzeTool_SWIGUpcast(long jarg1);
  public final static native long InverseKinematicsToolBase_SWIGUpcast(long jarg1);
  public final static native long InverseKinematicsTool_SWIGUpcast(long jarg1);
  public final static native long OrientationWeightSet_SWIGUpcast(long jarg1);
  public final static native long IMUInverseKinematicsTool_SWIGUpcast(long jarg1);
  public final static native long OpenSimContext_SWIGUpcast(long jarg1);
  public final static native long OpenSimJavaObject_SWIGUpcast(long jarg1);
  public final static native long AdhocModelComponent_SWIGUpcast(long jarg1);
  public final static native long AnalysisWrapper_SWIGUpcast(long jarg1);
  public final static native long InterruptCallback_SWIGUpcast(long jarg1);

  public static long SwigDirector_AnalysisWrapper_clone(AnalysisWrapper jself) {
    return AnalysisWrapper.getCPtr(jself.clone());
  }
  public static String SwigDirector_AnalysisWrapper_getConcreteClassName(AnalysisWrapper jself) {
    return jself.getConcreteClassName();
  }
  public static void SwigDirector_AnalysisWrapper_assign(AnalysisWrapper jself, long aObject) {
    jself.assign(new OpenSimObject(aObject, false));
  }
  public static void SwigDirector_AnalysisWrapper_updateFromXMLNode(AnalysisWrapper jself, long objectElement, int versionNumber) {
    jself.updateFromXMLNode(new SWIGTYPE_p_SimTK__Xml__Element(objectElement, false), versionNumber);
  }
  public static boolean SwigDirector_AnalysisWrapper_isA(AnalysisWrapper jself, String type) {
    return jself.isA(type);
  }
  public static int SwigDirector_AnalysisWrapper_begin(AnalysisWrapper jself, long s) {
    return jself.begin(new State(s, false));
  }
  public static int SwigDirector_AnalysisWrapper_step(AnalysisWrapper jself, long s, int stepNumber) {
    return jself.step(new State(s, false), stepNumber);
  }
  public static int SwigDirector_AnalysisWrapper_end(AnalysisWrapper jself, long s) {
    return jself.end(new State(s, false));
  }
  public static void SwigDirector_AnalysisWrapper_setModel(AnalysisWrapper jself, long aModel) {
    jself.setModel(new Model(aModel, false));
  }
  public static void SwigDirector_AnalysisWrapper_setStatesStore(AnalysisWrapper jself, long aStatesStore) {
    jself.setStatesStore(new Storage(aStatesStore, false));
  }
  public static boolean SwigDirector_AnalysisWrapper_proceed__SWIG_0(AnalysisWrapper jself, int aStep) {
    return jself.proceed(aStep);
  }
  public static boolean SwigDirector_AnalysisWrapper_proceed__SWIG_1(AnalysisWrapper jself) {
    return jself.proceed();
  }
  public static long SwigDirector_AnalysisWrapper_getStorageList(AnalysisWrapper jself) {
    return ArrayStorage.getCPtr(jself.getStorageList());
  }
  public static int SwigDirector_AnalysisWrapper_printResults__SWIG_0(AnalysisWrapper jself, String aBaseName, String aDir, double aDT, String aExtension) {
    return jself.printResults(aBaseName, aDir, aDT, aExtension);
  }
  public static int SwigDirector_AnalysisWrapper_printResults__SWIG_1(AnalysisWrapper jself, String aBaseName, String aDir, double aDT) {
    return jself.printResults(aBaseName, aDir, aDT);
  }
  public static int SwigDirector_AnalysisWrapper_printResults__SWIG_2(AnalysisWrapper jself, String aBaseName, String aDir) {
    return jself.printResults(aBaseName, aDir);
  }
  public static int SwigDirector_AnalysisWrapper_printResults__SWIG_3(AnalysisWrapper jself, String aBaseName) {
    return jself.printResults(aBaseName);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
