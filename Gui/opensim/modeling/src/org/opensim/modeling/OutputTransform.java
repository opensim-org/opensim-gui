/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class OutputTransform extends AbstractOutput {
  private transient long swigCPtr;

  protected OutputTransform(long cPtr, boolean cMemoryOwn) {
    super(opensimCommonJNI.OutputTransform_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OutputTransform obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimCommonJNI.delete_OutputTransform(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OutputTransform() {
    this(opensimCommonJNI.new_OutputTransform__SWIG_0(), true);
  }

  public OutputTransform(String name, SWIGTYPE_p_std__functionT_void_fOpenSim__Component_const_p_SimTK__State_const_R_std__string_const_R_SimTK__Transform_T_double_t_RF_t outputFunction, Stage dependsOnStage, boolean isList) {
    this(opensimCommonJNI.new_OutputTransform__SWIG_1(name, SWIGTYPE_p_std__functionT_void_fOpenSim__Component_const_p_SimTK__State_const_R_std__string_const_R_SimTK__Transform_T_double_t_RF_t.getCPtr(outputFunction), Stage.getCPtr(dependsOnStage), dependsOnStage, isList), true);
  }

  public OutputTransform(OutputTransform source) {
    this(opensimCommonJNI.new_OutputTransform__SWIG_2(OutputTransform.getCPtr(source), source), true);
  }

  public boolean isCompatible(AbstractOutput o) {
    return opensimCommonJNI.OutputTransform_isCompatible(swigCPtr, this, AbstractOutput.getCPtr(o), o);
  }

  public void compatibleAssign(AbstractOutput o) {
    opensimCommonJNI.OutputTransform_compatibleAssign(swigCPtr, this, AbstractOutput.getCPtr(o), o);
  }

  public void clearChannels() {
    opensimCommonJNI.OutputTransform_clearChannels(swigCPtr, this);
  }

  public void addChannel(String channelName) {
    opensimCommonJNI.OutputTransform_addChannel(swigCPtr, this, channelName);
  }

  public AbstractChannel getChannel(String name) {
    return new AbstractChannel(opensimCommonJNI.OutputTransform_getChannel(swigCPtr, this, name), false);
  }

  public SWIGTYPE_p_std__mapT_std__string_OpenSim__OutputT_SimTK__Transform_T_double_t_t__Channel_t getChannels() {
    return new SWIGTYPE_p_std__mapT_std__string_OpenSim__OutputT_SimTK__Transform_T_double_t_t__Channel_t(opensimCommonJNI.OutputTransform_getChannels(swigCPtr, this), false);
  }

  public Transform getValue(State state) {
    return new Transform(opensimCommonJNI.OutputTransform_getValue(swigCPtr, this, State.getCPtr(state), state), false);
  }

  public String getTypeName() {
    return opensimCommonJNI.OutputTransform_getTypeName(swigCPtr, this);
  }

  public String getValueAsString(State state) {
    return opensimCommonJNI.OutputTransform_getValueAsString(swigCPtr, this, State.getCPtr(state), state);
  }

  public AbstractOutput clone() {
    long cPtr = opensimCommonJNI.OutputTransform_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new OutputTransform(cPtr, true);
  }

  public static boolean isA(AbstractOutput p) {
    return opensimCommonJNI.OutputTransform_isA(AbstractOutput.getCPtr(p), p);
  }

  public static OutputTransform downcast(AbstractOutput p) {
    return new OutputTransform(opensimCommonJNI.OutputTransform_downcast(AbstractOutput.getCPtr(p), p), false);
  }

  public static OutputTransform updDowncast(AbstractOutput p) {
    return new OutputTransform(opensimCommonJNI.OutputTransform_updDowncast(AbstractOutput.getCPtr(p), p), false);
  }

  public static OutputTransform safeDownCast(AbstractOutput parent) {
    long cPtr = opensimCommonJNI.OutputTransform_safeDownCast(AbstractOutput.getCPtr(parent), parent);
    return (cPtr == 0) ? null : new OutputTransform(cPtr, false);
  }

}
