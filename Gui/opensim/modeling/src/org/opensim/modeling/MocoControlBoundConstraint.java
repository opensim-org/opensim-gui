/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class MocoControlBoundConstraint extends MocoPathConstraint {
  private transient long swigCPtr;

  public MocoControlBoundConstraint(long cPtr, boolean cMemoryOwn) {
    super(opensimMocoJNI.MocoControlBoundConstraint_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(MocoControlBoundConstraint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimMocoJNI.delete_MocoControlBoundConstraint(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static MocoControlBoundConstraint safeDownCast(OpenSimObject obj) {
    long cPtr = opensimMocoJNI.MocoControlBoundConstraint_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new MocoControlBoundConstraint(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimMocoJNI.MocoControlBoundConstraint_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimMocoJNI.MocoControlBoundConstraint_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimMocoJNI.MocoControlBoundConstraint_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new MocoControlBoundConstraint(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimMocoJNI.MocoControlBoundConstraint_getConcreteClassName(swigCPtr, this);
  }

  public MocoControlBoundConstraint() {
    this(opensimMocoJNI.new_MocoControlBoundConstraint(), true);
  }

  public void addControlPath(String controlPath) {
    opensimMocoJNI.MocoControlBoundConstraint_addControlPath(swigCPtr, this, controlPath);
  }

  public void setControlPaths(StdVectorString controlPaths) {
    opensimMocoJNI.MocoControlBoundConstraint_setControlPaths(swigCPtr, this, StdVectorString.getCPtr(controlPaths), controlPaths);
  }

  public void clearControlPaths() {
    opensimMocoJNI.MocoControlBoundConstraint_clearControlPaths(swigCPtr, this);
  }

  public StdVectorString getControlPaths() {
    return new StdVectorString(opensimMocoJNI.MocoControlBoundConstraint_getControlPaths(swigCPtr, this), true);
  }

  public void setLowerBound(Function f) {
    opensimMocoJNI.MocoControlBoundConstraint_setLowerBound(swigCPtr, this, Function.getCPtr(f), f);
  }

  public void clearLowerBound() {
    opensimMocoJNI.MocoControlBoundConstraint_clearLowerBound(swigCPtr, this);
  }

  public boolean hasLowerBound() {
    return opensimMocoJNI.MocoControlBoundConstraint_hasLowerBound(swigCPtr, this);
  }

  public Function getLowerBound() {
    return new Function(opensimMocoJNI.MocoControlBoundConstraint_getLowerBound(swigCPtr, this), false);
  }

  public void setUpperBound(Function f) {
    opensimMocoJNI.MocoControlBoundConstraint_setUpperBound(swigCPtr, this, Function.getCPtr(f), f);
  }

  public void clearUpperBound() {
    opensimMocoJNI.MocoControlBoundConstraint_clearUpperBound(swigCPtr, this);
  }

  public boolean hasUpperBound() {
    return opensimMocoJNI.MocoControlBoundConstraint_hasUpperBound(swigCPtr, this);
  }

  public Function getUpperBound() {
    return new Function(opensimMocoJNI.MocoControlBoundConstraint_getUpperBound(swigCPtr, this), false);
  }

  public void setEqualityWithLower(boolean v) {
    opensimMocoJNI.MocoControlBoundConstraint_setEqualityWithLower(swigCPtr, this, v);
  }

  public boolean getEqualityWithLower() {
    return opensimMocoJNI.MocoControlBoundConstraint_getEqualityWithLower(swigCPtr, this);
  }

}
