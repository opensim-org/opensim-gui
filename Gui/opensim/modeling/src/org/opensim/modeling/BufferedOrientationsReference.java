/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

/**
 * Subclass of OrientationsReference that handles live data by providing a DataQueue<br>
 * that allows clients to push data into and allows the InverseKinematicsSolver to <br>
 * draw data from for solving.<br>
 * Ideally this would be templatized, allowing for all Reference classes to leverage it.<br>
 * <br>
 * @author Ayman Habib
 */
public class BufferedOrientationsReference extends OrientationsReference {
  private transient long swigCPtr;

  public BufferedOrientationsReference(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.BufferedOrientationsReference_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(BufferedOrientationsReference obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_BufferedOrientationsReference(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static BufferedOrientationsReference safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.BufferedOrientationsReference_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new BufferedOrientationsReference(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.BufferedOrientationsReference_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.BufferedOrientationsReference_getClassName();
  }

  public OpenSimObject unused_clone() {
    long cPtr = opensimSimulationJNI.BufferedOrientationsReference_unused_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new BufferedOrientationsReference(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.BufferedOrientationsReference_getConcreteClassName(swigCPtr, this);
  }

  public BufferedOrientationsReference() {
    this(opensimSimulationJNI.new_BufferedOrientationsReference__SWIG_0(), true);
  }

  public BufferedOrientationsReference(BufferedOrientationsReference arg0) {
    this(opensimSimulationJNI.new_BufferedOrientationsReference__SWIG_1(BufferedOrientationsReference.getCPtr(arg0), arg0), true);
  }

  /**
   *  get the time range for which this Reference values are valid,<br>
   *         based on the loaded orientation data.
   */
  public Vec2 getValidTimeRange() {
    return new Vec2(opensimSimulationJNI.BufferedOrientationsReference_getValidTimeRange(swigCPtr, this), true);
  }

  /**
   *  get the values from the base OrientationsReference, or from<br>
   * the client provided data that was queued earlier using putValues call. 
   */
  public void getValuesAtTime(double time, SimTKArrayRotation values) {
    opensimSimulationJNI.BufferedOrientationsReference_getValuesAtTime(swigCPtr, this, time, SimTKArrayRotation.getCPtr(values), values);
  }

  /**
   *  add passed in values to data procesing Queue 
   */
  public void putValues(double time, SWIGTYPE_p_SimTK__RowVector_T_SimTK__Rotation_T_SimTK__Real_t_t dataRow) {
    opensimSimulationJNI.BufferedOrientationsReference_putValues(swigCPtr, this, time, SWIGTYPE_p_SimTK__RowVector_T_SimTK__Rotation_T_SimTK__Real_t_t.getCPtr(dataRow));
  }

  public double getNextValuesAndTime(SimTKArrayRotation values) {
    return opensimSimulationJNI.BufferedOrientationsReference_getNextValuesAndTime(swigCPtr, this, SimTKArrayRotation.getCPtr(values), values);
  }

  public boolean hasNext() {
    return opensimSimulationJNI.BufferedOrientationsReference_hasNext(swigCPtr, this);
  }

  public void setFinished(boolean finished) {
    opensimSimulationJNI.BufferedOrientationsReference_setFinished(swigCPtr, this, finished);
  }

}
