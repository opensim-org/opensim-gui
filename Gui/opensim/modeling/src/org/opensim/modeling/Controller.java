/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Controller extends ModelComponent {
  private transient long swigCPtr;

  protected Controller(long cPtr, boolean cMemoryOwn) {
    super(opensimSimulationJNI.Controller_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Controller obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimulationJNI.delete_Controller(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Controller safeDownCast(OpenSimObject obj) {
    long cPtr = opensimSimulationJNI.Controller_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Controller(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimSimulationJNI.Controller_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimSimulationJNI.Controller_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimSimulationJNI.Controller_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Controller(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimSimulationJNI.Controller_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_enabled(Controller source) {
    opensimSimulationJNI.Controller_copyProperty_enabled(swigCPtr, this, Controller.getCPtr(source), source);
  }

  public boolean get_enabled(int i) {
    return opensimSimulationJNI.Controller_get_enabled__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_enabled(int i) {
    return new SWIGTYPE_p_bool(opensimSimulationJNI.Controller_upd_enabled__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_enabled(int i, boolean value) {
    opensimSimulationJNI.Controller_set_enabled__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_enabled(boolean value) {
    return opensimSimulationJNI.Controller_append_enabled(swigCPtr, this, value);
  }

  public void constructProperty_enabled(boolean initValue) {
    opensimSimulationJNI.Controller_constructProperty_enabled(swigCPtr, this, initValue);
  }

  public boolean get_enabled() {
    return opensimSimulationJNI.Controller_get_enabled__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_enabled() {
    return new SWIGTYPE_p_bool(opensimSimulationJNI.Controller_upd_enabled__SWIG_1(swigCPtr, this), false);
  }

  public void set_enabled(boolean value) {
    opensimSimulationJNI.Controller_set_enabled__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_actuator_list(Controller source) {
    opensimSimulationJNI.Controller_copyProperty_actuator_list(swigCPtr, this, Controller.getCPtr(source), source);
  }

  public String get_actuator_list(int i) {
    return opensimSimulationJNI.Controller_get_actuator_list(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_actuator_list(int i) {
    return new SWIGTYPE_p_std__string(opensimSimulationJNI.Controller_upd_actuator_list(swigCPtr, this, i), false);
  }

  public void set_actuator_list(int i, String value) {
    opensimSimulationJNI.Controller_set_actuator_list(swigCPtr, this, i, value);
  }

  public int append_actuator_list(String value) {
    return opensimSimulationJNI.Controller_append_actuator_list(swigCPtr, this, value);
  }

  public void constructProperty_actuator_list() {
    opensimSimulationJNI.Controller_constructProperty_actuator_list(swigCPtr, this);
  }

  public boolean isEnabled() {
    return opensimSimulationJNI.Controller_isEnabled(swigCPtr, this);
  }

  public void setEnabled(boolean enableFlag) {
    opensimSimulationJNI.Controller_setEnabled(swigCPtr, this, enableFlag);
  }

  public void setActuators(SetActuators actuators) {
    opensimSimulationJNI.Controller_setActuators(swigCPtr, this, SetActuators.getCPtr(actuators), actuators);
  }

  public void addActuator(Actuator actuator) {
    opensimSimulationJNI.Controller_addActuator(swigCPtr, this, Actuator.getCPtr(actuator), actuator);
  }

  public SWIGTYPE_p_OpenSim__SetT_OpenSim__Actuator_const_t getActuatorSet() {
    return new SWIGTYPE_p_OpenSim__SetT_OpenSim__Actuator_const_t(opensimSimulationJNI.Controller_getActuatorSet(swigCPtr, this), false);
  }

  public SWIGTYPE_p_OpenSim__SetT_OpenSim__Actuator_const_t updActuators() {
    return new SWIGTYPE_p_OpenSim__SetT_OpenSim__Actuator_const_t(opensimSimulationJNI.Controller_updActuators(swigCPtr, this), false);
  }

  public void computeControls(State s, Vector controls) {
    opensimSimulationJNI.Controller_computeControls(swigCPtr, this, State.getCPtr(s), s, Vector.getCPtr(controls), controls);
  }

  public int getNumControls() {
    return opensimSimulationJNI.Controller_getNumControls(swigCPtr, this);
  }

}
