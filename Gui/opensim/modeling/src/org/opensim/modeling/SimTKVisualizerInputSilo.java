/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class SimTKVisualizerInputSilo extends SimTKVisualizerInputListener {
  private transient long swigCPtr;

  protected SimTKVisualizerInputSilo(long cPtr, boolean cMemoryOwn) {
    super(opensimSimbodyJNI.SimTKVisualizerInputSilo_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SimTKVisualizerInputSilo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimSimbodyJNI.delete_SimTKVisualizerInputSilo(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SimTKVisualizerInputSilo() {
    this(opensimSimbodyJNI.new_SimTKVisualizerInputSilo(), true);
  }

  public boolean isAnyUserInput() {
    return opensimSimbodyJNI.SimTKVisualizerInputSilo_isAnyUserInput(swigCPtr, this);
  }

  public void waitForAnyUserInput() {
    opensimSimbodyJNI.SimTKVisualizerInputSilo_waitForAnyUserInput(swigCPtr, this);
  }

  public boolean takeKeyHit(SWIGTYPE_p_unsigned_int key, SWIGTYPE_p_unsigned_int modifiers) {
    return opensimSimbodyJNI.SimTKVisualizerInputSilo_takeKeyHit(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(key), SWIGTYPE_p_unsigned_int.getCPtr(modifiers));
  }

  public void waitForKeyHit(SWIGTYPE_p_unsigned_int key, SWIGTYPE_p_unsigned_int modifiers) {
    opensimSimbodyJNI.SimTKVisualizerInputSilo_waitForKeyHit(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(key), SWIGTYPE_p_unsigned_int.getCPtr(modifiers));
  }

  public boolean takeMenuPick(SWIGTYPE_p_int menu, SWIGTYPE_p_int item) {
    return opensimSimbodyJNI.SimTKVisualizerInputSilo_takeMenuPick(swigCPtr, this, SWIGTYPE_p_int.getCPtr(menu), SWIGTYPE_p_int.getCPtr(item));
  }

  public void waitForMenuPick(SWIGTYPE_p_int menu, SWIGTYPE_p_int item) {
    opensimSimbodyJNI.SimTKVisualizerInputSilo_waitForMenuPick(swigCPtr, this, SWIGTYPE_p_int.getCPtr(menu), SWIGTYPE_p_int.getCPtr(item));
  }

  public boolean takeSliderMove(SWIGTYPE_p_int slider, SWIGTYPE_p_double value) {
    return opensimSimbodyJNI.SimTKVisualizerInputSilo_takeSliderMove(swigCPtr, this, SWIGTYPE_p_int.getCPtr(slider), SWIGTYPE_p_double.getCPtr(value));
  }

  public void waitForSliderMove(SWIGTYPE_p_int slider, SWIGTYPE_p_double value) {
    opensimSimbodyJNI.SimTKVisualizerInputSilo_waitForSliderMove(swigCPtr, this, SWIGTYPE_p_int.getCPtr(slider), SWIGTYPE_p_double.getCPtr(value));
  }

  public void clear() {
    opensimSimbodyJNI.SimTKVisualizerInputSilo_clear(swigCPtr, this);
  }

  public long takeKeyHitKeyOnly() {
    return opensimSimbodyJNI.SimTKVisualizerInputSilo_takeKeyHitKeyOnly(swigCPtr, this);
  }

}
